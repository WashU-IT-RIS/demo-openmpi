
.ad l

.TH lsb.resources 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBlsb.resources\fR
.ce 0

.sp 2
The lsb.resources file contains configuration information for
resource allocation limits, exports, resource usage limits, and
guarantee policies. This file is optional.
.sp 2
The lsb.resources file is stored in the directory
LSB_CONFDIR/\fIcluster_name\fR/configdir, where \fBLSB_CONFDIR\fR
is defined in the lsf.conf file.
.SH Changing lsb.resources configuration

.sp 2
After changing the lsb.resources file, run badmin reconfig to
reconfigure mbatchd.
.sp 2
Parent topic: Configuration files
.sp 2

.ce 1000
\fB#INCLUDE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fR#INCLUDE\fR \fR"path-to-file"\fR
.SH Description

.sp 2
Inserts a configuration setting from another file to the current
location. Use this directive to dedicate control of a portion of
the configuration to other users or user groups by providing
write access for the included file to specific users or user
groups, and to ensure consistency of configuration file settings
in different clusters (if you are using the LSF multicluster
capability).
.sp 2
See more information on shared configuration file content in
Administering IBM Spectrum LSF
.sp 2
\fR#INCLUDE\fR can be inserted anywhere in the local
configuration file.
.SH Default

.sp 2
Not defined.
.sp 2

.ce 1000
\fBLimit section\fR
.ce 0

.sp 2
The Limit section sets limits for the maximum amount of the
specified resources that must be available for different classes
of jobs to start, and which resource consumers the limits apply
to. Limits are enforced during job resource allocation.
.sp 2
\fBTip: \fR
.sp 2
For limits to be enforced, jobs must specify rusage resource
requirements (bsub -R or RES_REQ in lsb.queues).
.sp 2
The blimits command displays view current usage of resource
allocation limits configured in Limit sections in lsb.resources:
.SH Limit section structure

.sp 2
Each set of limits is defined in a Limit section enclosed by
\fRBegin Limit\fR and \fREnd Limit\fR.
.sp 2
A Limit section has two formats:
.sp 2
*  Vertical tabular
.sp 2
*  Horizontal
.sp 2
The file can contain sections in both formats. In either format,
you must configure a limit for at least one consumer and one
resource. The Limit section cannot be empty.
.SH Vertical tabular format

.sp 2
Use the vertical format for simple configuration conditions
involving only a few consumers and resource limits.
.sp 2
The first row consists of an optional NAME and the following
keywords for:
.sp 2
*  Resource types:
.sp 2
   *  Job slots (\fBSLOTS\fR) and per-processor job slots
      (\fBSLOTS_PER_PROCESSOR\fR).
.sp 2
   *  Memory (\fBMEM\fR), in MB or the unit set in the
      \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file.
.sp 2
   *  Swap space (\fBSWP\fR), in MB or the unit set in the
      \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file.
.sp 2
   *  Temp space (\fBTMP\fR), in MB or the unit set in the
      \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file.
.sp 2
   *  Running and suspended (RUN, SSUSP, USUSP) jobs
      (\fBJOBS\fR).
.sp 2
   *  Other shared resources (\fBRESOURCE\fR).
.sp 2
*  Consumer types:
.sp 2
   *  Applications (\fBAPPS\fR or \fBPER_APP\fR).
.sp 2
   *  Queues (\fBQUEUES\fR or \fBPER_QUEUE\fR).
.sp 2
   *  Hosts and host groups (\fBHOSTS\fR or \fBPER_HOST\fR).
.sp 2
   *  Users and user groups (\fBUSERS\fR or \fBPER_USER\fR).
.sp 2
   *  Projects (\fBPROJECTS\fR or \fBPER_PROJECT\fR).
.sp 2
   *  LSF License Scheduler projects (\fBLIC_PROJECTS\fR or
      \fBPER_LIC_PROJECT\fR).
.sp 2
Each subsequent row describes the configuration information for
resource consumers and the limits that apply to them. Each line
must contain an entry for each keyword. Use empty parentheses ()
or a dash (-) to to indicate an empty field. Fields cannot be
left blank.
.sp 2
\fBTip: \fR
.sp 2
Multiple entries must be enclosed in parentheses. For RESOURCE
limits, RESOURCE names must be enclosed in parentheses.
.SH Horizontal format

.sp 2
Use the horizontal format to give a name for your limits and to
configure more complicated combinations of consumers and resource
limits.
.sp 2
The first line of the Limit section gives the name of the limit
configuration.
.sp 2
Each subsequent line in the Limit section consists of keywords
identifying the resource limits:
.sp 2
*  Job slots (\fBSLOTS\fR) and per-processor job slots
   (\fBSLOTS_PER_PROCESSOR\fR).
.sp 2
*  Memory (\fBMEM\fR), in MB or the unit set in the
   \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file.
.sp 2
*  Swap space (\fBSWP\fR), in MB or the unit set in the
   \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file.
.sp 2
*  Temp space (\fBTMP\fR), in MB or the unit set in the
   \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file.
.sp 2
*  Running and suspended (RUN, SSUSP, USUSP) jobs (\fBJOBS\fR).
.sp 2
*  Other shared resources (\fBRESOURCE\fR).
.sp 2
and the resource \fIconsumers\fR to which the limits apply:
.sp 2
*  Applications (\fBAPPS\fR or \fBPER_APP\fR).
.sp 2
*  Queues (\fBQUEUES\fR or \fBPER_QUEUE\fR).
.sp 2
*  Hosts and host groups (\fBHOSTS\fR or \fBPER_HOST\fR).
.sp 2
*  Users and user groups (\fBUSERS\fR or \fBPER_USER\fR).
.sp 2
*  Projects (\fBPROJECTS\fR or \fBPER_PROJECT\fR).
.sp 2
*  LSF License Scheduler projects (\fBLIC_PROJECTS\fR or
   \fBPER_LIC_PROJECT\fR).
.SH Example: Vertical tabular format

.sp 2
In the following limit configuration:
.sp 2
*  Jobs from \fRuser1\fR and \fRuser3\fR are limited to 2 job
   slots on \fRhostA\fR
.sp 2
*  Jobs from \fRuser2\fR on queue \fRnormal\fR are limited to 20
   MB of memory or the unit set in \fBLSF_UNIT_FOR_LIMITS\fR in
   lsf.conf.
.sp 2
*  The short queue can have at most 200 running and suspended
   jobs
.sp 2
Begin Limit
.br
NAME    USERS           QUEUES   HOSTS     SLOTS  MEM   SWP  TMP  JOBS
.br
limit1  (user1 user3)    -       hostA     2       -     -    -     -
.br
 -       user2           normal       -     -      20     -    -     -
.br
 -       -               short        -     -       -     -    -    200
.br
End Limit
.sp 2
Jobs that do not match these limits; that is, all users except
\fRuser1\fR and \fRuser3\fR running jobs on \fRhostA\fR and all
users except \fRuser2\fR submitting jobs to queue \fRnormal\fR,
have no limits.
.SH Example: Horizontal format

.sp 2
All users in user group \fRugroup1\fR except \fRuser1\fR using
\fRqueue1\fR and \fRqueue2\fR and running jobs on hosts in host
group \fRhgroup1\fR are limited to 2 job slots per processor on
each host:
.sp 2
Begin Limit 
.br
# ugroup1 except user1 uses queue1 and queue2 with 2 job slots 
.br
# on each host in hgroup1 
.br
NAME          = limit1 
.br
# Resources 
.br
SLOTS_PER_PROCESSOR = 2 
.br
#Consumers
.br
QUEUES       = queue1 queue2 
.br
USERS        = ugroup1 ~user1 
.br
PER_HOST     = hgroup1 
.br
End Limit
.SH Compatibility with lsb.queues, lsb.users, and lsb.hosts

.sp 2
The Limit section does not support the keywords or format used in
lsb.users, lsb.hosts, and lsb.queues. However, your existing job
slot limit configuration in these files will continue to apply.
.sp 2
Job slot limits are the only type of limit you can configure in
lsb.users, lsb.hosts, and lsb.queues. You cannot configure limits
for user groups, host groups and projects in lsb.users,
lsb.hosts, and lsb.queues. You should not configure any new
resource allocation limits in lsb.users, lsb.hosts, and
lsb.queues. Use this section to configure all new resource
allocation limits, including job slot limits. Limits on running
and suspended jobs can only be set in this section.
.sp 2
Existing limits in lsb.users, lsb.hosts, and lsb.queues with the
same scope as a new limit in this section, but with a different
value are ignored. The value of the new limit in this section is
used. Similar limits with different scope enforce the most
restrictive limit.
.SH Parameters

.sp 2
*  APPS
.sp 2
*  ELIGIBLE_PEND_JOBS
.sp 2
*  HOSTS
.sp 2
*  INELIGIBLE
.sp 2
*  JOBS
.sp 2
*  JOBS_PER_SCHED_CYCLE
.sp 2
*  MEM
.sp 2
*  NAME
.sp 2
*  PER_APP
.sp 2
*  PER_HOST
.sp 2
*  PER_PROJECT
.sp 2
*  PER_QUEUE
.sp 2
*  PER_USER
.sp 2
*  PROJECTS
.sp 2
*  QUEUES
.sp 2
*  RESOURCE
.sp 2
*  SLOTS
.sp 2
*  SLOTS_PER_PROCESSOR
.sp 2
*  SWP
.sp 2
*  TMP
.sp 2
*  USERS
.sp 2

.ce 1000
\fBAPPS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRAPPS=all\fR [\fR~\fR]\fIapplication_profile_name\fR ...
.sp 2
\fRAPPS\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR
[\fR~\fR]\fIapplication_profile_name\fR ... \fR)\fR
.SH Description

.sp 2
A space-separated list of application profile names on which
limits are enforced. Limits are enforced on all application
profiles listed.
.sp 2
The list must contain valid application profile names defined in
lsb.applications.
.sp 2
To specify a per-application limit, use the PER_APP keyword. Do
not configure APPS and PER_APP limits in the same Limit section.
.sp 2
In horizontal format, use only one APPS line per Limit section.
.sp 2
Use the keyword all to configure limits that apply to all
applications in a cluster.
.sp 2
Use the not operator (~) to exclude applications from the all
specification in the limit. This is useful if you have a large
number of applications but only want to exclude a few
applications from the limit definition.
.sp 2
In vertical tabular format, multiple application profile names
must be enclosed in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None. If no limit is specified for PER_APP or APPS, no limit is
enforced on any application profile.
.SH Example

.sp 2
APPS=appA appB
.sp 2

.ce 1000
\fBELIGIBLE_PEND_JOBS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRELIGIBLE_PEND_JOBS=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of eligible jobs that are considered for
dispatch in a single scheduling cycle. Specify a positive integer
or 0. This parameter can only be used with the following consumer
types:
.sp 2
*  USERS or PER_USER
.sp 2
*  QUEUES or PER_QUEUE
.sp 2
The \fBall\fR group, or any group containing \fBall\fR, is not
supported.
.sp 2
The limit is ignored for any other defined consumer types.
.SH Valid values

.sp 2
Any positive integer or 0.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
ELIGIBLE_PEND_JOBS=10
.sp 2

.ce 1000
\fBHOSTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRHOSTS=all\fR [\fR~\fR]\fIhost_name\fR ... | \fRall\fR
[\fR~\fR]\fIhost_group\fR ...
.sp 2
\fRHOSTS\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIhost_name\fR ... |
\fRall\fR [\fR~\fR]\fIhost_group\fR ... \fR)\fR
.SH Description

.sp 2
A space-separated list of hosts, host groups defined in lsb.hosts
on which limits are enforced. Limits are enforced on all hosts or
host groups listed.
.sp 2
If a group contains a subgroup, the limit also applies to each
member in the subgroup recursively.
.sp 2
To specify a per-host limit, use the PER_HOST keyword. Do not
configure HOSTS and PER_HOST limits in the same Limit section.
.sp 2
If you specify MEM, TMP, or SWP as a percentage, you must specify
PER_HOST and list the hosts that the limit is to be enforced on.
You cannot specify HOSTS.
.sp 2
In horizontal format, use only one HOSTS line per Limit section.
.sp 2
Use the keyword all to configure limits that apply to all hosts
in a cluster.
.sp 2
Use the not operator (~) to exclude hosts from the all
specification in the limit. This is useful if you have a large
cluster but only want to exclude a few hosts from the limit
definition.
.sp 2
In vertical tabular format, multiple host names must be enclosed
in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
all (limits are enforced on all hosts in the cluster).
.SH Example 1

.sp 2
HOSTS=Group1 ~hostA hostB hostC
.sp 2
Enforces limits on \fRhostB\fR, \fRhostC\fR, and all hosts in
\fRGroup1\fR except for \fRhostA\fR.
.SH Example 2

.sp 2
HOSTS=all ~group2 ~hostA
.br

.sp 2
Enforces limits on all hosts in the cluster, except for
\fRhostA\fR and the hosts in \fRgroup2\fR.
.SH Example 3

.sp 2
HOSTS                        SWP (all ~hostK ~hostM)           10
.br

.sp 2
Enforces a 10 MB (or the unit set in \fBLSF_UNIT_FOR_LIMITS\fR in
lsf.conf) swap limit on all hosts in the cluster, except for
\fRhostK\fR and \fRhostM\fR
.sp 2

.ce 1000
\fBINELIGIBLE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRINELIGIBLE=Y|y|N|n\fR
.SH Description

.sp 2
If set as y or Y in the specific Limit section and the job cannot
be scheduled due to this limit, the LSF scheduler will put the
job into an ineligible pending state. LSF calculates the
ineligible pending time for this job and the job\(aqs priority does
not increase.
.sp 2
\fBNote: \fRThe following Limit types are compatible with the
\fRINELIGIBLE\fR parameter: \fRJOBS\fR, \fRUSERS\fR,
\fRPER_USER\fR, \fRQUEUES\fR, \fRPER_QUEUE\fR, \fRPROJECTS\fR,
\fRPER_PROJECT\fR, \fRLIC_PROJECTS\fR, and \fRPER_LIC_PROJECT\fR.
.SH Default

.sp 2
INELIGIBLE=N
.SH Example

.sp 2
INELIGIBLE=Y
.sp 2

.ce 1000
\fBJOBS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOBS=\fR\fIinteger\fR
.sp 2
\fRJOBS\fR
.sp 2
\fR-\fR | \fIinteger\fR
.SH Description

.sp 2
Maximum number of running or suspended (RUN, SSUSP, USUSP) jobs
available to resource consumers. Specify a positive integer
greater than or equal 0. Job limits can be defined in both
vertical and horizontal limit formats.
.sp 2
With MultiCluster resource lease model, this limit applies only
to local hosts being used by the local cluster. The job limit for
hosts exported to a remote cluster is determined by the host
export policy, not by this parameter. The job limit for borrowed
hosts is determined by the host export policy of the remote
cluster.
.sp 2
If SLOTS are configured in the Limit section, the most
restrictive limit is applied.
.sp 2
If HOSTS are configured in the Limit section, JOBS is the number
of running and suspended jobs on a host. If preemptive scheduling
is used, the suspended jobs are not counted against the job
limit.
.sp 2
Use this parameter to prevent a host from being overloaded with
too many jobs, and to maximize the throughput of a machine.
.sp 2
If only QUEUES are configured in the Limit section, JOBS is the
maximum number of jobs that can run in the listed queues.
.sp 2
If only USERS are configured in the Limit section, JOBS is the
maximum number of jobs that the users or user groups can run.
.sp 2
If only HOSTS are configured in the Limit section, JOBS is the
maximum number of jobs that can run on the listed hosts.
.sp 2
If only PROJECTS are configured in the Limit section, JOBS is the
maximum number of jobs that can run under the listed projects.
.sp 2
Use APPS or PER_APP, QUEUES or PER_QUEUE, USERS or PER_USER,
HOSTS or PER_HOST, LIC_PROJECTS or PER_LIC_PROJECT, and PROJECTS
or PER_PROJECT in combination to further limit jobs available to
resource consumers.
.sp 2
In horizontal format, use only one JOBS line per Limit section.
.sp 2
In vertical format, use empty parentheses () or a dash (-) to
indicate the default value (no limit). Fields cannot be left
blank.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
JOBS=20
.sp 2

.ce 1000
\fBJOBS_PER_SCHED_CYCLE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOBS_PER_SCHED_CYCLE=\fR\fIinteger\fR
.SH Description

.sp 2
Use \fBELIGIBLE_PEND_JOBS\fR instead. This parameter is only
maintained for backwards compatibility.
.sp 2
Maximum number of jobs that are considered for dispatch in a
single scheduling cycle. Specify a positive integer or 0. This
parameter can only be used with the following consumer types:
.sp 2
*  USERS or PER_USER
.sp 2
*  QUEUES or PER_QUEUE
.sp 2
The \fBall\fR group, or any group containing \fBall\fR, is not
supported.
.sp 2
The limit is ignored for any other defined consumer types.
.SH Valid values

.sp 2
Any positive integer or 0.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
JOBS_PER_SCHED_CYCLE=10
.sp 2

.ce 1000
\fBLIC_PROJECTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRLIC_PROJECTS=all\fR [\fR~\fR]\fIlic_project_name\fR ...
.sp 2
\fRLIC_PROJECTS\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIlic_project_name\fR ...
\fR)\fR
.SH Description

.sp 2
A space-separated list of LSF License Scheduler project names on
which limits are enforced. Limits are enforced on all projects
listed. Each project name can be up to 511 characters long.
.sp 2
To specify a per-project limit, use the PER_LIC_PROJECT keyword.
Do not configure LIC_PROJECTS and PER_PROJECT limits in the same
Limit section.
.sp 2
In horizontal format, use only one LIC_PROJECTS line per Limit
section.
.sp 2
Use the keyword all to configure limits that apply to all
projects in a cluster.
.sp 2
Use the not operator (~) to exclude projects from the all
specification in the limit. This is useful if you have a large
number of projects but only want to exclude a few projects from
the limit definition.
.sp 2
In vertical tabular format, multiple project names must be
enclosed in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
all (limits are enforced on all projects in the cluster)
.SH Example

.sp 2
LIC_PROJECTS=licprojA licprojB
.sp 2

.ce 1000
\fBMEM\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMEM=\fR\fIinteger\fR[\fR%\fR]
.sp 2
\fRMEM\fR
.sp 2
\fR-\fR | \fIinteger\fR[\fR%\fR]
.SH Description

.sp 2
Maximum amount of memory available to resource consumers. Specify
a value in MB or the unit set in \fBLSF_UNIT_FOR_LIMITS\fR in
lsf.conf as a positive integer greater than or equal 0.
.sp 2
The Limit section is ignored if MEM is specified as a percentage:
.sp 2
*  Without PER_HOST, or
.sp 2
*  With HOSTS
.sp 2
In horizontal format, use only one MEM line per Limit section.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate the default value (no limit). Fields cannot be
left blank.
.sp 2
If only QUEUES are configured in the Limit section, MEM must be
an integer value. MEM is the maximum amount of memory available
to the listed queues.
.sp 2
If only USERS are configured in the Limit section, MEM must be an
integer value. MEM is the maximum amount of memory that the users
or user groups can use.
.sp 2
If only HOSTS are configured in the Limit section, MEM must be an
integer value. It cannot be a percentage. MEM is the maximum
amount of memory available to the listed hosts.
.sp 2
If only PROJECTS are configured in the Limit section, MEM must be
an integer value. MEM is the maximum amount of memory available
to the listed projects.
.sp 2
Use APPS or PER_APP, QUEUES or PER_QUEUE, USERS or PER_USER,
HOSTS or PER_HOST, LIC_PROJECTS or PER_LIC_PROJECT, and PROJECTS
or PER_PROJECT in combination to further limit memory available
to resource consumers.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
MEM=20
.sp 2

.ce 1000
\fBNAME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRNAME=\fR\fIlimit_name\fR
.sp 2
\fRNAME\fR
.sp 2
\fR-\fR | \fIlimit_name\fR
.SH Description

.sp 2
Name of the Limit section
.sp 2
Specify any ASCII string 40 characters or less. You can use
letters, digits, underscores (_) or dashes (-). You cannot use
blank spaces.
.sp 2
If duplicate limit names are defined, the Limit section is
ignored. If value of NAME is not defined in vertical format, or
defined as (-), blimtis displays \fRNONAME\fInnn\fR\fR.
.SH Default

.sp 2
None. In horizontal format, you must provide a name for the Limit
section. NAME is optional in the vertical format.
.SH Example

.sp 2
NAME=short_limits
.sp 2

.ce 1000
\fBPER_APP\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPER_APP=all\fR [\fR~\fR]\fIapplication_profile_name\fR ..
.sp 2
\fRPER_APP\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR
[\fR~\fR]\fIapplication_profile_name\fR ... \fR)\fR
.SH Description

.sp 2
A space-separated list of application profile names on which
limits are enforced. Limits are enforced on jobs submitted to
each application profile listed.
.sp 2
Do not configure PER_APP and APPS limits in the same Limit
section.
.sp 2
In horizontal format, use only one PER_APP line per Limit
section.
.sp 2
Use the keyword all to configure limits that apply to each
application in a cluster.
.sp 2
Use the not operator (~) to exclude applications from the all
specification in the limit.
.sp 2
In vertical tabular format, multiple application profile names
must be enclosed in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None. If no limit is specified for PER_APP or APPS, no limit is
enforced on any application profile.
.SH Example

.sp 2
PER_APP=app1 app2
.sp 2

.ce 1000
\fBPER_HOST\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPER_HOST=all\fR [~]\fIhost_name\fR ... | all
[\fR~\fR]\fIhost_group\fR ...
.sp 2
\fRPER_HOST\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIhost_name\fR ... |
\fRall \fR[\fR~\fR]\fIhost_group\fR ... \fR)\fR
.SH Description

.sp 2
A space-separated list of host or host groups defined in
lsb.hosts on which limits are enforced. Limits are enforced on
each host or individually to each host of the host group listed.
If a group contains a subgroup, the limit also applies to each
member in the subgroup recursively.
.sp 2
Do not configure PER_HOST and HOSTS limits in the same Limit
section.
.sp 2
In horizontal format, use only one PER_HOST line per Limit
section.
.sp 2
If you specify MEM, TMP, or SWP as a percentage, you must specify
PER_HOST and list the hosts that the limit is to be enforced on.
You cannot specify HOSTS.
.sp 2
Use the keyword all to configure limits that apply to each host
in a cluster. If host groups are configured, the limit applies to
each member of the host group, not the group as a whole.
.sp 2
Use the not operator (~) to exclude hosts or host groups from the
all specification in the limit. This is useful if you have a
large cluster but only want to exclude a few hosts from the limit
definition.
.sp 2
In vertical tabular format, multiple host names must be enclosed
in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None. If no limit is specified for PER_HOST or HOST, no limit is
enforced on any host or host group.
.SH Example

.sp 2
PER_HOST=hostA hgroup1 ~hostC
.sp 2

.ce 1000
\fBPER_LIC_PROJECT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPER_LIC_PROJECT=all\fR [\fR~\fR]\fIlic_project_name\fR ...
.sp 2
\fRPER_LIC_PROJECT\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIlic_project_name\fR ...
\fR)\fR
.SH Description

.sp 2
A space-separated list of LSF License Scheduler project names on
which limits are enforced. Limits are enforced on each project
listed. Each project name can be up to 511 characters long.
.sp 2
Do not configure PER_LIC_PROJECT and LIC_PROJECTS limits in the
same Limit section.
.sp 2
In horizontal format, use only one PER_LIC_PROJECT line per Limit
section.
.sp 2
Use the keyword all to configure limits that apply to each LSF
License Scheduler project in a cluster.
.sp 2
Use the not operator (~) to exclude LSF License Scheduler
projects from the all specification in the limit.
.sp 2
In vertical tabular format, multiple project names must be
enclosed in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None. If no limit is specified for PER_LIC_PROJECT or
LIC_PROJECTS, no limit is enforced on any LSF License Scheduler
project.
.SH Example

.sp 2
PER_PROJECT=licproj1 licproj2
.sp 2

.ce 1000
\fBPER_PROJECT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPER_PROJECT=all\fR [\fR~\fR]\fIproject_name\fR ...
.sp 2
\fRPER_PROJECT\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIproject_name\fR ...
\fR)\fR
.SH Description

.sp 2
A space-separated list of project names on which limits are
enforced. Limits are enforced on each project listed. Each
project name can be up to 511 characters long.
.sp 2
Do not configure PER_PROJECT and PROJECTS limits in the same
Limit section.
.sp 2
In horizontal format, use only one PER_PROJECT line per Limit
section.
.sp 2
Use the keyword all to configure limits that apply to each
project in a cluster.
.sp 2
Use the not operator (~) to exclude projects from the all
specification in the limit.
.sp 2
In vertical tabular format, multiple project names must be
enclosed in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None. If no limit is specified for PER_PROJECT or PROJECTS, no
limit is enforced on any project.
.SH Example

.sp 2
PER_PROJECT=proj1 proj2
.sp 2

.ce 1000
\fBPER_QUEUE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPER_QUEUE=all\fR [\fR~\fR]\fIqueue_name\fR ..
.sp 2
\fRPER_QUEUE\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIqueue_name\fR ...
\fR)\fR
.SH Description

.sp 2
A space-separated list of queue names on which limits are
enforced. Limits are enforced on jobs submitted to each queue
listed.
.sp 2
Do not configure PER_QUEUE and QUEUES limits in the same Limit
section.
.sp 2
In horizontal format, use only one PER_QUEUE line per Limit
section.
.sp 2
Use the keyword all to configure limits that apply to each queue
in a cluster.
.sp 2
Use the not operator (~) to exclude queues from the all
specification in the limit. This is useful if you have a large
number of queues but only want to exclude a few queues from the
limit definition.
.sp 2
In vertical tabular format, multiple queue names must be enclosed
in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None. If no limit is specified for PER_QUEUE or QUEUES, no limit
is enforced on any queue.
.SH Example

.sp 2
PER_QUEUE=priority night
.sp 2

.ce 1000
\fBPER_USER\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPER_USER=all\fR [\fR~\fR]\fIuser_name\fR ... | \fRall\fR
[\fR~\fR]\fIuser_group\fR ...
.sp 2
\fRPER_USER\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIuser_name\fR ... |
\fRall\fR [\fR~\fR]\fIuser_group\fR ... \fR)\fR
.SH Description

.sp 2
A space-separated list of user names or user groups on which
limits are enforced. Limits are enforced on each user or
individually to each user in the user group listed. If a user
group contains a subgroup, the limit also applies to each member
in the subgroup recursively.
.sp 2
User names must be valid login names. User group names can be LSF
user groups or UNIX and Windows user groups. Note that for LSF
and UNIX user groups, the groups must be specified in a UserGroup
section in lsb.users first.
.sp 2
Do not configure PER_USER and USERS limits in the same Limit
section.
.sp 2
In horizontal format, use only one PER_USER line per Limit
section.
.sp 2
Use the keyword all to configure limits that apply to each user
in a cluster. If user groups are configured, the limit applies to
each member of the user group, not the group as a whole.
.sp 2
Use the not operator (~) to exclude users or user groups from the
all specification in the limit. This is useful if you have a
large number of users but only want to exclude a few users from
the limit definition.
.sp 2
In vertical tabular format, multiple user names must be enclosed
in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None. If no limit is specified for PER_USER or USERS, no limit is
enforced on any user or user group.
.SH Example

.sp 2
PER_USER=user1 user2 ugroup1 ~user3
.sp 2

.ce 1000
\fBPROJECTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPROJECTS=all\fR [\fR~\fR]\fIproject_name\fR ...
.sp 2
\fRPROJECTS\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIproject_name\fR ...
\fR)\fR
.SH Description

.sp 2
A space-separated list of project names on which limits are
enforced. Limits are enforced on all projects listed. Each
project name can be up to 511 characters long.
.sp 2
To specify a per-project limit, use the PER_PROJECT keyword. Do
not configure PROJECTS and PER_PROJECT limits in the same Limit
section.
.sp 2
In horizontal format, use only one PROJECTS line per Limit
section.
.sp 2
Use the keyword all to configure limits that apply to all
projects in a cluster.
.sp 2
Use the not operator (~) to exclude projects from the all
specification in the limit. This is useful if you have a large
number of projects but only want to exclude a few projects from
the limit definition.
.sp 2
In vertical tabular format, multiple project names must be
enclosed in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
all (limits are enforced on all projects in the cluster)
.SH Example

.sp 2
PROJECTS=projA projB
.sp 2

.ce 1000
\fBQUEUES\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRQUEUES=all\fR [\fR~\fR]\fIqueue_name\fR ...
.sp 2
\fRQUEUES\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIqueue_name\fR ...
\fR)\fR
.SH Description

.sp 2
A space-separated list of queue names on which limits are
enforced. Limits are enforced on all queues listed.
.sp 2
The list must contain valid queue names defined in lsb.queues.
.sp 2
To specify a per-queue limit, use the PER_QUEUE keyword. Do not
configure QUEUES and PER_QUEUE limits in the same Limit section.
.sp 2
In horizontal format, use only one QUEUES line per Limit section.
.sp 2
Use the keyword all to configure limits that apply to all queues
in a cluster.
.sp 2
Use the not operator (~) to exclude queues from the all
specification in the limit. This is useful if you have a large
number of queues but only want to exclude a few queues from the
limit definition.
.sp 2
In vertical tabular format, multiple queue names must be enclosed
in parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
all (limits are enforced on all queues in the cluster)
.SH Example

.sp 2
QUEUES=normal night
.sp 2

.ce 1000
\fBRESOURCE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRESOURCE=\fR[\fIshared_resource\fR\fR,\fR\fIinteger\fR]
[[\fIshared_resource\fR\fR,\fR\fIinteger\fR] ...]
.sp 2
\fRRESOURCE\fR
.sp 2
\fR(\fR [[\fIshared_resource\fR\fR,\fR\fIinteger\fR]
[[\fIshared_resource\fR\fR,\fR\fIinteger\fR] ...] \fR)\fR
.SH Description

.sp 2
Maximum amount of any user-defined shared resource available to
consumers.
.sp 2
In horizontal format, use only one RESOURCE line per Limit
section.
.sp 2
In vertical tabular format, resource names must be enclosed in
parentheses.
.sp 2
In vertical tabular format, use empty parentheses () or a dash
(-) to indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
None
.SH Examples

.sp 2
RESOURCE=[stat_shared,4]
.br
Begin Limit
.br
RESOURCE                       PER_HOST
.br
([stat_shared,4])              (all ~hostA)
.br
([dyn_rsrc,1] [stat_rsrc,2])  (hostA)
.br
End Limit
.sp 2

.ce 1000
\fBSLOTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSLOTS=\fR\fIinteger\fR
.sp 2
\fRSLOTS\fR
.sp 2
\fR-\fR | \fIinteger\fR
.SH Description

.sp 2
Maximum number of job slots available to resource consumers.
Specify a positive integer greater than or equal 0.
.sp 2
With MultiCluster resource lease model, this limit applies only
to local hosts being used by the local cluster. The job slot
limit for hosts exported to a remote cluster is determined by the
host export policy, not by this parameter. The job slot limit for
borrowed hosts is determined by the host export policy of the
remote cluster.
.sp 2
If JOBS are configured in the Limit section, the most restrictive
limit is applied.
.sp 2
If HOSTS are configured in the Limit section, SLOTS is the number
of running and suspended jobs on a host. If preemptive scheduling
is used, the suspended jobs are not counted as using a job slot.
.sp 2
To fully use the CPU resource on multiprocessor hosts, make the
number of job slots equal to or greater than the number of
processors.
.sp 2
Use this parameter to prevent a host from being overloaded with
too many jobs, and to maximize the throughput of a machine.
.sp 2
Use an exclamation point (\fR!\fR) to make the number of job
slots equal to the number of CPUs on a host.
.sp 2
If the number of CPUs in a host changes dynamically, mbatchd
adjusts the maximum number of job slots per host accordingly.
Allow the mbatchd up to 10 minutes to get the number of CPUs for
a host. During this period the value of SLOTS is 1.
.sp 2
If only QUEUES are configured in the Limit section, SLOTS is the
maximum number of job slots available to the listed queues.
.sp 2
If only USERS are configured in the Limit section, SLOTS is the
maximum number of job slots that the users or user groups can
use.
.sp 2
If only HOSTS are configured in the Limit section, SLOTS is the
maximum number of job slots that are available to the listed
hosts.
.sp 2
If only PROJECTS are configured in the Limit section, SLOTS is
the maximum number of job slots that are available to the listed
projects.
.sp 2
Use APPS or PER_APP, QUEUES or PER_QUEUE, USERS or PER_USER,
HOSTS or PER_HOST, LIC_PROJECTS or PER_LIC_PROJECT, and PROJECTS
or PER_PROJECT in combination to further limit job slots per
processor available to resource consumers.
.sp 2
In horizontal format, use only one SLOTS line per Limit section.
.sp 2
In vertical format, use empty parentheses () or a dash (-) to
indicate the default value (no limit). Fields cannot be left
blank.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
SLOTS=20
.sp 2

.ce 1000
\fBSLOTS_PER_PROCESSOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSLOTS_PER_PROCESSOR=\fR\fInumber\fR
.sp 2
\fRSLOTS_PER_PROCESSOR\fR
.sp 2
\fR-\fR | \fInumber\fR
.SH Description

.sp 2
Per processor job slot limit, based on the number of processors
on each host affected by the limit.
.sp 2
Maximum number of job slots that each resource consumer can use
per processor. This job slot limit is configured per processor so
that multiprocessor hosts will automatically run more jobs.
.sp 2
You must also specify PER_HOST and list the hosts that the limit
is to be enforced on. The Limit section is ignored if
SLOTS_PER_PROCESSOR is specified:
.sp 2
*  Without PER_HOST, or
.sp 2
*  With HOSTS
.sp 2
In vertical format, use empty parentheses () or a dash (-) to
indicate the default value (no limit). Fields cannot be left
blank.
.sp 2
To fully use the CPU resource on multiprocessor hosts, make the
number of job slots equal to or greater than the number of
processors.
.sp 2
Use this parameter to prevent a host from being overloaded with
too many jobs, and to maximize the throughput of a machine.
.sp 2
This number can be a fraction such as 0.5, so that it can also
serve as a per-CPU limit on multiprocessor machines. This number
is rounded up to the nearest integer equal to or greater than the
total job slot limits for a host. For example, if
SLOTS_PER_PREOCESSOR is 0.5, on a 4-CPU multiprocessor host,
users can only use up to 2 job slots at any time. On a
single-processor machine, users can use 1 job slot.
.sp 2
Use an exclamation point (\fR!\fR) to make the number of job
slots equal to the number of CPUs on a host.
.sp 2
If the number of CPUs in a host changes dynamically, mbatchd
adjusts the maximum number of job slots per host accordingly.
Allow the mbatchd up to 10 minutes to get the number of CPUs for
a host. During this period the number of CPUs is 1.
.sp 2
If only QUEUES and PER_HOST are configured in the Limit section,
SLOTS_PER_PROCESSOR is the maximum amount of job slots per
processor available to the listed queues for any hosts, users or
projects.
.sp 2
If only USERS and PER_HOST are configured in the Limit section,
SLOTS_PER_PROCESSOR is the maximum amount of job slots per
processor that the users or user groups can use on any hosts,
queues, license projects, or projects.
.sp 2
If only PER_HOST is configured in the Limit section,
SLOTS_PER_PROCESSOR is the maximum amount of job slots per
processor available to the listed hosts for any users, queues or
projects.
.sp 2
If only PROJECTS and PER_HOST are configured in the Limit
section, SLOTS_PER_PROCESSOR is the maximum amount of job slots
per processor available to the listed projects for any users,
queues or hosts.
.sp 2
Use APPS or PER_APP, QUEUES or PER_QUEUE, USERS or PER_USER,
PER_HOST, LIC_PROJECTS or PER_LIC_PROJECT, and PROJECTS or
PER_PROJECT in combination to further limit job slots per
processor available to resource consumers.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
SLOTS_PER_PROCESSOR=2
.sp 2

.ce 1000
\fBSWP\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSWP=\fR\fIinteger\fR[\fR%\fR]
.sp 2
\fRSWP\fR
.sp 2
\fR-\fR | \fIinteger\fR[\fR%\fR]
.SH Description

.sp 2
Maximum amount of swap space available to resource consumers.
Specify a value in MB or the unit set in
\fBLSF_UNIT_FOR_LIMITS\fR in lsf.conf as a positive integer
greater than or equal 0.
.sp 2
The Limit section is ignored if SWP is specified as a percentage:
.sp 2
*  Without PER_HOST, or
.sp 2
*  With HOSTS
.sp 2
In horizontal format, use only one SWP line per Limit section.
.sp 2
In vertical format, use empty parentheses () or a dash (-) to
indicate the default value (no limit). Fields cannot be left
blank.
.sp 2
If only USERS are configured in the Limit section, SWP must be an
integer value. SWP is the maximum amount of swap space that the
users or user groups can use on any hosts, queues or projects.
.sp 2
If only HOSTS are configured in the Limit section, SWP must be an
integer value. SWP is the maximum amount of swap space available
to the listed hosts for any users, queues or projects.
.sp 2
If only PROJECTS are configured in the Limit section, SWP must be
an integer value. SWP is the maximum amount of swap space
available to the listed projects for any users, queues or hosts.
.sp 2
If only LIC_PROJECTS are configured in the Limit section, SWP
must be an integer value. SWP is the maximum amount of swap space
available to the listed projects for any users, queues, projects,
or hosts.
.sp 2
Use APPS or PER_APP, QUEUES or PER_QUEUE, USERS or PER_USER,
HOSTS or PER_HOST, LIC_PROJECTS or PER_LIC_PROJECT, and PROJECTS
or PER_PROJECT in combination to further limit swap space
available to resource consumers.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
SWP=60
.sp 2

.ce 1000
\fBTMP\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRTMP=\fR\fIinteger\fR[\fR%\fR]
.sp 2
\fRTMP\fR
.sp 2
\fR-\fR | \fIinteger\fR[\fR%\fR]
.SH Description

.sp 2
Maximum amount of tmp space available to resource consumers.
Specify a value in MB or the unit set in
\fBLSF_UNIT_FOR_LIMITS\fR in lsf.conf as a positive integer
greater than or equal 0.
.sp 2
The Limit section is ignored if TMP is specified as a percentage:
.sp 2
*  Without PER_HOST, or
.sp 2
*  With HOSTS
.sp 2
In horizontal format, use only one TMP line per Limit section.
.sp 2
In vertical format, use empty parentheses () or a dash (-) to
indicate the default value (no limit). Fields cannot be left
blank.
.sp 2
If only QUEUES are configured in the Limit section, TMP must be
an integer value. TMP is the maximum amount of tmp space
available to the listed queues for any hosts, users projects.
.sp 2
If only USERS are configured in the Limit section, TMP must be an
integer value. TMP is the maximum amount of tmp space that the
users or user groups can use on any hosts, queues or projects.
.sp 2
If only HOSTS are configured in the Limit section, TMP must be an
integer value. TMP is the maximum amount of tmp space available
to the listed hosts for any users, queues or projects.
.sp 2
If only PROJECTS are configured in the Limit section, TMP must be
an integer value. TMP is the maximum amount of tmp space
available to the listed projects for any users, queues or hosts.
.sp 2
If only LIC_PROJECTS are configured in the Limit section, TMP
must be an integer value. TMP is the maximum amount of tmp space
available to the listed projects for any users, queues, projects,
or hosts.
.sp 2
Use APPS or PER_APP, QUEUES or PER_QUEUE, USERS or PER_USER,
HOSTS or PER_HOST, LIC_PROJECTS or PER_LIC_PROJECT, and PROJECTS
or PER_PROJECT in combination to further limit tmp space
available to resource consumers.
.SH Default

.sp 2
No limit
.SH Example

.sp 2
TMP=20%
.sp 2

.ce 1000
\fBUSERS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRUSERS=all\fR [\fR~\fR]\fIuser_name\fR ... | \fRall\fR
[\fR~\fR]\fIuser_group\fR ...
.sp 2
\fRUSERS\fR
.sp 2
\fR(\fR [\fR-\fR] | \fRall\fR [\fR~\fR]\fIuser_name\fR ... |
\fRall\fR [\fR~\fR]\fIuser_group\fR ... \fR)\fR
.SH Description

.sp 2
A space-separated list of user names or user groups on which
limits are enforced. Limits are enforced on all users or groups
listed. Limits apply to a group as a whole.
.sp 2
If a group contains a subgroup, the limit also applies to each
member in the subgroup recursively.
.sp 2
User names must be valid login names. User group names can be LSF
user groups or UNIX and Windows user groups. UNIX user groups
must be configured in lsb.user.
.sp 2
To specify a per-user limit, use the PER_USER keyword. Do not
configure USERS and PER_USER limits in the same Limit section.
.sp 2
In horizontal format, use only one USERS line per Limit section.
.sp 2
Use the keyword all to configure limits that apply to all users
or user groups in a cluster.
.sp 2
Use the not operator (~) to exclude users or user groups from the
all specification in the limit. This is useful if you have a
large number of users but only want to exclude a few users or
groups from the limit definition.
.sp 2
In vertical format, multiple user names must be enclosed in
parentheses.
.sp 2
In vertical format, use empty parentheses () or a dash (-) to
indicate an empty field. Fields cannot be left blank.
.SH Default

.sp 2
all (limits are enforced on all users in the cluster)
.SH Example

.sp 2
USERS=user1 user2
.sp 2

.ce 1000
\fBGuaranteedResourcePool section\fR
.ce 0

.sp 2
Defines a guarantee policy. A guarantee is a commitment to ensure
availability of a number of resources to a service class, where a
service class is a container for jobs. Each guarantee pool can
provide guarantees to multiple service classes, and each service
class can have guarantees in multiple pools.
.sp 2
To use guaranteed resources, configure service classes with
\fRGOALS=[GUARANTEE]\fR in the lsb.serviceclasses file.
.sp 2
\fBNote: \fRHosts that are not ready for dispatched jobs are not
assigned to the guaranteed resource pool. This include hosts that
are in \fRunavail\fR or \fRunreach\fR status, or hosts that are
closed by the administrator.
.SH GuaranteedResourcePool section structure

.sp 2
Each resource pool is defined in a GuaranteedResourcePool section
and enclosed by Begin GuaranteedResourcePool and End
GuaranteedResourcePool.
.sp 2
You must configure a \fBNAME\fR, \fBTYPE\fR and
\fBDISTRIBUTION\fR for each GuaranteedResourcePool section.
.sp 2
The order of GuaranteedResourcePool sections is important, as the
sections are evaluated in the order configured. Each host can
only be in one pool of host-based resources (slots, hosts, or
package, each of which can have its own GuaranteedResourcePool
section); ensure all GuaranteedResourcePool sections (except the
last one) define the \fBHOSTS\fR parameter, so they do not
contain the default of all hosts.
.sp 2
When LSF starts up, it goes through the hosts and assigns each
host to a pool that will accept the host based on the pool\(aqs
\fBRES_SELECT\fR and \fBHOSTS\fR parameters. If multiple pools
will accept the host, the host will be assigned to the first pool
according to the configuration order of the pools.
.SH Example GuaranteedResourcePool sections

.sp 2
Begin GuaranteedResourcePool
.br
NAME = linuxGuarantee
.br
TYPE = slots
.br
HOSTS = linux_group
.br
DISTRIBUTION = [sc1, 25] [sc2, 30]
.br
LOAN_POLICIES=QUEUES[all] DURATION[15]
.br
DESCRIPTION = This is the resource pool for the hostgroup linux_group, with\ 
.br
30 slots guaranteed to sc2. Resources are loaned to 25 slots guaranteed to\ 
.br
sc1 jobs from any queue with run times of up to 15 minutes.
.br
End GuaranteedResourcePool
.sp 2
Begin GuaranteedResourcePool
.br
NAME = x86Guarantee
.br
TYPE = slots
.br
HOSTS = linux_x86
.br
DISTRIBUTION = [sc1, 25]
.br
LOAN_POLICIES=QUEUES[short_jobs] DURATION[15]
.br
DESCRIPTION = This is the resource pool for the hostgroup\ 
.br
linux_x86 using the short_jobs queue, with 25 slots guaranteed\ 
.br
to sc1. Resources are loaned to jobs for up to 15 minutes.
.br
End GuaranteedResoucePool
.sp 2
Begin GuaranteedResourcePool
.br
NAME = resource2pool
.br
TYPE = resource[f2]
.br
DISTRIBUTION = [sc1, 25%] [sc2, 25%]
.br
LOAN_POLICIES=QUEUES[all] DURATION[10]
.br
DESCRIPTION = This is the resource pool for all f2 resources managed by\
.br
LSF License Scheduler, with 25% guaranteed to each of sc1 and sc2. \
.br
Resources are loaned to jobs from any queue with runtimes of up to 10 minutes.
.br
End GuaranteedResourcePool
.SH Parameters

.sp 2
*  NAME
.sp 2
*  TYPE
.sp 2
*  HOSTS
.sp 2
*  RES_SELECT
.sp 2
*  DISTRIBUTION
.sp 2
*  LOAN_POLICIES
.sp 2
*  DESCRIPTION
.sp 2
*  ADMINISTRATORS
.sp 2

.ce 1000
\fBNAME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRNAME=\fR\fIname\fR
.SH Description

.sp 2
The name of the guarantee policy.
.SH Default

.sp 2
None. You must provide a name for the guarantee.
.sp 2

.ce 1000
\fBTYPE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRTYPE = \fR\fRslots\fR | \fRhosts\fR |
\fRresource[\fR\fIshared_resource\fR\fR]\fR |
\fRpackage[slots=\fR[\fIslots_per_package\fR][\fR:mem=mem_per_package\fR]\fR]\fR
.SH Description

.sp 2
Defines the type of resources to be guaranteed in this guarantee
policy. These can either be slots, whole hosts, packages composed
of an amount of slots and memory bundled on a single host, or
licenses managed by LSF License Scheduler.
.sp 2
Specify \fRresource[\fR\fIlicense\fR\fR]\fR to guarantee licenses
(which must be managed by LSF License Scheduler) to service class
guarantee jobs.
.sp 2
Specifies the combination of memory and slots that defines the
packages that will be treated as resources reserved by service
class guarantee jobs. For example,
.sp 2
\fRTYPE=package[slots=1:mem=1000]\fR
.sp 2
Each unit guaranteed is for one slot and 1000 MB of memory.
.sp 2
\fBLSF_UNIT_FOR_LIMITS\fR in lsf.conf determines the units of
memory in the package definition. The default value of
\fBLSF_UNIT_FOR_LIMITS\fR is MB, therefore the guarantee is for
1000 MB of memory.
.sp 2
A package need not have both slots and memory. Setting
\fRTYPE=package[slots=1]\fR is the equivalent of slots. In order
to provide guarantees for parallel jobs that require multiple
CPUs on a single host where memory is not an important resource,
you can use packages with multiple slots and not specify
\fRmem\fR.
.sp 2
Each host can belong to at most one slot/host/package guarantee
pool.
.SH Default

.sp 2
None. You must specify the type of guarantee.
.sp 2

.ce 1000
\fBHOSTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRHOSTS=all\fR | \fRallremote\fR | \fRall@\fR\fIcluster_name\fR
 ... | [\fR~\fR]\fIhost_name\fR | [\fR~\fR]\fIhost_group\fR
.SH Description

.sp 2
A space-separated list of hosts or host groups defined in
lsb.hosts, on which the guarantee is enforced.
.sp 2
Use the keyword all to include all hosts in a cluster. Use the
not operator (~) to exclude hosts from the all specification in
the guarantee.
.sp 2
Use host groups for greater flexibility, since host groups have
additional configuration options.
.sp 2
Ensure all GuaranteedResourcePool sections (except the last one)
define the \fBHOSTS\fR or \fBRES_SELECT\fR parameter, so they do
not contain the default of all hosts.
.SH Default

.sp 2
all
.sp 2

.ce 1000
\fBRES_SELECT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRES_SELECT=\fR\fIres_req\fR
.SH Description

.sp 2
Resource requirement string with which all hosts defined by the
HOSTS parameter are further filtered. For example,
\fRRES_SELECT=type==LINUX86\fR
.sp 2
Only static host attributes can be used in \fBRES_SELECT\fR. Do
not use consumable resources or dynamic resources.
.SH Default

.sp 2
None. \fBRES_SELECT\fR is optional.
.sp 2

.ce 1000
\fBDISTRIBUTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDISTRIBUTION=(\fR[\fIservice_class_name\fR,
\fIamount\fR[\fR%\fR]]...\fR)\fR
.SH Description

.sp 2
Assigns the amount of resources in the pool to the specified
service classes, where \fIamount\fR can be an absolute number or
a percentage of the resources in the pool. The outer brackets are
optional.
.sp 2
When configured as a percentage, the total can exceed 100% but
each assigned percentage cannot exceed 100%. For example:
.sp 2
\fRDISTRIBUTION=[sc1,50%] [sc2,50%] [sc3,50%]\fR is an acceptable
configuration even though the total percentages assigned add up
to 150%.
.sp 2
\fRDISTRIBUTION=[sc1,120%]\fR is not an acceptable configuration,
since the percentage for sc1 is greater than 100%.
.sp 2
Each service class must be configured in lsb.serviceclasses, with
\fRGOALS=[GUARANTEE]\fR.
.sp 2
When configured as a percentage and there are remaining resources
to distribute (because the calculated number of slots is rounded
down), LSF distributes the remaining resources using round-robin
distribution, starting with the first configured service class.
Therefore, the service classes that you define first will receive
additional resources regardless of the configured percentage. For
example, there are 93 slots in a pool and you configure the
following guarantee distribution:
.sp 2
\fRDISTRIBUTION=[sc1,30%] [sc2,10%] [sc3,30%]\fR
.sp 2
The number of slots assigned to guarantee policy are: floor((30%
+ 10% + 30%)*(93 slots)) = 65 slots
.sp 2
The slots are distributed to the service classes as follows:
.sp 2
*  sc1_slots = floor(30%*92) = 27
.sp 2
*  sc2_slots = floor(10%*92) = 9
.sp 2
*  sc3_slots = floor(30%*92) = 27
.sp 2
As a result of rounding down, the total number of distributed
slots is 27+9+27=63 slots, which means there are two remaining
slots to distribute. Using round-robin distribution, LSF
distributes one slot each to sc1 and sc2 because these service
classes are defined first. Therefore, the final slot distribution
to the service classes are as follows:
.sp 2
*  sc1_slots = floor(30%*92) + 1 = 28
.sp 2
*  sc2_slots = floor(10%*92) + 1 = 10
.sp 2
*  sc3_slots = floor(30%*92) = 27
.sp 2
If you configure sc3 before sc2 (\fRDISTRIBUTION=[sc1,30%]
[sc3,30%] [sc2,10%]\fR), LSF distributes the two remaining slots
to sc1 and sc3. Therefore, the slots are distributed as follows:
.sp 2
*  sc1_slots = floor(30%*92) + 1 = 28
.sp 2
*  sc3_slots = floor(30%*92) + 1 = 28
.sp 2
*  sc2_slots = floor(10%*92) = 9
.SH Default

.sp 2
None. You must provide a distribution for the resource pool.
.sp 2

.ce 1000
\fBLOAN_POLICIES\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRLOAN_POLICIES=QUEUES[\fR[\fR!\fR]\fIqueue_name
\fR\fR...|all]\fR [\fRCLOSE_ON_DEMAND\fR]
[\fRDURATION[\fR\fIminutes\fR\fR]\fR[\fRIDLE_BUFFER[\fR\fIamount\fR[\fR%\fR]\fR]\fR]
.SH Description

.sp 2
By default, LSF will reserve sufficient resources in each
guarantee pool to honor the configured guarantees. To increase
utilization, use \fBLOAN_POLICIES\fR to allow any job (with or
without guarantees) to use these reserved resources when not
needed by jobs with guarantees. When resources are loaned out,
jobs with guarantees may have to wait for jobs to finish before
they are able to dispatch in the pool.
.sp 2
\fRQUEUES[all\fR | [\fR!\fR]\fIqueue_name\fR ...\fR]\fR loans
only to jobs from the specified queue or queues. You must specify
which queues are permitted to borrow resources reserved for
guarantees. Specify an exclamation point (\fR!\fR) before the
queue name for that queue to ignore any \fBIDLE_BUFFER\fR and
\fBDURATION\fR policies when deciding whether a job in the queue
can borrow unused guaranteed resources.
.sp 2
When \fRCLOSE_ON_DEMAND\fR is specified, LSF stops loaning out
from a pool whenever there is pending demand from jobs with
guarantees in the pool.
.sp 2
\fRDURATION[\fR\fIminutes\fR\fR]\fR only allows jobs to borrow
the resources if the job run limit (or estimated run time) is no
larger than \fIminutes\fR. Loans limited by job duration make the
guaranteed resources available within the time specified by
\fIminutes\fR. Jobs running longer than the estimated run time
will run to completion regardless of the actual run time.
.sp 2
\fRIDLE_BUFFER[\fR\fIamount\fR[\fR%\fR]\fR]\fR enables LSF to try
to keep idle the amount of resources specified in
\fBIDLE_BUFFER\fR as long as there are unused guarantees. These
idle resources can only be used to honor guarantees. Whenever the
number of free resources in the pool drops below the
\fBIDLE_BUFFER\fR amount, LSF stops loaning resources from the
pool.
.sp 2
\fBNote: \fRThe \fBRETAIN\fR keyword is deprecated in LSF,
Version 10.1.0 Fix Pack 10. Use \fBIDLE_BUFFER\fR instead of
\fBRETAIN\fR.
.SH Default

.sp 2
None. \fBLOAN_POLICIES\fR is optional.
.sp 2

.ce 1000
\fBDESCRIPTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDESCRIPTION=\fR\fIdescription\fR
.SH Description

.sp 2
A description of the guarantee policy.
.SH Default

.sp 2
None. \fBDESCRIPTION\fR is optional.
.sp 2

.ce 1000
\fBADMINISTRATORS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRADMINISTRATORS=\fR\fIuser_name | user_group ...\fR
.SH Description

.sp 2
When defined by the user, an administrator can manage the
corresponding \fBGuaranteedResourcePool\fR by using the
\fBbconf\fR command.
.sp 2
\fBNote: \fRTo specify a Windows user account or user group,
include the domain name in uppercase letters:
\fRDOMAIN_NAME\user_name or DOMAIN_NAME\user_group\fR.
.sp 2
An LSF administrator will also be able to manage a
\fBGuaranteedResourcePool\fR by using the \fBbconf\fRcommand even
if the LSF administrator is excluded in the user_group explicitly
by using NOT operator (~).
.SH Default

.sp 2
None. You must be a cluster administrator to operate on this
guaranteed resource pool by \fBbconf\fR.
.sp 2

.ce 1000
\fBHostExport section\fR
.ce 0

.sp 2
\fBNote: \fRThis section is deprecated and might be removed in a
future version of LSF.
.sp 2
Defines an export policy for a host or a group of related hosts.
Defines how much of each host’s resources are exported, and how
the resources are distributed among the consumers.
.sp 2
Each export policy is defined in a separate HostExport section,
so it is normal to have multiple HostExport sections in
lsb.resources.
.SH HostExport section structure

.sp 2
Use empty parentheses ( ) or a dash (-) to specify the default
value for an entry. Fields cannot be left blank.
.SH Example HostExport section

.sp 2
Begin HostExport PER_HOST= hostA hostB SLOTS= 4 DISTRIBUTION= [cluster1, 1] 
.br
[cluster2, 3] MEM= 100 SWP= 100 End HostExport
.SH Parameters

.sp 2
*  PER_HOST
.sp 2
*  RES_SELECT
.sp 2
*  NHOSTS
.sp 2
*  DISTRIBUTION
.sp 2
*  MEM
.sp 2
*  SLOTS
.sp 2
*  SWAP
.sp 2
*  TYPE
.sp 2

.ce 1000
\fBPER_HOST\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
slave.config
.sp 2
\fRPER_HOST=\fR\fIhost_name\fR...
.SH Description

.sp 2
Required when exporting special hosts.
.sp 2
Determines which hosts to export. Specify one or more LSF hosts
by name. Separate names by space.
.sp 2

.ce 1000
\fBRES_SELECT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRES_SELECT=\fR\fIres_req \fR
.SH Description

.sp 2
Required when exporting workstations.
.sp 2
Determines which hosts to export. Specify the selection part of
the resource requirement string (without quotes or parentheses),
and LSF will automatically select hosts that meet the specified
criteria. For this parameter, if you do not specify the required
host type, the default is type==any.
.sp 2
Resource requirement strings in select sections must conform to a
more strict syntax. The strict resource requirement syntax only
applies to the select section. It does not apply to the other
resource requirement sections (order, rusage, same, span, or cu).
LSF rejects resource requirement strings where an rusage section
contains a non-consumable resource.
.sp 2
The criteria is only evaluated once, when a host is exported.
.sp 2

.ce 1000
\fBNHOSTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRNHOSTS=\fR\fIinteger \fR
.SH Description

.sp 2
Required when exporting workstations.
.sp 2
Maximum number of hosts to export. If there are not this many
hosts meeting the selection criteria, LSF exports as many as it
can.
.sp 2

.ce 1000
\fBDISTRIBUTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDISTRIBUTION=(\fR[\fIcluster_name\fR,
\fInumber_shares\fR]...\fR)\fR
.SH Description

.sp 2
Required. Specifies how the exported resources are distributed
among consumer clusters.
.sp 2
The syntax for the distribution list is a series of share
assignments. The syntax of each share assignment is the cluster
name, a comma, and the number of shares, all enclosed in square
brackets, as shown. Use a space to separate multiple share
assignments. Enclose the full distribution list in a set of round
brackets.
.sp 2
\fIcluster_name\fR
.sp 2
Specify the name of a remote cluster that will be allowed to use
the exported resources. If you specify a local cluster, the
assignment is ignored.
.sp 2
\fInumber_shares\fR
.sp 2
Specify a positive integer representing the number of shares of
exported resources assigned to the cluster.
.sp 2
The number of shares assigned to a cluster is only meaningful
when you compare it to the number assigned to other clusters, or
to the total number. The total number of shares is just the sum
of all the shares assigned in each share assignment.
.sp 2

.ce 1000
\fBMEM\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMEM=\fR\fImegabytes \fR
.SH Description

.sp 2
Used when exporting special hosts. Specify the amount of memory
to export on each host, in MB or in units set in
\fBLSF_UNIT_FOR_LIMITS\fR in lsf.conf.
.SH Default

.sp 2
- (provider and consumer clusters compete for available memory)
.sp 2

.ce 1000
\fBSLOTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSLOTS=\fR\fIinteger\fR
.SH Description

.sp 2
Required when exporting special hosts. Specify the number of job
slots to export on each host.
.sp 2
To avoid overloading a partially exported host, you can reduce
the number of job slots in the configuration of the local
cluster.
.sp 2

.ce 1000
\fBSWAP\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSWAP=\fR\fImegabytes \fR
.SH Description

.sp 2
Used when exporting special hosts. Specify the amount of swap
space to export on each host, in MB or in units set in
\fBLSF_UNIT_FOR_LIMITS\fR in lsf.conf.
.SH Default

.sp 2
- (provider and consumer clusters compete for available swap
space)
.sp 2

.ce 1000
\fBTYPE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRTYPE=shared\fR
.SH Description

.sp 2
Changes the lease type from exclusive to shared.
.sp 2
If you export special hosts with a shared lease (using PER_HOST),
you cannot specify multiple consumer clusters in the distribution
policy.
.SH Default

.sp 2
Undefined (the lease type is exclusive; exported resources are
never available to the provider cluster)
.sp 2

.ce 1000
\fBSharedResourceExport section\fR
.ce 0

.sp 2
\fBNote: \fRThis section is deprecated and might be removed in a
future version of LSF.
.sp 2
Optional. Requires HostExport section. Defines an export policy
for a shared resource. Defines how much of the shared resource is
exported, and the distribution among the consumers.
.sp 2
The shared resource must be available on hosts defined in the
HostExport sections.
.SH SharedResourceExport section structure

.sp 2
All parameters are required.
.SH Example SharedResourceExport section

.sp 2
Begin SharedResourceExport 
.br
NAME= AppRes
.br
NINSTANCES= 10 
.br
DISTRIBUTION= ([C1, 30] [C2, 70])
.br
End SharedResourceExport
.SH Parameters

.sp 2
*  NAME
.sp 2
*  NINSTANCES
.sp 2
*  DISTRIBUTION
.sp 2

.ce 1000
\fBNAME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRNAME=\fR\fIshared_resource_name\fR
.SH Description

.sp 2
Shared resource to export. This resource must be available on the
hosts that are exported to the specified clusters; you cannot
export resources without hosts.
.sp 2

.ce 1000
\fBNINSTANCES\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRNINSTANCES=\fR\fIinteger\fR
.SH Description

.sp 2
Maximum quantity of shared resource to export. If the total
number available is less than the requested amount, LSF exports
all that are available.
.sp 2

.ce 1000
\fBDISTRIBUTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDISTRIBUTION=(\fR[\fIcluster_name\fR,
\fInumber_shares\fR]...\fR)\fR
.SH Description

.sp 2
Specifies how the exported resources are distributed among
consumer clusters.
.sp 2
The syntax for the distribution list is a series of share
assignments. The syntax of each share assignment is the cluster
name, a comma, and the number of shares, all enclosed in square
brackets, as shown. Use a space to separate multiple share
assignments. Enclose the full distribution list in a set of round
brackets.
.sp 2
\fIcluster_name\fR
.sp 2
Specify the name of a cluster allowed to use the exported
resources.
.sp 2
\fInumber_shares\fR
.sp 2
Specify a positive integer representing the number of shares of
exported resources assigned to the cluster.
.sp 2
The number of shares assigned to a cluster is only meaningful
when you compare it to the number assigned to other clusters, or
to the total number. The total number of shares is the sum of all
the shares assigned in each share assignment.
.sp 2

.ce 1000
\fBResourceReservation section\fR
.ce 0

.sp 2
By default, only LSF administrators or root can add or delete
advance reservations.
.sp 2
The ResourceReservation section defines an advance reservation
policy. It specifies:
.sp 2
*  Users or user groups that can create reservations
.sp 2
*  Hosts that can be used for the reservation
.sp 2
*  Time window when reservations can be created
.sp 2
Each advance reservation policy is defined in a separate
ResourceReservation section, so it is normal to have multiple
ResourceReservation sections in lsb.resources.
.SH Example ResourceReservation section

.sp 2
Only \fRuser1\fR and \fRuser2\fR can make advance reservations on
\fRhostA\fR and \fRhostB\fR. The reservation time window is
between 8:00 a.m. and 6:00 p.m. every day:
.sp 2
Begin ResourceReservation 
.br
NAME        = dayPolicy 
.br
USERS       = user1 user2     # optional 
.br
HOSTS       = hostA hostB     # optional 
.br
TIME_WINDOW = 8:00-18:00      # weekly recurring reservation 
.br
End ResourceReservation
.sp 2
\fRuser1\fR can add the following reservation for user
\fRuser2\fR to use on \fRhostA\fR every Friday between 9:00 a.m.
and 11:00 a.m.:
.sp 2
% user1@hostB> brsvadd -m "hostA" -n 1 -u "user2" -t "5:9:0-5:11:0" 
.br
Reservation "user2#2" is created
.sp 2
Users can only delete reservations they created themselves. In
the example, only user \fRuser1\fR can delete the reservation;
\fRuser2\fR cannot. Administrators can delete any reservations
created by users.
.SH Parameters

.sp 2
*  HOSTS
.sp 2
*  NAME
.sp 2
*  TIME_WINDOW
.sp 2
*  USERS
.sp 2

.ce 1000
\fBHOSTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRHOSTS=\fR[\fR~\fR]\fIhost_name\fR | [\fR~\fR]\fIhost_group\fR
| \fRall\fR | \fRallremote\fR | \fRall@\fR\fIcluster_name\fR ...
.SH Description

.sp 2
A space-separated list of hosts, host groups defined in lsb.hosts
on which administrators or users specified in the USERS parameter
can create advance reservations.
.sp 2
The hosts can be local to the cluster or hosts leased from remote
clusters.
.sp 2
If a group contains a subgroup, the reservation configuration
applies to each member in the subgroup recursively.
.sp 2
Use the keyword all to configure reservation policies that apply
to all local hosts in a cluster not explicitly excluded. This is
useful if you have a large cluster but you want to use the not
operator (~) to exclude a few hosts from the list of hosts where
reservations can be created.
.sp 2
Use the keyword allremote to specify all hosts borrowed from all
remote clusters.
.sp 2
\fBTip: \fR
.sp 2
You cannot specify host groups or host partitions that contain
the allremote keyword.
.sp 2
Use all@\fIcluster_name\fR to specify the group of all hosts
borrowed from one remote cluster. You cannot specify a host group
or partition that includes remote resources.
.sp 2
With MultiCluster resource leasing model, the not operator (~)
can be used to exclude local hosts or host groups. You cannot use
the not operator (~) with remote hosts.
.SH Examples

.sp 2
HOSTS=hgroup1 ~hostA hostB hostC
.sp 2
Advance reservations can be created on \fRhostB\fR, \fRhostC\fR,
and all hosts in \fRhgroup1\fR except for \fRhostA\fR.
.sp 2
HOSTS=all ~group2 ~hostA
.sp 2
Advance reservations can be created on all hosts in the cluster,
except for \fRhostA\fR and the hosts in \fRgroup2\fR.
.SH Default

.sp 2
all allremote (users can create reservations on all server hosts
in the local cluster, and all leased hosts in a remote cluster).
.sp 2

.ce 1000
\fBNAME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRNAME=\fR\fItext\fR
.SH Description

.sp 2
Required. Name of the ResourceReservation section
.sp 2
Specify any ASCII string 40 characters or less. You can use
letters, digits, underscores (_) or dashes (-). You cannot use
blank spaces.
.SH Example

.sp 2
NAME=reservation1
.SH Default

.sp 2
None. You must provide a name for the ResourceReservation
section.
.sp 2

.ce 1000
\fBTIME_WINDOW\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRTIME_WINDOW=\fR\fItime_window\fR ...
.SH Description

.sp 2
Optional. Time window for users to create advance reservations.
The time for reservations that users create must fall within this
time window.
.sp 2
Use the same format for \fItime_window\fR as the recurring
reservation option (-t) of brsvadd. To specify a time window,
specify two time values separated by a hyphen (-), with no space
in between:
.sp 2
time_window = begin_time-end_time [time_zone]
.SH Time format

.sp 2
Times are specified in the format:
.sp 2
[day:]hour[:minute]
.sp 2
where all fields are numbers with the following ranges:
.sp 2
*  \fIday of the week\fR: 0-6 (0 is Sunday)
.sp 2
*  \fIhour\fR: 0-23
.sp 2
*  \fIminute\fR: 0-59
.sp 2
\fItime_zone\fR, which is optional, is the time zone for the
time. LSF supports all standard time zone abbreviations. If you
do not specify a time zone, LSF uses the local system time zone.
.sp 2
Specify a time window one of the following ways:
.sp 2
*  \fIhour\fR-\fIhour\fR [\fItime_zone\fR]
.sp 2
*  \fIhour\fR:\fIminute\fR-\fIhour\fR:\fIminute\fR
   [\fItime_zone\fR]
.sp 2
*  \fIday\fR:\fIhour\fR:\fIminute\fR-\fIday\fR:\fIhour\fR:\fIminute\fR
   [\fItime_zone\fR]
.sp 2
The default value for minute is 0 (on the hour); the default
value for day is every day of the week.
.sp 2
You must specify at least the hour. Day of the week and minute
are optional. Both the start time and end time values must use
the same syntax. If you do not specify a minute, LSF assumes the
first minute of the hour (\fR:00\fR). If you do not specify a
day, LSF assumes every day of the week. If you do specify the
day, you must also specify the minute.
.sp 2
You can specify multiple time windows, but they cannot overlap.
For example:
.sp 2
timeWindow(8:00-14:00 18:00-22:00)
.sp 2
is correct, but
.sp 2
timeWindow(8:00-14:00 11:00-15:00)
.sp 2
is not valid.
.sp 2
If you specify a time zone for multiple time windows, all time
window entries must be consistent in whether they set the time
zones. That is, either all entries must set a time zone, or all
entries must not set a time zone. For example:
.sp 2
timeWindow(8:00-14:00 EDT 18:00-22:00 EDT)
.sp 2
is correct, but
.sp 2
timeWindow(8:00-14:00 18:00-22:00 EDT)
.sp 2
is not valid.
.SH Example

.sp 2
TIME_WINDOW=8:00-14:00
.sp 2
Users can create advance reservations with begin time (brsvadd
-b), end time (brsvadd -e), or time window (brsvadd -t) on any
day between 8:00 a.m. and 2:00 p.m.
.SH Default

.sp 2
Undefined (any time)
.sp 2

.ce 1000
\fBUSERS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRUSERS=\fR[\fR~\fR]\fIuser_name\fR | [\fR~\fR]\fIuser_group\fR
 ... | \fRall\fR
.SH Description

.sp 2
A space-separated list of user names or user groups who are
allowed to create advance reservations. Administrators, root, and
all users or groups listed can create reservations.
.sp 2
If a group contains a subgroup, the reservation policy applies to
each member in the subgroup recursively.
.sp 2
User names must be valid login names. User group names can be LSF
user groups or UNIX and Windows user groups.
.sp 2
Use the keyword all to configure reservation policies that apply
to all users or user groups in a cluster. This is useful if you
have a large number of users but you want to exclude a few users
or groups from the reservation policy.
.sp 2
Use the not operator (~) to exclude users or user groups from the
list of users who can create reservations.
.sp 2
\fBCAUTION: \fR
.sp 2
The not operator does not exclude LSF administrators from the
policy.
.SH Example

.sp 2
USERS=user1 user2
.SH Default

.sp 2
all (all users in the cluster can create reservations)
.sp 2

.ce 1000
\fBReservationUsage section\fR
.ce 0

.sp 2
To enable greater flexibility for reserving numeric resources
that are reserved by jobs, configure the ReservationUsage section
in lsb.resources to reserve resources as PER_JOB, PER_TASK, or
PER_HOST. For example:
.SH Example ReservationUsage section

.sp 2
Begin ReservationUsage 
.br
RESOURCE             METHOD        RESERVE
.br
resourceX             PER_JOB           Y
.br
resourceY             PER_HOST          N
.br
resourceZ             PER_TASK          N
.br
End ReservationUsage
.SH Parameters

.sp 2
*  RESOURCE
.sp 2
*  METHOD
.sp 2
*  RESERVE
.sp 2

.ce 1000
\fBRESOURCE\fR
.ce 0

.sp 2
The name of the resource to be reserved. User-defined numeric
resources can be reserved, but only if they are shared (they are
not specific to one host).
.sp 2
The following built-in resources can be configured in the
ReservationUsage section and reserved:
.sp 2
*  \fRmem\fR
.sp 2
*  \fRtmp\fR
.sp 2
*  \fRswp\fR
.sp 2
Any custom resource can also be reserved if it is shared (defined
in the Resource section of lsf.shared) or host based (listed in
the Host section of the lsf.cluster file in the resource column).
.sp 2

.ce 1000
\fBMETHOD\fR
.ce 0

.sp 2
The resource reservation method. One of:
.sp 2
*  PER_JOB
.sp 2
*  PER_HOST
.sp 2
*  PER_TASK
.sp 2
The cluster-wide RESOURCE_RESERVE_PER_SLOT parameter in
lsb.params is obsolete.
.sp 2
RESOURCE_RESERVE_PER_TASK parameter still controls resources not
configured in lsb.resources. Resources not reserved in
lsb.resources are reserved by job if it is a shared resource or
by host if it is a host-based resource.
.sp 2
PER_HOST reservation means that for the parallel job, LSF
reserves one instance of a for each host. For example, some
application licenses are charged only once no matter how many
applications are running provided those applications are running
on the same host under the same user.
.sp 2
Use no method ("-") when setting mem, swp, or tmp as
\fRRESERVE=Y\fR.
.sp 2

.ce 1000
\fBRESERVE\fR
.ce 0

.sp 2
Reserves the resource for pending jobs that are waiting for
another resource to become available.
.sp 2
For example, job A requires resources X, Y, and Z to run, but
resource Z is a high demand or scarce resource. This job pends
until Z is available. In the meantime, other jobs requiring only
X and Y resources run. If X and Y are set as reservable resources
(the \fBRESERVE\fR parameter is set to "Y"), as soon as Z
resource is available, job A runs. If they are not, job A may
never be able to run because all resources are never available at
the same time.
.sp 2
\fBRestriction: \fR
.sp 2
Only the following built-in resources can be defined as
reservable:
.sp 2
*  \fRmem\fR
.sp 2
*  \fRswp\fR
.sp 2
*  \fRtmp\fR
.sp 2
Use no method (\fR-\fR) when setting \fRmem\fR, \fRswp\fR, or
\fRtmp\fR as \fRRESERVE=Y\fR.
.sp 2
When submitting a job, the queue must have RESOURCE_RESERVE
defined.
.sp 2
Backfill of the reservable resources is also supported when you
submit a job with reservable resources to a queue with BACKFILL
defined.
.sp 2
Valid values are Y and N. If not specified, resources are not
reserved.
.SH Assumptions and limitations

.sp 2
*  Per-resource configuration defines resource usage for
   individual resources, but it does not change any existing
   resource limit behavior (PER_JOB, PER_TASK).
.sp 2
*  In the LSF multicluster capability environment, you should
   configure resource usage in the scheduling cluster (submission
   cluster in lease model or receiving cluster in job forward
   model).
.sp 2

.ce 1000
\fBAutomatic time-based configuration\fR
.ce 0

.sp 2
Variable configuration is used to automatically change LSF
configuration based on time windows. You define automatic
configuration changes in lsb.resources by using if-else
constructs and time expressions. After you change the files,
reconfigure the cluster with the badmin reconfig command.
.sp 2
The expressions are evaluated by LSF every 10 minutes based on
mbatchd start time. When an expression evaluates true, LSF
dynamically changes the configuration based on the associated
configuration statements. Reconfiguration is done in real time
without restarting mbatchd, providing continuous system
availability.
.SH Example

.sp 2
# limit usage of hosts for group and time 
.br
# based configuration
.br
# - 10 jobs can run from normal queue
.br
# - any number can run from short queue between 18:30 
.br
#   and 19:30
.br
#   all other hours you are limited to 100 slots in the 
.br
#   short queue
.br
# - each other queue can run 30 jobs
.br

.sp 2
Begin Limit
.br
PER_QUEUE               HOSTS       SLOTS     # Example
.br
normal                  Resource1    10
.br
# if time(18:30-19:30 EDT)     
.br
short                   Resource1    -  
.br
#else
.br
short                   Resource1    100
.br
#endif    
.br
(all ~normal ~short)    Resource1    30     
.br
End Limit
.br

.sp 2
Specifying the time zone is optional. If you do not specify a
time zone, LSF uses the local system time zone. LSF supports all
standard time zone abbreviations.
.sp 2

.ce 1000
\fBPowerPolicy section\fR
.ce 0

.sp 2
This section enables and defines a power management policy.
.SH Example PowerPolicy section

.sp 2
Begin PowerPolicy 
.br
NAME          = policy_night
.br
HOSTS         = hostGroup1 host3
.br
TIME_WINDOW   = 23:00-8:00 EDT
.br
MIN_IDLE_TIME = 1800
.br
CYCLE_TIME = 60
.br
End PowerPolicy 
.br

.SH Parameters

.sp 2
*  NAME
.sp 2
*  HOSTS
.sp 2
*  TIME_WINDOW
.sp 2
*  MIN_IDLE_TIME
.sp 2
*  CYCLE_TIME
.sp 2

.ce 1000
\fBNAME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRNAME=\fR\fIstring\fR
.SH Description

.sp 2
Required. Unique name for the power management policy.
.sp 2
Specify any ASCII string 60 characters or less. You can use
letters, digits, underscores (\fR_\fR), dashes (\fR-\fR), or
periods (\fR.\fR). You cannot use blank spaces.
.SH Example

.sp 2
NAME=policy_night1
.SH Default

.sp 2
None. You must provide a name to define a power policy.
.sp 2

.ce 1000
\fBHOSTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRHOSTS=\fIhost_list\fR\fR
.SH Description

.sp 2
\fIhost_list\fR is a space-separated list of host names, host
groups, host partitions, or compute units.
.sp 2
Required. Specified hosts should not overlap between power
policies.
.SH Example

.sp 2
HOSTS=hostGroup1 host3
.SH Default

.sp 2
If a host is not defined, the default value is all other hosts
that are not included in power policy. (Does not contain the
management and management candidate hosts)
.sp 2

.ce 1000
\fBTIME_WINDOW\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRTIME_WINDOW=\fR\fItime_window\fR ...
.SH Description

.sp 2
Required. Time window is the time period to which the power
policy applies.
.sp 2
To specify a time window, specify two time values separated by a
hyphen (-), with no space in between
.sp 2
time_window = begin_time-end_time
.SH Time format

.sp 2
Times are specified in the format:
.sp 2
[day:]hour[:minute]
.sp 2
where all fields are numbers with the following ranges:
.sp 2
*  \fIday of the week\fR: 0-6 (0 is Sunday)
.sp 2
*  \fIhour\fR: 0-23
.sp 2
*  \fIminute\fR: 0-59
.sp 2
Specify a time window one of the following ways:
.sp 2
*  \fIhour\fR-\fIhour\fR
.sp 2
*  \fIhour\fR:\fIminute\fR-\fIhour\fR:\fIminute\fR
.sp 2
*  \fIday\fR:\fIhour\fR:\fIminute\fR-\fIday\fR:\fIhour\fR:\fIminute\fR
.sp 2
The default value for minute is 0 (on the hour); the default
value for day is every day of the week.
.sp 2
You must specify at least the hour. Day of the week and minute
are optional. Both the start time and end time values must use
the same syntax. If you do not specify a minute, LSF assumes the
first minute of the hour (\fR:00\fR). If you do not specify a
day, LSF assumes every day of the week. If you do specify the
day, you must also specify the minute.
.sp 2
You can specify multiple time windows, but they cannot overlap.
For example:
.sp 2
timeWindow(8:00-14:00 18:00-22:00)
.sp 2
is correct, but
.sp 2
timeWindow(8:00-14:00 11:00-15:00)
.sp 2
is not valid.
.SH Example

.sp 2
TIME_WINDOW=8:00-14:00
.SH Default

.sp 2
Not defined (any time)
.sp 2

.ce 1000
\fBMIN_IDLE_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMIN_IDLE_TIME=\fR\fRminutes\fR
.SH Description

.sp 2
This parameter takes effect if \fBTIME_WINDOW\fR is configured
and is valid. It defines the host idle time before power
operations are issued for defined hosts.
.SH Example

.sp 2
MIN_IDLE_TIME=60
.SH Default

.sp 2
0
.sp 2

.ce 1000
\fBCYCLE_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCYCLE_TIME=\fR\fRminutes\fR
.SH Description

.sp 2
This parameter takes effect if \fBTIME_WINDOW\fR is configured
and is valid. It defines the minimum time (in minutes) between
changes in power states for defined hosts.
.SH Example

.sp 2
CYCLE_TIME=15
.SH Default

.sp 2
0