
.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBlsb.params\fR
.ce 0

.sp 2
The lsb.params file defines general parameters used by the LSF
system. This file contains only one section, named Parameters.
mbatchd uses lsb.params for initialization. The file is optional.
If not present, the LSF-defined defaults are assumed.
.sp 2
Some of the parameters that can be defined in lsb.params control
timing within the system. The default settings provide good
throughput for long-running batch jobs while adding a minimum of
processing overhead in the batch daemons.
.sp 2
This file is installed by default in
LSB_CONFDIR/\fIcluster_name\fR/configdir.
.sp 2
   ABS_RUNLIMIT
.br

.sp 2
   ACCT_ARCHIVE_AGE
.br

.sp 2
   ACCT_ARCHIVE_SIZE
.br

.sp 2
   ACCT_ARCHIVE_TIME
.br

.sp 2
   ADVRSV_USER_LIMIT
.br

.sp 2
   ALLOCATION_PLANNER
.br

.sp 2
   ALLOW_EVENT_TYPE
.br
   Specifies the events that are logged into the stream files
   (lsb.stream, lsb.status, and lsb.pending reasons).
.sp 2
   AR_AVAILABLE_STATUS
.br

.sp 2
   AR_RUNLIMIT_CHECK
.br

.sp 2
   ATTR_CREATE_USERS
.br
   Specifies the users who can create host attributes for job
   affinity scheduling.
.sp 2
   ATTR_MAX_NUM
.br
   Specifies the maximum number of host attributes that can
   co-exist in the LSF cluster.
.sp 2
   ATTR_TTL
.br
   Specifies the time-to-live for newly-created host attributes.
.sp 2
   BJOBS_RES_REQ_DISPLAY
.br

.sp 2
   BSWITCH_MODIFY_RUSAGE
.br

.sp 2
   CHUNK_JOB_DURATION
.br

.sp 2
   CLEAN_PERIOD
.br

.sp 2
   COMMITTED_RUN_TIME_FACTOR
.br

.sp 2
   CLEAN_PERIOD_DONE
.br

.sp 2
   COMPUTE_UNIT_TYPES
.br

.sp 2
   CONDENSE_PENDING_REASONS
.br

.sp 2
   CPU_TIME_FACTOR
.br

.sp 2
   DEFAULT_APPLICATION
.br

.sp 2
   DEFAULT_BWAIT_TIMEOUT
.br
   Specifies the default timeout interval to evaluate the wait
   conditions in a scheduling session, in minutes.
.sp 2
   DEFAULT_HOST_SPEC
.br

.sp 2
   DEFAULT_JOB_CWD
.br

.sp 2
   DEFAULT_JOB_OUTDIR
.br

.sp 2
   DEFAULT_JOBGROUP
.br

.sp 2
   DEFAULT_PROJECT
.br

.sp 2
   DEFAULT_QUEUE
.br

.sp 2
   DEFAULT_RC_ACCOUNT_PER_PROJECT
.br

.sp 2
   DEFAULT_RESREQ_ORDER
.br

.sp 2
   DEFAULT_SLA_VELOCITY
.br

.sp 2
   DEFAULT_USER_GROUP
.br

.sp 2
   DETECT_IDLE_JOB_AFTER
.br

.sp 2
   DIAGNOSE_LOGDIR
.br

.sp 2
   DISABLE_UACCT_MAP
.br

.sp 2
   DOCKER_IMAGE_AFFINITY
.br

.sp 2
   EADMIN_TRIGGER_DURATION
.br

.sp 2
   EADMIN_TRIGGER_INTERVAL
.br

.sp 2
   EGO_SLOTBASED_VELOCITY_SLA
.br

.sp 2
   EGROUP_UPDATE_INTERVAL
.br
   Specifies the time interval for which dynamic user and host
   group information is updated automatically.
.sp 2
   ELIGIBLE_PENDINFO_SNAPSHOT_INTERVAL
.br
   Specifies the time interval for mbschd to dump eligible and
   ineligible pending information to disk.
.sp 2
   ENABLE_DEFAULT_EGO_SLA
.br

.sp 2
   ENABLE_DIAGNOSE
.br

.sp 2
   ENABLE_EVENT_STREAM
.br

.sp 2
   ENABLE_EXIT_RATE_PER_SLOT
.br

.sp 2
   ENABLE_GPU_HIST_RUN_TIME
.br
   Enables the use of historical GPU run time in the calculation
   of fairshare scheduling priority. Used with fairshare
   scheduling.
.sp 2
   ENABLE_HIST_RUN_TIME
.br

.sp 2
   ENABLE_HOST_INTERSECTION
.br

.sp 2
   ENABLE_JOB_INFO_BY_ADMIN_ROLE
.br

.sp 2
   ENABLE_RC_ACCOUNT_REQUEST_BY_USER
.br

.sp 2
   ENABLE_USER_RESUME
.br

.sp 2
   ENFORCE_ONE_UG_LIMITS
.br

.sp 2
   ENFORCE_UG_TREE
.br

.sp 2
   ESTIMATED_RUNTIME
.br

.sp 2
   ESTIMATOR_CPUS
.br

.sp 2
   ESTIMATOR_MAX_JOBS_PREDICTION
.br

.sp 2
   ESTIMATOR_MAX_RUNTIME_PREDICTION
.br

.sp 2
   ESTIMATOR_MAX_TIME_PREDICTION
.br

.sp 2
   ESTIMATOR_SIM_START_INTERVAL
.br

.sp 2
   EVALUATE_JOB_DEPENDENCY
.br
   Set the maximum number of job dependencies mbatchd evaluates
   in one scheduling cycle.
.sp 2
   EVALUATE_JOB_DEPENDENCY_TIMEOUT
.br
   Set the maximum amount of time, in seconds or milliseconds,
   that the mbatchd daemon takes to evaluate job dependencies in
   one scheduling cycle.
.sp 2
   EVALUATE_WAIT_CONDITION_TIMEOUT
.br
   Specifies a limit to the amount of time that the mbatchd
   daemon spends on evaluating the bwait wait conditions in a
   scheduling session.
.sp 2
   EVENT_STREAM_FILE
.br

.sp 2
   EVENT_UPDATE_INTERVAL
.br

.sp 2
   EXIT_RATE_TYPE
.br

.sp 2
   EXTEND_JOB_EXCEPTION_NOTIFY
.br

.sp 2
   FAIRSHARE_ADJUSTMENT_FACTOR
.br

.sp 2
   FWD_JOB_FACTOR
.br

.sp 2
   GLOBAL_EXIT_RATE
.br

.sp 2
   GLOBAL_LIMITS
.br
   Enables global limit scheduling.
.sp 2
   GPU_REQ_MERGE
.br

.sp 2
   GPU_RUN_TIME_FACTOR
.br
   GPU run time weighting factor. Used only with fairshare
   scheduling.
.sp 2
   HIST_HOURS
.br

.sp 2
   JOB_ACCEPT_INTERVAL
.br

.sp 2
   JOB_ARRAY_EVENTS_COMBINE
.br

.sp 2
   JOB_ATTA_DIR
.br

.sp 2
   JOB_CWD_TTL
.br

.sp 2
   JOB_DEP_LAST_SUB
.br

.sp 2
   JOB_DISPATCH_PACK_SIZE
.br

.sp 2
   JOB_DISTRIBUTE_ON_HOST
.br

.sp 2
   JOB_EXIT_RATE_DURATION
.br

.sp 2
   JOB_GROUP_CLEAN
.br
   Setting the \fBJOB_GROUP_CLEAN\fR parameter allows for the
   automatic deletion of empty job groups.
.sp 2
   JOB_INCLUDE_POSTPROC
.br

.sp 2
   JOB_INFO_EVENT_DUMP_INTERVAL
.br

.sp 2
   JOB_INFO_MEMORY_CACHE_SIZE
.br

.sp 2
   JOB_POSITION_CONTROL_BY_ADMIN
.br

.sp 2
   JOB_POSTPROC_TIMEOUT
.br

.sp 2
   JOB_PREPROC_TIMEOUT
.br

.sp 2
   JOB_PRIORITY_OVER_TIME
.br

.sp 2
   JOB_RUNLIMIT_RATIO
.br

.sp 2
   JOB_SCHEDULING_INTERVAL
.br
   Specifies the minimum scheduling cycle time and the job
   scheduling interval threshold time.
.sp 2
   JOB_SPOOL_DIR
.br

.sp 2
   JOB_SWITCH2_EVENT (OBSOLETE)
.br

.sp 2
   JOB_TERMINATE_INTERVAL
.br

.sp 2
   KILL_JOBS_OVER_RUNLIMIT
.br

.sp 2
   LOCAL_MAX_PREEXEC_RETRY
.br

.sp 2
   LOCAL_MAX_PREEXEC_RETRY_ACTION
.br

.sp 2
   LSB_SYNC_HOST_STAT_LIM
.br

.sp 2
   MAX_ACCT_ARCHIVE_FILE
.br

.sp 2
   MAX_CONCURRENT_QUERY
.br

.sp 2
   MAX_EVENT_STREAM_FILE_NUMBER
.br

.sp 2
   MAX_EVENT_STREAM_SIZE
.br

.sp 2
   MAX_INFO_DIRS
.br

.sp 2
   MAX_JOB_ARRAY_SIZE
.br

.sp 2
   MAX_JOB_ATTA_SIZE
.br

.sp 2
   MAX_JOB_NUM
.br

.sp 2
   MAX_JOB_PREEMPT
.br

.sp 2
   MAX_JOB_PREEMPT_RESET
.br

.sp 2
   MAX_JOB_REQUEUE
.br

.sp 2
   MAX_JOBID
.br

.sp 2
   MAX_JOBINFO_QUERY_PERIOD
.br

.sp 2
   MAX_PEND_JOBS
.br

.sp 2
   MAX_PEND_SLOTS
.br

.sp 2
   MAX_PREEXEC_RETRY
.br

.sp 2
   MAX_PROTOCOL_INSTANCES
.br

.sp 2
   MAX_SBD_CONNS
.br
   Sets the maximum number of open file connections between
   mbatchd and sbatchd. The system sets \fBMAX_SBD_CONNS\fR
   automatically during mbatchd startup.
.sp 2
   MAX_SBD_FAIL
.br

.sp 2
   MAX_TOTAL_TIME_PREEMPT
.br

.sp 2
   MAX_USER_PRIORITY
.br

.sp 2
   MBD_EGO_CONNECT_TIMEOUT
.br

.sp 2
   MBD_EGO_READ_TIMEOUT
.br

.sp 2
   MBD_EGO_TIME2LIVE
.br

.sp 2
   MBD_QUERY_CPUS
.br

.sp 2
   MBD_REFRESH_TIME
.br

.sp 2
   MBD_SLEEP_TIME
.br

.sp 2
   MBD_USE_EGO_MXJ
.br

.sp 2
   MC_PENDING_REASON_PKG_SIZE
.br

.sp 2
   MC_PENDING_REASON_UPDATE_INTERVAL
.br

.sp 2
   MC_PLUGIN_SCHEDULE_ENHANCE
.br

.sp 2
   MC_PLUGIN_UPDATE_INTERVAL
.br

.sp 2
   MC_RECLAIM_DELAY
.br

.sp 2
   MC_RESOURCE_MATCHING_CRITERIA
.br

.sp 2
   MC_RUSAGE_UPDATE_INTERVAL
.br

.sp 2
   MC_SORT_BY_SUBMIT_TIME
.br

.sp 2
   MIN_SWITCH_PERIOD
.br

.sp 2
   NEWJOB_REFRESH
.br

.sp 2
   NO_PREEMPT_FINISH_TIME
.br

.sp 2
   NO_PREEMPT_INTERVAL
.br
   Specifies the number of minutes a preemptable job can run
   before it is preempted. If the uninterrupted run time of a
   preemptable job is longer than the specified time, it can be
   preempted.
.sp 2
   NO_PREEMPT_RUN_TIME
.br

.sp 2
   MAX_JOB_MSG_NUM
.br

.sp 2
   ORPHAN_JOB_TERM_GRACE_PERIOD
.br

.sp 2
   PARALLEL_SCHED_BY_SLOT
.br

.sp 2
   PEND_REASON_UPDATE_INTERVAL
.br

.sp 2
   PERFORMANCE_THRESHOLD_FILE
.br

.sp 2
   PERSIST_LIVE_CONFIG
.br

.sp 2
   PG_SUSP_IT
.br

.sp 2
   PLAN
.br
   For use when the \fBALLOCATION_PLANNER\fR parameter is
   enabled. Used to identify the jobs that are candidates for
   planning.
.sp 2
   POWER_ON_WAIT
.br

.sp 2
   POWER_RESET_CMD
.br

.sp 2
   POWER_RESUME_CMD
.br

.sp 2
   POWER_STATUS_LOG_MAX
.br

.sp 2
   POWER_SUSPEND_CMD
.br

.sp 2
   POWER_SUSPEND_TIMEOUT
.br

.sp 2
   PREEMPT_DELAY
.br

.sp 2
   PREEMPT_FOR
.br

.sp 2
   PREEMPT_JOBTYPE
.br

.sp 2
   PREEMPTABLE_RESOURCES
.br

.sp 2
   PREEMPTION_WAIT_TIME
.br

.sp 2
   PREEXEC_EXCLUDE_HOST_EXIT_VALUES
.br

.sp 2
   PRIVILEGED_USER_FORCE_BKILL
.br

.sp 2
   RC_MAX_REQUESTS
.br

.sp 2
   RELAX_JOB_DISPATCH_ORDER
.br
   Allows LSF to deviate from standard job prioritization
   policies to improve cluster utilization.
.sp 2
   REMOVE_HUNG_JOBS_FOR
.br

.sp 2
   REMOTE_MAX_PREEXEC_RETRY
.br

.sp 2
   RESCHED_UPON_CSM_SETUP_ERROR
.br
   Enables LSF to reschedule stage-in or non-transfer jobs that
   fail during CSM setup if they fail with the specified CSM API
   error codes.
.sp 2
   RESIZABLE_JOBS
.br
   Allows jobs to be resized or to be autoresizable.
.sp 2
   RESOURCE_RESERVE_PER_TASK
.br

.sp 2
   RUN_JOB_FACTOR
.br

.sp 2
   RUN_TIME_DECAY
.br

.sp 2
   RUN_TIME_FACTOR
.br

.sp 2
   SAME_JOB_AFFINITY
.br
   Enables users to specify affinity preferences for jobs to run
   on the same host or compute unit as another job.
.sp 2
   SBD_SLEEP_TIME
.br

.sp 2
   SCHED_METRIC_ENABLE
.br

.sp 2
   SCHED_METRIC_SAMPLE_PERIOD
.br

.sp 2
   SCHED_PER_JOB_SORT
.br

.sp 2
   SCHEDULER_THREADS
.br

.sp 2
   SECURE_INFODIR_USER_ACCESS
.br
   Prevents users from viewing detailed information for jobs that
   belong to other users.
.sp 2
   SECURE_JOB_INFO_LEVEL
.br

.sp 2
   SIMPLIFIED_GUARANTEE
.br
   Enables simplified scheduling algorithms for package and slot
   pools that are used by jobs with guarantee policies.
.sp 2
   SLA_TIMER
.br

.sp 2
   SSCHED_ACCT_DIR
.br

.sp 2
   SSCHED_MAX_RUNLIMIT
.br

.sp 2
   SSCHED_MAX_TASKS
.br

.sp 2
   SSCHED_REQUEUE_LIMIT
.br

.sp 2
   SSCHED_RETRY_LIMIT
.br

.sp 2
   SSCHED_UPDATE_SUMMARY_BY_TASK
.br

.sp 2
   SSCHED_UPDATE_SUMMARY_INTERVAL
.br

.sp 2
   STRICT_UG_CONTROL
.br

.sp 2
   STRIPING_WITH_MINIMUM_NETWORK
.br

.sp 2
   SUB_TRY_INTERVAL
.br

.sp 2
   SYSTEM_MAPPING_ACCOUNT
.br

.sp 2
   TRACK_ELIGIBLE_PENDINFO
.br
   Allows LSF to determine whether a pending job is eligible for
   scheduling.
.sp 2
   USE_SUSP_SLOTS
.br

.sp 2
Parent topic: Configuration files
.sp 2

.ce 1000
\fBChanging lsb.params configuration\fR
.ce 0

.sp 2
After making any changes to lsb.params, run badmin reconfig to
reconfigure mbatchd.
.sp 2

.ce 1000
\fBAutomatic time-based configuration\fR
.ce 0

.sp 2
Variable configuration is used to automatically change LSF
configuration based on time windows. You define automatic
configuration changes in lsb.params by using if-else constructs
and time expressions. After you change the files, reconfigure the
cluster with the badmin reconfig command.
.sp 2
The expressions are evaluated by LSF every 10 minutes based on
mbatchd start time. When an expression evaluates true, LSF
dynamically changes the configuration based on the associated
configuration statements. Reconfiguration is done in real time
without restarting mbatchd, providing continuous system
availability.
.SH Example

.sp 2
# if 18:30-19:30 is your short job express period, but 
.br
# you want all jobs going to the short queue by default
.br
# and be subject to the thresholds of that queue
.br
# for all other hours, normal is the default queue
.br
#if time(18:30-19:30 EDT)
.br
DEFAULT_QUEUE=short
.br
#else
.br
DEFAULT_QUEUE=normal
.br
#endif
.sp 2
Specifying the time zone is optional. If you do not specify a
time zone, LSF uses the local system time zone. LSF supports all
standard time zone abbreviations.
.sp 2

.ce 1000
\fBParameters section\fR
.ce 0

.sp 2
This section and all the keywords in this section are optional.
If keywords are not present, the default values are assumed.
.sp 2

.ce 1000
\fBParameters set at installation\fR
.ce 0

.sp 2
The following parameter values are set at installation for the
purpose of testing a new cluster:
.sp 2
Begin Parameters
.br
DEFAULT_QUEUE  = normal   #default job queue name
.br
MBD_SLEEP_TIME = 10       #Time used for calculating parameter values (60 secs is default)
.br
SBD_SLEEP_TIME = 7       #sbatchd scheduling interval (30 secs is default)
.br
JOB_ACCEPT_INTERVAL = 1   #interval for any host to accept a job 
.br
                          #(default is 1 (one-fold of MBD_SLEEP_TIME))
.br
End Parameters
.sp 2
With this configuration, jobs submitted to the LSF system will be
started on server hosts quickly. If this configuration is not
suitable for your production use, you should either remove the
parameters to take the default values, or adjust them as needed.
.sp 2
For example, to avoid having jobs start when host load is high,
increase \fBJOB_ACCEPT_INTERVAL\fR so that the job scheduling
interval is longer to give hosts more time to adjust load indices
after accepting jobs.
.sp 2
In production use, you should define \fBDEFAULT_QUEUE\fR to the
normal queue, \fBMBD_SLEEP_TIME\fR to 60 seconds (the default),
and \fBSBD_SLEEP_TIME\fR to 30 seconds (the default).
.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBABS_RUNLIMIT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRABS_RUNLIMIT=y\fR | \fRY\fR
.SH Description

.sp 2
If set, absolute (wall-clock) run time is used instead of
normalized run time for all jobs submitted with the following
values:
.sp 2
*  
   Run time limit or run time estimate specified by the -W or -We
   option of bsub
.sp 2
*  
   \fBRUNLIMIT\fR queue-level parameter in lsb.queues
.sp 2
*  
   \fBRUNLIMIT\fR application-level parameter in lsb.applications
.sp 2
*  
   \fBRUNTIME\fR parameter in lsb.applications
.sp 2
If the CPU factor for a submission host is changed, then the
\fBRUNLIMIT\fR for a job that is already submitted will be
recalculated.
.sp 2
\fBNote: \fRWhen \fBABS_RUNLIMIT\fR is enabled, the bqueues -l
command does not show the run limit normalized to the host.
.SH Default

.sp 2
Set to Y at time of installation. If otherwise undefined, then N.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBACCT_ARCHIVE_AGE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRACCT_ARCHIVE_AGE=\fR\fIdays\fR
.SH Description

.sp 2
Enables automatic archiving of LSF accounting log files, and
specifies the archive interval. LSF archives the current log file
if the length of time from its creation date exceeds the
specified number of days.
.SH See also

.sp 2
*  
   \fBACCT_ARCHIVE_SIZE\fR also enables automatic archiving
.sp 2
*  
   \fBACCT_ARCHIVE_TIME\fR also enables automatic archiving
.sp 2
*  
   \fBMAX_ACCT_ARCHIVE_FILE\fR enables automatic deletion of the
   archives
.SH Default

.sp 2
Not defined; no limit to the age of lsb.acct.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBACCT_ARCHIVE_SIZE \fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRACCT_ARCHIVE_SIZE=\fR\fIkilobytes\fR
.SH Description

.sp 2
Enables automatic archiving of LSF accounting log files, and
specifies the archive threshold. LSF archives the current log
file if its size exceeds the specified number of kilobytes.
.SH See also

.sp 2
*  
   \fBACCT_ARCHIVE_SIZE\fR also enables automatic archiving
.sp 2
*  
   \fBACCT_ARCHIVE_TIME\fR also enables automatic archiving
.sp 2
*  
   \fBMAX_ACCT_ARCHIVE_FILE\fR enables automatic deletion of the
   archives
.SH Default

.sp 2
Not defined; no limit to the size of lsb.acct.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBACCT_ARCHIVE_TIME \fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRACCT_ARCHIVE_TIME=\fR\fIhh\fR\fR:\fR\fImm\fR
.SH Description

.sp 2
Enables automatic archiving of LSF accounting log file lsb.acct,
and specifies the time of day to archive the current log file.
.SH See also

.sp 2
*  
   \fBACCT_ARCHIVE_SIZE\fR also enables automatic archiving
.sp 2
*  
   \fBACCT_ARCHIVE_TIME\fR also enables automatic archiving
.sp 2
*  
   \fBMAX_ACCT_ARCHIVE_FILE\fR enables automatic deletion of the
   archives
.SH Default

.sp 2
Not defined (no time set for archiving lsb.acct)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBADVRSV_USER_LIMIT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRADVRSV_USER_LIMIT=\fR\fIinteger\fR
.SH Description

.sp 2
Sets the number of advance reservations each user or user group
can have in the system.
.SH Valid values

.sp 2
1-10000
.SH Default

.sp 2
100
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBALLOCATION_PLANNER\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRALLOCATION_PLANNER=Y | N | "<\fIkey\fR>[\fIvalue\fR] ..."\fR
.SH Description

.sp 2
By itself, this parameter does not have any effect on scheduling
behavior. You must separately identify sets of candidate jobs to
consider in the planner. This is done by setting \fBPLAN=Y\fR at
the application level (lsb.applications file), queue level
(lsb.queues file), or cluster level (lsb.params file).
.sp 2
The following key-value pairs are supported:
.sp 2
\fBTable 1. Key-Value pairs for ALLOCATION _PLANNER\fR
.sp 2
+---------------+---------------+---------------+---------------+
| key           | value         | Default       | Description   |
+---------------+---------------+---------------+---------------+
| WINDOW        | positive      | 60            | Number of     |
|               | integer       |               | minutes the   |
|               |               |               | planner looks |
|               |               |               | into the      |
|               |               |               | future.       |
+---------------+---------------+---------------+---------------+
| MAX_TIME      | positive      | 3             | Number of     |
|               | integer       |               | minute that   |
|               |               |               | the planner   |
|               |               |               | is permitted  |
|               |               |               | to spend      |
|               |               |               | searching for |
|               |               |               | new planned   |
|               |               |               | allocations.  |
+---------------+---------------+---------------+---------------+
.sp 2
\fBNote: \fR
.sp 2
The \fBPLAN\fR parameter replaces the existing \fBSLOT_RESERVE\fR
parameter and \fBRESOURCE_RESERVE\fR parameter when the
\fBALLOCATION_PLANNER\fR parameter is enabled.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBALLOW_EVENT_TYPE\fR
.ce 0

.sp 2
Specifies the events that are logged into the stream files
(lsb.stream, lsb.status, and lsb.pending reasons).
.sp 2

.SH Syntax

.sp 2
\fRALLOW_EVENT_TYPE=\fR\fIevent_type1 \fR [\fIevent_type2\fR ...]
.SH Description

.sp 2
Use this parameter to prevent unwanted events from being logged
into the stream files.
.SH Valid values

.sp 2
Any space-separated list of valid LSF event types.
.SH Default

.sp 2
Not defined. All event types are logged in the stream files.
.SH Example

.sp 2
The following example allows only the \fBJOB_NEW\fR,
\fBJOB_STATUS\fR, and \fBJOB_FINISH\fR events to be logged in the
stream files:
.sp 2
ALLOW_EVENT_TYPE=JOB_NEW JOB_STATUS JOB_FINISH
.sp 2
The following example for IBM Spectrum LSF Application Center
(LSF Application Center) considerably reduces the number of
events logged, but standard reports will not work after this
configuration:
.sp 2
ALLOW_EVENT_TYPE=JOB_NEW JOB_STATUS JOB_FINISH2 JOB_START JOB_EXECUTE JOB_EXT_MSG JOB_SIGNAL JOB_REQUEUE JOB_MODIFY2
.br
JOB_SWITCH METRIC_LOG
.sp 2
The following example reduces the number of events logged for LSF
Application Center while still allowing standard reports to work:
.sp 2
ALLOW_EVENT_TYPE=JOB_NEW JOB_START JOB_START_ACCEPT JOB_STATUS JOB_FORWARD 
.br
MIG JOB_ACCEPT JOB_SWITCH JOB_FINISH JOB_MODIFY2 UNFULFILL JOB_SIGACT 
.br
JOB_SIGNAL JOB_EXECUTE JOB_REQUEUE JOB_CLEAN JOB_EXCEPTION JOB_EXT_MSG 
.br
JOB_ATTA_DATA JOB_CHUNK SBD_UNREPORTED_STATUS PRE_EXEC_START JOB_FORCE 
.br
JOB_MOVE JOB_RUN_RUSAGE METRIC_LOG
.sp 2
The following example for IBM Spectrum LSF Analytics is the
minimum number of events to provide sufficient information for
IBM Spectrum LSF Analytics to generate reports:
.sp 2
ALLOW_EVENT_TYPE=JOB_NEW JOB_FINISH2 JOB_STARTLIMIT JOB_STATUS2 JOB_PENDING_REASONS
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBAR_AVAILABLE_STATUS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRAR_AVAILABLE_STATUS={ok closed_full closed_Busy closed_Wind
 ...}\fR
.SH Description

.sp 2
This parameter defines which hosts are considered available for
the creation of an AR. It is determined by the following default
status configurations:
.sp 2
*  ok: hosts that have a batch status as \(aqok\(aq
.sp 2
*  closed_Full: the previous non-AR jobs (if any) will be
   suspended
.sp 2
*  closed_Busy: the previous non-AR jobs (if any) will be
   suspended
.sp 2
*  closed_Wind: the AR jobs will only run when the host\(aqs
   dispatch time aligns with the AR\(aqs active window time
.sp 2
The following host-based statuses can also be considered for the
parameter provided the lim status of the host is \(aqok\(aq:
.sp 2
*  closed_Adm
.sp 2
*  closed_EGO
.sp 2
*  closed_LIM
.sp 2
*  closed_Lock
.sp 2
*  unavailable
.sp 2
*  unreach
.SH Default

.sp 2
Set to \fR{ok closed_full closed_Busy closed_Wind}\fR at the time
of installation. Otherwise, not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBAR_RUNLIMIT_CHECK\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRAR_RUNLIMIT_CHECK=y\fR | \fRY\fR
.SH Description

.sp 2
If set, the system will check the expected RUNLIMIT as well as
the estimated runtime of the job and compare it with the closed
AR\(aqs active window time. It will not dispatch the job in an AR if
it is expected for the job to run past the end time of the AR. If
a job cannot complete before the end of the AR, the job will be
put into an ineligible pending state.
.sp 2
If there is a closed AR job pending due to the RUNLIMIT being
over the AR\(aqs end time, the AR will be given an ineligible
pending status. Current explicitly requested AR jobs will also
have an ineligible pending status. Once the RUNLIMIT condition is
not valid, the job will return to an eligible pending state.
.SH Default

.sp 2
Set to N, to not check the RUNLIMIT while scheduling.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBATTR_CREATE_USERS\fR
.ce 0

.sp 2
Specifies the users who can create host attributes for job
affinity scheduling.
.sp 2

.SH Syntax

.sp 2
\fBATTR_CREATE_USERS=none\fR | \fBall\fR | \fB"\fRuser_name
 ...\fB"\fR
.SH Description

.sp 2
Users that are not specified in this parameter cannot create host
attributes.
.sp 2
Specify a space-separated list of users that have permission to
create attributes for jobs, or specify the \fRall\fR keyword to
indicate that all LSF users can create attributes. If you specify
the \fRnone\fR keyword (or do not define this parameter), no
users have permission to create host attributes and the feature
is disabled.
.sp 2
Use the battr create command or the -jobaff command option for
bsub and bmod to create job attributes.
.SH Default

.sp 2
\fRnone\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBATTR_MAX_NUM\fR
.ce 0

.sp 2
Specifies the maximum number of host attributes that can co-exist
in the LSF cluster.
.sp 2

.SH Syntax

.sp 2
\fBATTR_MAX_NUM=\fRinteger
.SH Description

.sp 2
If the number of host attributes in the LSF cluster reaches this
value, LSF rejects any requests to create new attributes.
.sp 2
Use this parameter to limit the decrease in cluster performance
that might result from having too many attributes in the cluster.
.SH Valid values

.sp 2
Any positive integer.
.SH Default

.sp 2
\fR100\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBATTR_TTL\fR
.ce 0

.sp 2
Specifies the time-to-live for newly-created host attributes.
.sp 2

.SH Syntax

.sp 2
\fBATTR_TTL=\fRtime_hours
.sp 2
\fBATTR_TTL=\fRtime_minutes\fBm\fR | \fBM\fR
.SH Description

.sp 2
When LSF creates a new host attribute, the time-to-live (TTL) of
the attribute is set to this parameter value. When the attribute
is used by a new job, the attribute\(aqs TTL is reset to the value
of the \fBATTR_TTL\fR parameter. Use the \fBm\fR or \fBM\fR
keyword to indicate that the parameter value is in minutes,
otherwise the parameter value is in hours. When the TTL reaches
zero, the mbatchd daemon removes this attribute.
.sp 2
Run the badmin mbdrestart command to apply changes to this
parameter value for newly-created attributes. The new TTL also
takes effect on attributes that were created before changing this
parameter value.
.SH Valid values

.sp 2
Any positive integer between 10 minutes and 100 hours. If this
parameter is set to a value that is lower than 10m,
\fBATTR_TTL\fR defaults to the minimum value of 10 minutes. If
this parameter is set to a value that is higher than 100,
\fBATTR_TTL\fR defaults to the maximum vale of 100 hours.
.SH Default

.sp 2
\fR1\fR (1 hour).
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBBJOBS_RES_REQ_DISPLAY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRBJOBS_RES_REQ_DISPLAY=\fR\fInone\fR | \fIbrief\fR | \fIfull\fR
.SH Description

.sp 2
This parameter lets you control how many levels of resource
requirements bjobs -l will display. You can set the parameter to
one of the following values:
.sp 2
*  
   none: bjobs -l does not display any level of resource
   requirement.
.sp 2
*  
   brief: bjobs -l only displays the combined and effective
   resource requirements. This would include, for example, the
   following:
.sp 2
   \fRRESOURCE REQUIREMENT DETAILS\fR:
.sp 2
   \fRCombined : res_req\fR
.sp 2
   \fREffective : res_req\fR
.sp 2
*  
   full: bjobs -l displays the job, app, queue, combined and
   effective resource requirement. This would include, for
   example, the following:
.sp 2
   \fRRESOURCE REQUIREMENT DETAILS:\fR
.sp 2
   \fRJob-level : res_req\fR
.sp 2
   \fRApp-level : res_req\fR
.sp 2
   \fRQueue-level: res_req\fR
.sp 2
   \fRCombined : res_req\fR
.sp 2
   \fREffective : res_req\fR
.sp 2
Combined resource requirements are the result of \fRmbatchd\fR
merging job, application, and queue level resource requirements
for each job.
.sp 2
Effective resource requirements are resource requirements used by
Scheduler to dispatch jobs. Only the rusage can be changed for
running jobs (for example, with bmod -R).
.sp 2
When the job finishes, the effective rsrcreq that the job last
used persists in \fBJOB_FINISH\fR of lsb.acct and\fB
JOB_FINISH2\fR of lsb.stream. If \fRmbatchd\fR was restarted, LSF
recovers job effective rsrcreq with the one persisted in the
\fBJOB_START\fR event. When replaying the \fBJOB_EXECUTE\fR
event, job effective rsrcreq recovers the effective rsrcreq
persisted in \fBJOB_EXECUTE\fR.
.sp 2
After modifying this parameter, use \fRbadmin reconfig\fR or
\fRbadmin mbdrestart\fR make the new value take effect.
.SH Default

.sp 2
brief
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBBSWITCH_MODIFY_RUSAGE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRBSWITCH_MODIFY_RUSAGE=Y|y|N|n\fR
.SH Description

.sp 2
By default, LSF does not modify effective resource requirements
and job resource usage when running the bswitch command. The
effective resource requirement string for scheduled jobs
represents the resource requirement used by the scheduler to make
a dispatch decision. Enable this parameter to allow bswitch to
update job resource usage according to the resource requirements
in the new queue.
.SH Default

.sp 2
Not defined. bswitch does not update effective resource usage of
the job.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBCHUNK_JOB_DURATION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCHUNK_JOB_DURATION=\fR\fIminutes\fR
.SH Description

.sp 2
\fBNote: \fRThis parameter is deprecated and might be removed in
a future version of LSF.
.sp 2
Specifies a CPU limit, run limit, or estimated run time for jobs
submitted to a chunk job queue to be chunked.
.sp 2
When \fBCHUNK_JOB_DURATION\fR is set, the CPU limit or run limit
set at the queue level (\fBCPULIMIT\fR or \fBRUNLMIT\fR),
application level (\fBCPULIMIT\fR or \fBRUNLIMIT\fR), or job
level (-c or -W bsub options), or the run time estimate set at
the application level (\fBRUNTIME\fR) must be less than or equal
to \fBCHUNK_JOB_DURATION\fR for jobs to be chunked.
.sp 2
If \fBCHUNK_JOB_DURATION\fR is set, jobs are \fInot\fR chunked
if:
.sp 2
*  No CPU limit, run time limit, or run time estimate is
   specified at any level, or
.sp 2
*  A CPU limit, run time limit, or run time estimate is greater
   than the value of \fBCHUNK_JOB_DURATION\fR.
.sp 2
The value of \fBCHUNK_JOB_DURATION\fR is displayed by bparams -l.
.SH Examples

.sp 2
*  \fBCHUNK_JOB_DURATION\fR is not defined:
.sp 2
   *  Jobs with no CPU limit, run limit, or run time estimate are
      chunked
.sp 2
   *  Jobs with a CPU limit, run limit, or run time estimate less
      than or equal to 30 are chunked
.sp 2
   *  Jobs with a CPU limit, run limit, or run time estimate
      greater than 30 are \fInot\fR chunked
.sp 2
*  \fRCHUNK_JOB_DURATION=90\fR:
.sp 2
   *  Jobs with no CPU limit, run limit, or run time estimate are
      \fInot\fR chunked
.sp 2
   *  Jobs with a CPU limit, run limit, or run time estimate less
      than or equal to 90 are chunked
.sp 2
   *  Jobs with a CPU limit, run limit, or run time estimate
      greater than 90 are \fInot\fR chunked
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBCLEAN_PERIOD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCLEAN_PERIOD=\fR\fIseconds\fR
.SH Description

.sp 2
The amount of time that finished job records are kept in mbatchd
core memory.
.sp 2
Users can still see all jobs after they have finished using the
bjobs command.
.sp 2
For jobs that finished more than \fBCLEAN_PERIOD\fR seconds ago,
use the bhist command.
.SH Default

.sp 2
3600 (1 hour)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBCLEAN_PERIOD_DONE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCLEAN_PERIOD_DONE=\fR\fIseconds\fR
.SH Description

.sp 2
Controls the amount of time during which successfully finished
jobs are kept in mbatchd core memory. This applies to \fRDONE\fR
and \fRPDONE\fR (post job execution processing) jobs.
.sp 2
If \fBCLEAN_PERIOD_DONE\fR is not defined, the clean period for
\fRDONE\fR jobs is defined by \fBCLEAN_PERIOD\fR in lsb.params.
If \fBCLEAN_PERIOD_DONE\fR is defined, its value must be less
than \fBCLEAN_PERIOD\fR, otherwise it will be ignored and a
warning message will appear.
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBCOMMITTED_RUN_TIME_FACTOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCOMMITTED_RUN_TIME_FACTOR=\fR\fInumber\fR
.SH Description

.sp 2
Used only with fairshare scheduling. Committed run time weighting
factor.
.sp 2
In the calculation of a user’s dynamic priority, this factor
determines the relative importance of the committed run time in
the calculation. If the -W option of bsub is not specified at job
submission and a \fBRUNLIMIT\fR has not been set for the queue,
the committed run time is not considered.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Valid values

.sp 2
Any positive number between 0.0 and 1.0
.SH Default

.sp 2
0.0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBCOMPUTE_UNIT_TYPES\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCOMPUTE_UNIT_TYPES=\fR\fItype1 type2...\fR
.SH Description

.sp 2
Used to define valid compute unit types for topological resource
requirement allocation.
.sp 2
The order in which compute unit types appear specifies the
containment relationship between types. Finer grained compute
unit types appear first, followed by the coarser grained type
that contains them, and so on.
.sp 2
At most one compute unit type in the list can be followed by an
exclamation mark designating it as the default compute unit type.
If no exclamation mark appears, the first compute unit type in
the list is taken as the default type.
.SH Valid values

.sp 2
Any space-separated list of alphanumeric strings.
.SH Default

.sp 2
Not defined
.SH Example

.sp 2
\fRCOMPUTE_UNIT_TYPES=cell enclosure! rack\fR
.sp 2
Specifies three compute unit types, with the default type
\fRenclosure\fR. Compute units of type \fRrack\fR contain type
\fRenclosure\fR, and of type \fRenclosure\fR contain type
\fRcell\fR.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBCONDENSE_PENDING_REASONS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCONDENSE_PENDING_REASONS=ALL\fR | \fRPARTIAL\fR |\fRN\fR
.SH Description

.sp 2
Set to \fRALL\fR, condenses all host-based pending reasons into
one generic pending reason. This is equivalent to setting
\fRCONDENSE_PENDING_REASONS=Y\fR.
.sp 2
Set to \fRPARTIAL\fR, condenses all host-based pending reasons
except shared resource pending reasons into one generic pending
reason.
.sp 2
When the condensed pending reason feature is enabled, only a main
reason will be set for a job if it is supposed to have host
reasons. In other words, the single key reason feature and the
categorized reason feature will show the main reason as
"individual host based reasons".
.sp 2
If enabled, you can request a full pending reason list by running
the following command:
.sp 2
badmin diagnose jobId
.sp 2
\fBTip: \fR
.sp 2
You must be an LSF administrator or a queue administrator to run
this command.
.sp 2
When disabled, (\fRCONDENSE_PENDING_REASONS=N\fR), all pending
reasons are displayed, including all host-based pending reasons.
.SH Examples

.sp 2
*  
   \fRCONDENSE_PENDING_REASONS=ALL\fR If a job has no other
   pending reason, \fRbjobs -p\fR or \fRbjobs -l\fR displays the
   following:
.sp 2
   Individual host based reasons
.br

.sp 2
*  
   \fRCONDENSE_PENDING_REASONS=N\fR The pending reasons are not
   condensed or filtered:
.SH Default

.sp 2
Set to \fRN\fR by default.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBCPU_TIME_FACTOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRCPU_TIME_FACTOR=\fR\fInumber\fR
.SH Description

.sp 2
Used only with fairshare scheduling. CPU time weighting factor.
.sp 2
In the calculation of a user’s dynamic share priority, this
factor determines the relative importance of the cumulative CPU
time used by a user’s jobs.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
0.7
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_APPLICATION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_APPLICATION=\fR\fIapplication_profile_name\fR
.SH Description

.sp 2
The name of the default application profile. The application
profile must already be defined in lsb.applications.
.sp 2
When you submit a job to LSF without explicitly specifying an
application profile, LSF associates the job with the specified
application profile.
.SH Default

.sp 2
Not defined. When a user submits a job without explicitly
specifying an application profile, and no default application
profile is defined by this parameter, LSF does not associate the
job with any application profile.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_BWAIT_TIMEOUT\fR
.ce 0

.sp 2
Specifies the default timeout interval to evaluate the wait
conditions in a scheduling session, in minutes.
.sp 2

.SH Syntax

.sp 2
\fBDEFAULT_BWAIT_TIMEOUT=\fRminutes
.SH Description

.sp 2
If you do not run the bwait -t option, the bwait command uses
this parameter value as the default.
.SH Valid values

.sp 2
An integer in the range 1 - 525600 (one year).
.SH Default

.sp 2
1440 minutes.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_HOST_SPEC\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_HOST_SPEC=\fR\fIhost_name\fR | \fIhost_model\fR
.SH Description

.sp 2
The default CPU time normalization host for the cluster.
.sp 2
The CPU factor of the specified host or host model will be used
to normalize the CPU time limit of all jobs in the cluster,
unless the CPU time normalization host is specified at the queue
or job level.
.SH Default

.sp 2
Not defined
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_JOB_CWD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_JOB_CWD=directory\fR\fR\fR
.SH Description

.sp 2
Cluster-wide current working directory (CWD) for the job. The
path can be absolute or relative to the submission directory.
.sp 2
The path can include the following dynamic patterns, which are
case sensitive:
.sp 2
*  %J - job ID
.sp 2
*  %JG - job group (if not specified, it will be ignored)
.sp 2
*  %I - job index (default value is 0)
.sp 2
*  %EJ - execution job ID
.sp 2
*  %EI - execution job index
.sp 2
*  %P - project name
.sp 2
*  %U - user name
.sp 2
*  %G - New user group new for both CWD and job output directory
.sp 2
*  %H - first execution host name
.sp 2
Unsupported patterns are treated as text.
.sp 2
LSF only creates the directory if CWD includes dynamic patterns.
For example:
.sp 2
DEFAULT_JOB_CWD=/scratch/jobcwd/%U/%J_%I
.br

.sp 2
The job CWD will be created by LSF before the job starts running
based on CWD parameter values. For every job, the CWD is
determined by the following sequence:
.sp 2
1. bsub -cwd. If not defined, LSF goes to steps 2 and 3.
.sp 2
2. Environment variable \fBLSB_JOB_CWD\fR. If not defined, LSF
   goes to steps 3 and 4.
.sp 2
3. Application profile based \fBJOB_CWD\fR parameter. If not
   defined, LSF goes to step 4.
.sp 2
4. Cluster wide CWD (\fBDEFAULT_JOB_CWD\fR). If not defined, it
   means there is no CWD and the submission directory will be
   used instead.
.sp 2
DEFAULT_JOB_CWD supports all LSF path conventions such as UNIX,
UNC and Windows formats. A mixed UNIX and Windows cluster can
specify one path for UNIX and another path for Windows, separated
by a pipe character (\fR|\fR).
.sp 2
DEFAULT_JOB_CWD=unix_path|windows_path
.br

.sp 2
The first part of the path must be for UNIX and the second part
must be for Windows. Both paths must be full paths.
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_JOB_OUTDIR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_JOB_OUTDIR=directory\fR
.SH Description

.sp 2
Set this parameter for LSF to create a cluster wide output
directory for the job. Once set, the system starts using the new
directory and always tries to create the directory if it does not
exist. The directory path can be absolute or relative to the
submission directory with dynamic patterns.
.sp 2
The path can include the following dynamic patterns, which are
case sensitive:
.sp 2
*  %J - job ID
.sp 2
*  %JG - job group (if not specified, it will be ignored)
.sp 2
*  %I - job index (default value is 0)
.sp 2
*  %EJ - execution job ID
.sp 2
*  %EI - execution job index
.sp 2
*  %P - project name
.sp 2
*  %U - user name
.sp 2
*  %G - User group new for the job output directory
.sp 2
*  %H - first execution host name
.sp 2
Unsupported patterns are treated as text.
.sp 2
For example:
.sp 2
\fBDEFALUT_JOB_OUTDIR=\fR/scratch/%U/%J | \\samba\scratch\%U\%J
.sp 2
LSF creates the output directory even if the path does not
include dynamic patterns. LSF checks the directories from the
beginning of the path. If a directory does not exist, the system
tries to create that directory. If it fails to create that
directory then the system deletes all created directories and
uses the submission directory for output. LSF creates all
directories under the 700 permissions with the ownership of a
submission user.
.sp 2
\fBDEFAULT_JOB_OUTDIR\fR supports all LSF path conventions such
as UNIX, UNC and Windows formats. A mixed UNIX and Windows
cluster can specify one path for UNIX and another path for
Windows, separated by a pipe character (\fR|\fR).
.sp 2
DEFAULT_JOB_OUTDIR=unix_path|windows_path
.br

.sp 2
The first part of the path must be for UNIX and the second part
must be for Windows. Both paths must be full paths.
.sp 2
An output directory can also be created for a checkpointed job.
.SH Default

.sp 2
Not defined. The system uses the submission directory for job
output.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_JOBGROUP\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_JOBGROUP=\fR\fIjob_group_name\fR
.SH Description

.sp 2
The name of the default job group.
.sp 2
When you submit a job to LSF without explicitly specifying a job
group, LSF associates the job with the specified job group. The
\fBLSB_DEFAULT_JOBGROUP\fR environment variable overrrides the
setting of \fBDEFAULT_JOBGROUP\fR. The bsub -g
\fIjob_group_name\fR option overrides both
\fBLSB_DEFAULT_JOBGROUP\fR and \fBDEFAULT_JOBGROUP\fR.
.sp 2
Default job group specification supports macro substitution for
project name (%p) and user name (%u). When you specify bsub -P
\fIproject_name\fR, the value of %p is the specified project
name. If you do not specify a project name at job submission, %p
is the project name defined by setting the environment variable
\fBLSB_DEFAULTPROJECT\fR, or the project name specified by
\fBDEFAULT_PROJECT\fR in lsb.params. the default project name is
default.
.sp 2
For example, a default job group name specified by
\fRDEFAULT_JOBGROUP=/canada/%p/%u\fR is expanded to the value for
the LSF project name and the user name of the job submission user
(for example, \fR/canada/projects/user1\fR).
.sp 2
Job group names must follow this format:
.sp 2
*  
   Job group names must start with a slash character (/). For
   example, \fRDEFAULT_JOBGROUP=/A/B/C\fR is correct, but
   \fRDEFAULT_JOBGROUP=A/B/C\fR is not correct.
.sp 2
*  
   Job group names cannot end with a slash character (/). For
   example, \fRDEFAULT_JOBGROUP=/A/\fR is not correct.
.sp 2
*  
   Job group names cannot contain more than one slash character
   (/) in a row. For example, job group names like
   \fRDEFAULT_JOBGROUP=/A//B\fR or \fRDEFAULT_JOBGROUP=A////B\fR
   are not correct.
.sp 2
*  
   Job group names cannot contain spaces. For example,
   \fRDEFAULT_JOBGROUP=/A/B C/D\fR is not correct.
.sp 2
*  
   Project names and user names used for macro substitution with
   %p and %u cannot start or end with slash character (/).
.sp 2
*  
   Project names and user names used for macro substitution with
   %p and %u cannot contain spaces or more than one slash
   character (/) in a row.
.sp 2
*  
   Project names or user names containing slash character (/)
   will create separate job groups. For example, if the project
   name is \fRcanada/projects\fR, \fRDEFAULT_JOBGROUP=/%p\fR
   results in a job group hierarchy \fR/canada/projects\fR.
.SH Example

.sp 2
DEFAULT_JOBGROUP=/canada/projects
.br

.SH Default

.sp 2
Not defined. When a user submits a job without explicitly
specifying job group name, and the \fBLSB_DEFAULT_JOBGROUP\fR
environment variable is not defined, LSF does not associate the
job with any job group.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_PROJECT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_PROJECT=\fR\fIproject_name\fR
.SH Description

.sp 2
The name of the default project. Specify any string.
.sp 2
Project names can be up to 511 characters long.
.sp 2
When you submit a job without specifying any project name, and
the environment variable \fBLSB_DEFAULTPROJECT\fR is not set, LSF
automatically assigns the job to this project.
.SH Default

.sp 2
default
.br

.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_QUEUE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_QUEUE=\fR\fIqueue_name \fR...
.SH Description

.sp 2
Space-separated list of candidate default queues (candidates must
already be defined in lsb.queues).
.sp 2
When you submit a job to LSF without explicitly specifying a
queue, and the environment variable \fBLSB_DEFAULTQUEUE\fR is not
set, LSF puts the job in the first queue in this list that
satisfies the job’s specifications subject to other restrictions,
such as requested hosts, queue status, etc.
.SH Default

.sp 2
This parameter is set at installation to
\fBDEFAULT_QUEUE\fR\fR=normal interactive\fR.
.sp 2
When a user submits a job to LSF without explicitly specifying a
queue, and there are no candidate default queues defined (by this
parameter or by the user’s environment variable
\fBLSB_DEFAULTQUEUE\fR), LSF automatically creates a new queue
named default, using the default configuration, and submits the
job to that queue.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_RC_ACCOUNT_PER_PROJECT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_RC_ACCOUNT_PER_PROJECT=Y\fR | \fRN\fR
.SH Description

.sp 2
Enables LSF to set the project name as the default account name
(tag) on hosts that are borrowed through LSF resource connector.
.sp 2
If this parameter is set to Y, the project name is the default
account name that is tagged on LSF resource connector hosts if
there is no account name set at the job level with the bsub
-rcacct command option.
.sp 2
This account name overrides the value of the \fBRC_ACCOUNT\fR
parameter at the application and queue levels (lsb.applications
and lsb.queues files).
.SH Default

.sp 2
N.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_RESREQ_ORDER\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_RESREQ_ORDER=\fR\fIorder_string\fR
.SH Description

.sp 2
The \fIorder_string\fR is \fR[!][-]resource_name
[:[-]resource_name]...\fR
.sp 2
Specify the global LSF default sorting order for resource
requirements so the scheduler can find the right candidate host.
You can specify any built-in or external load index or static
resource. When an index name is preceded by a minus sign (-), the
sorting order is reversed so that hosts are ordered from worst to
best on that index. A value that contains multiple strings
separated by spaces must be enclosed in quotation marks.
.sp 2
\fBTip: \fRSpecify
\fRDEFAULT_RESREQ_ORDER=-maxmem:-mem:-slots:r15s:pg\fR for the
most common cases.
.SH Default

.sp 2
r15s:pg
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_SLA_VELOCITY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_SLA_VELOCITY=\fR\fInum_slots\fR
.SH Description

.sp 2
For EGO-enabled SLA scheduling, the number of slots that the SLA
should request for parallel jobs running in the SLA.
.sp 2
By default, an EGO-enabled SLA requests slots from EGO based on
the number of jobs the SLA needs to run. If the jobs themselves
require more than one slot, they will remain pending. To avoid
this for parallel jobs, set \fBDEFAULT_SLA_VELOCITY\fR to the
total number of slots that are expected to be used by parallel
jobs.
.SH Default

.sp 2
1
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDEFAULT_USER_GROUP\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDEFAULT_USER_GROUP=\fR\fIdefault_user_group\fR
.SH Description

.sp 2
When \fBDEFAULT_USER_GROUP\fR is defined, all submitted jobs must
be associated with a user group. Jobs without a user group
specified will be associated with \fIdefault_user_group\fR, where
\fIdefault_user_group\fR is a group configured in lsb.users and
contains all as a direct member. \fBDEFAULT_USER_GROUP\fR can
only contain one user group.
.sp 2
If the default user group does not have shares assigned in a
fairshare queue, jobs can still run from the default user group
and are charged to the highest priority account the user can
access in the queue. A job submitted to a user group without
shares in a specified fairshare queue is transferred to the
default user group where the job can run. A job modified or moved
using bmod or bswitch may similarly be transferred to the default
user group.
.sp 2
\fBNote: \fR
.sp 2
The default user group should be configured in most queues and
have shares in most fairshare queues to ensure jobs run smoothly.
.sp 2
Jobs linked to a user group, either through the
\fIdefault_user_group\fR or a user group specified at submission
using bsub -G, allow the user group administrator to issue job
control operations. User group administrator rights are
configured in the \fBUserGroup\fR section lsb.users, under
\fBGROUP_ADMIN\fR.
.sp 2
When \fBDEFAULT_USER_GROUP\fR is not defined, jobs do not require
a user group association.
.sp 2
After adding or changing \fBDEFAULT_USER_GROUP\fR in lsb.params,
use badmin reconfig to reconfigure your cluster
.SH Default

.sp 2
Not defined. When a user submits a job without explicitly
specifying user group name, LSF does not associate the job with
any user group.
.SH See also

.sp 2
\fBSTRICT_UG_CONTROL\fR, \fBENFORCE_ONE_UG_LIMITS\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDETECT_IDLE_JOB_AFTER\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDETECT_IDLE_JOB_AFTER=\fR\fItime_minutes\fR
.SH Description

.sp 2
The minimum job run time before \fRmbatchd\fR reports that the
job is idle.
.SH Default

.sp 2
20 (mbatchd checks if the job is idle after 20 minutes of run
time)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDIAGNOSE_LOGDIR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDIAGNOSE_LOGDIR=<full directory path>\fR
.SH Description

.sp 2
Set \fBDIAGNOSE_LOGDIR\fR to specify the file location for the
collected diagnosis information (query source information in a
log file, or scheduling bucket information in a snapshot file).
.sp 2
If you do not modify this parameter, the default location for the
log file is LSF_LOGDIR.
.sp 2
For query source information, the log file shows who issued these
requests, where the requests came from, and the data size of the
query. The name of the log file is
query_info.querylog.<host_name>.
.sp 2
You can dynamically set the path from the command line with
badmin diagnose -c query -f log_name, where log_name can be a
full path. This overrides any other setting for the path.
However, if you restart/reconfigure \fRmbatchd\fR, this path
setting is lost and it defaults back to the setting you specified
in this parameter.
.sp 2
For example, the output of the log file is:
.sp 2
\fRJan 23 15:58:12 2020
bqueues,root,sjc-host10.rtp.stglabs.ibm.com,25212,0x1\fR
.sp 2
Where:
.sp 2
*  The 1st field is the timestamp. The delimiter between the 1st
   and 2nd field is a space.
.sp 2
*  The 2nd field is the trigger query command. Only \fRmbatchd\fR
   query commands are supported. Some commands may trigger
   multiple queries/entries.
.sp 2
*  The 3rd field is the user. If the user name is unknown, LSF
   displays \fR-\fR.
.sp 2
*  The 4th field is the sending host. If the host name cannot be
   resolved, LSF uses the IP if available, or \fR-\fR.
.sp 2
*  The 5th field is the maximum data size in bytes. The real data
   size may be significantly larger or smaller.
.sp 2
*  The 6th field is for query options. Check lsbatch.h for
   details. If not applied, LSF displays \fR-\fR.
.sp 2
The values are separated by commas to make it easier to write a
script for analyzing the data.
.sp 2
For scheduler job bucket information, the snapshot file contains
an active image of scheduler job buckets as raw data in XML or
JSON format. By default, the name of the snapshot file is
jobreq_\fI<hostname>\fR_\fI<dateandtime>\fR.\fI<format>\fR, and
is in XML format.
.sp 2
You can dynamically set the path from the command line with
badmin diagnose -c jobreq -f snapshot_name, where snapshot_name
can be a full path, and use -t json to specify that the snapshot
file is in JSON format. This overrides any other setting for the
path.
.SH Default

.sp 2
\fBLSF_LOGDIR/\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDISABLE_UACCT_MAP\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRDISABLE_UACCT_MAP=y\fR | \fRY\fR
.SH Description

.sp 2
Specify y or Y to disable user-level account mapping.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBDOCKER_IMAGE_AFFINITY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBDOCKER_IMAGE_AFFINITY=Y\fR | \fBy\fR | \fBN\fR | \fBn\fR
.SH Description

.sp 2
When scheduling Docker-based containerized jobs, setting this
parameter to \fRy\fR or \fRY\fR enables LSF to give preference
for execution hosts that already have the requested Docker image.
This reduces network bandwidth and the job start time because the
execution host does not have to pull the Docker image from the
repository and the job can immediately start on the execution
host.
.sp 2
When this feature is enabled, LSF considers Docker image location
information when scheduling Docker jobs. Docker image affinity
interacts with host preference and \fBorder[]\fR string requests
in the following manner:
.sp 2
*  If host preference is specified, the host preference is
   honored first. Among hosts with the same preference level,
   hosts with the requested Docker image are given higher
   priority.
.sp 2
*  If the \fBorder[]\fR string is specified, the hosts with the
   requested Docker image have a higher priority first. Among
   hosts that all have the requested Docker image, the
   \fBorder[]\fR string is then honored.
.SH Default

.sp 2
N.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEADMIN_TRIGGER_DURATION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fREADMIN_TRIGGER_DURATION=\fR\fIminutes\fR
.SH Description

.sp 2
Defines how often LSF_SERVERDIR/eadmin is invoked once a job
exception is detected. Used in conjunction with job exception
handling parameters \fBJOB_IDLE\fR, \fBJOB_OVERRUN\fR, and
\fBJOB_UNDERRUN\fR in lsb.queues.
.sp 2
When there are exceptions in updating the stream file,
LSF_SERVERDIR/eadmin also runs to report the stream file
exceptions.
.sp 2
\fBTip: \fR
.sp 2
Tune EADMIN_TRIGGER_DURATION carefully. Shorter values may raise
false alarms, longer values may not trigger exceptions frequently
enough.
.SH Example

.sp 2
EADMIN_TRIGGER_DURATION=5
.br

.SH Default

.sp 2
1 minute
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEADMIN_TRIGGER_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fREADMIN_TRIGGER_INTERVAL=\fR\fIseconds\fR
.SH Description

.sp 2
When set to an integer greater than 0, this parameter defines how
often the eadmin script found in LSF_SERVERDIR is invoked by
mbatchd, even without a job exception.
.sp 2
\fBTip: \fR
.sp 2
Tune EADMIN_TRIGGER_INTERVAL carefully. Shorter values may raise
false alarms, longer values may not trigger exceptions frequently
enough.
.SH Example

.sp 2
EADMIN_TRIGGER_INTERVAL=3600
.br

.SH Default

.sp 2
0 : The eadmin script is triggered according to the
\fBEADMIN_TRIGGER_DURATION\fR parameter value.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEGO_SLOTBASED_VELOCITY_SLA\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fREGO_SLOTBASED_VELOCITY_SLA=Y|N\fR
.SH Description

.sp 2
Enables slot based requirements for EGO-enabled SLA. If the value
is N, LSF calculates how many slots you need by the number of
jobs. If the value is Y, LSF calculates how many slots you need
by the number of job slots instead of the number of jobs.
.SH Default

.sp 2
Y
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBELIGIBLE_PENDINFO_SNAPSHOT_INTERVAL\fR
.ce 0

.sp 2
Specifies the time interval for mbschd to dump eligible and
ineligible pending information to disk.
.sp 2

.SH Syntax

.sp 2
\fRELIGIBLE_PENDINFO_SNAPSHOT_INTERVAL=\fR\fIminutes\fR
.SH Description

.sp 2
If \fBTRACK_ELIGIBLE_PENDINFO\fR is enabled, this parameter
allows the eligible and ineligible pending job data to be saved
to disk so that it is not lost when mbatchd restarts. Specify the
time interval, in minutes, for mbschd to save eligible and
ineligible pending data to disk.
.SH Default

.sp 2
If \fBTRACK_ELIGIBLE_PENDINFO\fR is enabled, the default is 5
minutes. Otherwise, this parameter is ignored.
.SH See also

.sp 2
\fBTRACK_ELIGIBLE_PENDINFO\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_DEFAULT_EGO_SLA\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_DEFAULT_EGO_SLA=\fR\fIservice_class_name \fR|
\fIconsumer_name\fR
.SH Description

.sp 2
The name of the default service class or EGO consumer name for
EGO-enabled SLA scheduling. If the specified SLA does not exist
in lsb.servieclasses, LSF creates one with the specified consumer
name, velocity of 1, priority of 1, and a time window that is
always open.
.sp 2
If the name of the default SLA is not configured in
lsb.servicesclasses, it must be the name of a valid EGO consumer.
.sp 2
\fBENABLE_DEFAULT_EGO_SLA\fR is required to turn on EGO-enabled
SLA scheduling. All LSF resource management is delegated to EGO,
and all LSF hosts are under EGO control. When all jobs running in
the default SLA finish, all allocated hosts are released to EGO
after the default idle timeout of 120 seconds (configurable by
\fBMAX_HOST_IDLE_TIME\fR in lsb.serviceclasses).
.sp 2
When you submit a job to LSF without explicitly using the -sla
option to specify a service class name, LSF puts the job in the
default service class specified by \fIservice_class_name\fR.
.SH Default

.sp 2
Not defined. When a user submits a job to LSF without explicitly
specifying a service class, and there is no default service class
defined by this parameter, LSF does not attach the job to any
service class.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_DIAGNOSE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_DIAGNOSE=\fR\fRquery\fR
.SH Description

.sp 2
Enable this parameter for \fRmbatchd\fR to write query source
information to a log file (see DIAGNOSE_LOGDIR in lsb.params).
The log file shows information about the source of \fRmbatchd\fR
queries, allowing you to troubleshoot problems. The log file
shows who issued these requests, where the requests came from,
and the data size of the query.
.sp 2
The log file collects key information like query name, user name,
host name and the data size of the query. You can write a script
to format the output.
.SH Default

.sp 2
Disabled
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_EVENT_STREAM \fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_EVENT_STREAM=Y\fR | \fRN\fR
.SH Description

.sp 2
Used only with event streaming for system performance analysis
tools.
.SH Default

.sp 2
N (event streaming is not enabled)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_EXIT_RATE_PER_SLOT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_EXIT_RATE_PER_SLOT=Y\fR | \fRN\fR
.SH Description

.sp 2
Scales the actual exit rate thresholds on a host according to the
number of slots on the host. For example, if \fREXIT_RATE=2\fR in
lsb.hosts or \fRGLOBAL_EXIT_RATE=2\fR in lsb.params, and the host
has 2 job slots, the job exit rate threshold will be 4.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_GPU_HIST_RUN_TIME\fR
.ce 0

.sp 2
Enables the use of historical GPU run time in the calculation of
fairshare scheduling priority. Used with fairshare scheduling.
.sp 2

.SH Syntax

.sp 2
\fRENABLE_GPU_HIST_RUN_TIME=y | Y | n | N\fR
.SH Description

.sp 2
If set to \fRY\fR, enables the use of historical GPU run time in
the calculation of fairshare scheduling priority.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_HIST_RUN_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_HIST_RUN_TIME=y | Y | n | N\fR
.SH Description

.sp 2
Used with fairshare scheduling and global fairshare scheduling.
If set, enables the use of historical run time in the calculation
of fairshare scheduling priority.
.sp 2
Whether or not \fBENABLE_HIST_RUN_TIME\fR is set for a global
fairshare queue, the historical run time for share accounts in
the global fairshare queue is reported to GPD. When GPD receives
historical run time from one cluster, it broadcasts the
historical run time to other clusters. The remote historical run
time received from GPD is not used in the calculation for
fairshare scheduling priority for the queue.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_HOST_INTERSECTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
ENABLE_HOST_INTERSECTION=Y | N
.SH Description

.sp 2
When enabled, allows job submission to any host that belongs to
the intersection created when considering the queue the job was
submitted to, any advance reservation hosts, or any hosts
specified by bsub -m at the time of submission.
.sp 2
When disabled job submission with hosts specified can be accepted
only if specified hosts are a subset of hosts defined in the
queue.
.sp 2
The following commands are affected by
\fBENABLE_HOST_INTERSECTION\fR:
.sp 2
*  
   bsub
.sp 2
*  
   bmod
.sp 2
*  
   bmig
.sp 2
*  
   brestart
.sp 2
*  
   bswitch
.sp 2
If no hosts exist in the intersection, the job is rejected.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_RC_ACCOUNT_REQUEST_BY_USER\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_RC_ACCOUNT_REQUEST_BY_USER=Y\fR | \fRN\fR
.SH Description

.sp 2
Allows users to assign an account name (tag) to hosts that are
borrowed through LSF resource connector.
.sp 2
If this parameter is set to Y, users can run the bsub -rcacct and
bmod -rcacct command option to assign an account name to LSF
resource connector hosts, or to run the bmod -rcacctn command
option to remove or reset the account name to the default value.
This also allows users to use an esub script to set the
\fBLSB_SUB6_RC_ACCOUNT\fR parameter to change the job level
account name.
.sp 2
The value of \fBLSB_SUB6_RC_ACCOUNT\fR overrides all other values
of the account name, including the bsub -rcacct command option.
The account name that is specified with the bsub -rcacct command
option overrides the value of the \fBRC_ACCOUNT\fR parameter at
the application and queue levels (lsb.applications and lsb.queues
files), and also overrides the cluster-wide project name that is
set if \fRDEFAULT_RC_ACCOUNT_PER_PROJECT=Y\fR is defined in the
lsb.params file.
.sp 2
If this parameter is set to N, the bsub -rcacct and bmod -rcacct
command options are not available.
.SH Default

.sp 2
N.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_USER_RESUME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_USER_RESUME=Y\fR | \fRN\fR
.SH Description

.sp 2
Defines job resume permissions.
.sp 2
When this parameter is defined:
.sp 2
*  
   If the value is Y, users can resume their own jobs that have
   been suspended by the administrator.
.sp 2
*  
   If the value is N, jobs that are suspended by the
   administrator can only be resumed by the administrator or
   root; users do not have permission to resume a job suspended
   by another user or the administrator. Administrators can
   resume jobs suspended by users or administrators.
.SH Default

.sp 2
N (users cannot resume jobs suspended by administrator)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENFORCE_ONE_UG_LIMITS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBENFORCE_ONE_UG_LIMITS=Y | N\fR
.sp 2
Upon job submission with the -G option and when user groups have
overlapping members, defines whether only the specified user
group’s limits (or those of any parent group) are enforced or
whether the most restrictive user group limits of any overlapping
user/user group are enforced.
.sp 2
*  If the value is Y, only the limits defined for the user group
   that you specify with the -G option during job submission
   apply to the job, even if there are overlapping members of
   groups. Resource limits apply to all user groups to which you
   belong .
.sp 2
   If you have nested user groups, the limits of a user\(aqs group
   parent also apply.
.sp 2
   View the jobs under the user groups that you specified with -G
   by running busers. busers shows the jobs under the specified
   user group. If you have nested user groups, the jobs also
   appear under the user group\(aqs parent groups. If you did not
   specify a user group with -G, the jobs appear under all user
   groups to which you belong.
.sp 2
   View existing limits by running blimits.
.sp 2
*  If the value is N and the user group has members that overlap
   with other user groups, the strictest possible limits (that
   you can view by running blimits) defined for any of the member
   user groups are enforced for the job. Resource limits apply to
   all user groups to which you belong .
.sp 2
If the user group specified at submission is no longer valid when
the job runs and \fRENFORCE_ONE_UG_LIMIT=Y\fR, only the user
limit is applied to the job. This can occur if the user group is
deleted or the user is removed from the user group.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENFORCE_UG_TREE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENFORCE_UG_TREE=Y\fR | \fRN\fR
.SH Description

.sp 2
When \fRENFORCE_UG_TREE=Y\fR is defined, user groups must form a
tree-like structure, with each user group having at most one
parent. User group definitions in the \fBUserGroup\fR section of
lsb.users will be checked in configuration order, and any user
group appearing in \fBGROUP_MEMBER\fR more than once will be
ignored after the first occurence.
.sp 2
After adding or changing \fBENFORCE_UG_TREE\fR in lsb.params, use
badmin reconfig to reconfigure your cluster
.SH Default

.sp 2
N (Not defined.)
.SH See also

.sp 2
\fBDEFAULT_USER_GROUP\fR, \fBENFORCE_ONE_UG_LIMIT\fR,
\fBSTRICT_UG_CONTROL\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBESTIMATED_RUNTIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRESTIMATED_RUNTIME=\fR[\fIhour\fR\fR:\fR]\fIminute\fR[\fR/\fR\fIhost_name\fR
| \fR/\fR\fIhost_model\fR]
.SH Description

.sp 2
This parameter specifies an estimated run time for jobs. LSF uses
the ESTIMATED_RUNTIME value for scheduling purposes only, and
does not kill jobs that exceed this value unless the jobs also
exceed a defined RUNLIMIT. The format of runtime estimate is same
as the RUNLIMIT parameter.
.sp 2
The job-level runtime estimate specified by bsub -We, the
ESTIMATED_RUNTIME setting in an application profile, or the
ESTIMATED_RUNTIME setting in a queue all override the
cluster-wide ESTIMATED_RUNTIME setting.
.sp 2
The following LSF features use the ESTIMATED_RUNTIME value to
schedule jobs:
.sp 2
*  Job chunking
.sp 2
*  Advance reservation
.sp 2
*  SLA
.sp 2
*  Slot reservation
.sp 2
*  Backfill
.sp 2
*  Allocation planner
.SH Default

.sp 2
Not defined
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBESTIMATOR_CPUS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRESTIMATOR_CPUS=\fIcpu_num\fR \fR [\fR \fIcpu_num\fR \fR ...]
.SH Description

.sp 2
Defining \fRLSF_INTELLIGENT_CPU_BIND=Y\fR in the lsf.conf file
overrides the value of this parameter. Use
\fRLSF_INTELLIGENT_CPU_BIND=Y\fR instead of this parameter to
enable LSF to bind a defined set of LSF daemons to CPUs.
.sp 2
This parameter is only maintained for backwards compatibility.
.sp 2
Defines a space-delimited list of management host CPU numbers
where the job start time estimator processes can run.
.sp 2
LSF uses separate processes for the simulation-based job start
time estimator. Since these processes are running
compute-intensive tasks on the management host, job start time
estimation can impact the scheduling performance of mbatchd and
mbschd. Use this parameter to bind the estimator processes to the
specified CPUs, which reduces the impact of the estimator on the
performance of mbatchd and mbschd.
.sp 2
You must also define \fRLSB_ENABLE_ESTIMATION=Y\fR in lsf.conf to
enable job start time estimation and to use this parameter.
.SH Valid values

.sp 2
A space-delimited list of CPU numbers.
.SH Example

.sp 2
\fRESTIMATOR_CPUS=1 2\fR
.sp 2
The estimator processes can only run on CPUs number 1 and 2.
.SH Default

.sp 2
Not defined. The estimator processes can run on any CPUs on the
management host.
.SH See also

.sp 2
\fBESTIMATOR_SIM_START_INTERVAL\fR,
\fBESTIMATOR_MAX_TIME_PREDICTION\fR,
\fBESTIMATOR_MAX_JOBS_PREDICTION\fR, and
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR parameters.
.sp 2
\fBLSB_ENABLE_ESTIMATION\fR parameter in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBESTIMATOR_MAX_JOBS_PREDICTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRESTIMATOR_MAX_JOBS_PREDICTION=\fImax_num_jobs\fR\fR
.SH Description

.sp 2
Specifies the maximum number of jobs that the job start time
estimator can predict. mbatchd stops the current round of
estimation when the number of pending jobs dispatched to the
estimator reaches this number, or if there are no more pending
jobs to estimate. Use this parameter to limit the number of
pending jobs for which LSF will provide start time estimates
using simulation-based estimation.
.sp 2
LSF stops the current round of estimation when the estimator
reaches any one of the estimation thresholds
(\fBESTIMATOR_MAX_JOBS_PREDICTION\fR,
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR, and
\fBESTIMATOR_MAX_TIME_PREDICTION\fR).
.sp 2
You must also define \fRLSB_ENABLE_ESTIMATION=Y\fR in lsf.conf to
enable job start time estimation and to use this parameter.
.SH Valid values

.sp 2
Any integer greater than zero.
.SH Default

.sp 2
1000 jobs.
.SH See also

.sp 2
\fBESTIMATOR_SIM_START_INTERVAL\fR,
\fBESTIMATOR_MAX_TIME_PREDICTION\fR,
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR, and \fBESTIMATOR_CPUS\fR
parameters.
.sp 2
\fBLSB_ENABLE_ESTIMATION\fR parameter in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRESTIMATOR_MAX_RUNTIME_PREDICTION=\fIminutes\fR\fR
.SH Description

.sp 2
Specifies the maximum time, in minutes, that the job start time
estimator can run for each round. Once the run time of the
estimator reaches this threshold, or if there are no more pending
jobs to estimate,mbatchd stops the current round of estimation
after the estimator reports all the estimated job start times
back to mbatchd. Use this parameter to limit the amount of time
that LSF uses to run the estimator.
.sp 2
LSF stops the current round of estimation when the estimator
reaches any one of the estimation thresholds
(\fBESTIMATOR_MAX_JOBS_PREDICTION\fR,
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR, and
\fBESTIMATOR_MAX_TIME_PREDICTION\fR).
.sp 2
You must also define \fRLSB_ENABLE_ESTIMATION=Y\fR in lsf.conf to
enable job start time estimation and to use this parameter.
.SH Valid values

.sp 2
Any integer from 1 to \fBESTIMATOR_SIM_START_INTERVAL\fR. If set
to a larger value, LSF defaults to the value of
\fBESTIMATOR_SIM_START_INTERVAL\fR.
.SH Default

.sp 2
30. The estimator can run up to 30 minutes, or for the amount of
time as specified by the \fBESTIMATOR_SIM_START_INTERVAL\fR
parameter, whichever is smaller.
.SH See also

.sp 2
\fBESTIMATOR_SIM_START_INTERVAL\fR,
\fBESTIMATOR_MAX_TIME_PREDICTION\fR,
\fBESTIMATOR_MAX_JOBS_PREDICTION\fR, and \fBESTIMATOR_CPUS\fR
parameters.
.sp 2
\fBLSB_ENABLE_ESTIMATION\fR parameter in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBESTIMATOR_MAX_TIME_PREDICTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRESTIMATOR_MAX_TIME_PREDICTION=\fIminutes\fR\fR
.SH Description

.sp 2
Specifies the maximum amount of time into the future, in minutes,
for which the job start time estimator predicts the start time of
jobs. mbatchd stops the current round of estimation when the
start time prediction of a job reaches this value. Use this
parameter to control how far into the future that LSF can predict
as the start time of jobs using simulation-based estimation.
.sp 2
Each round of job start time estimation uses a snapshot of the
LSF environment at that time to predict the start time of pending
jobs in the cluster. The LSF environment (including the running
jobs and available resources in the cluster) may change between
each round of estimation. This means that the start time
prediction for jobs with lower priorities, which usually start
further into the future, might change as higher-priority jobs are
submitted to LSF.
.sp 2
Decreasing the value of this parameter provides estimates for a
fewer number of jobs, but the estimates are more meaningful
because the provided estimates are less likely to change over
time. Decreasing the value of this parameter also decreases the
amount of time required to finish one round of estimation.
.sp 2
Conversely, increasing the value of this parameter provides start
time estimates for more jobs, but the accuracy diminishes as the
estimates are provided further into the future. Increasing the
value of this parameter also increases the amount of time it
takes to finish one round of estimation.
.sp 2
LSF stops the current round of estimation when the estimator
reaches any one of the estimation thresholds
(\fBESTIMATOR_MAX_JOBS_PREDICTION\fR,
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR, and
\fBESTIMATOR_MAX_TIME_PREDICTION\fR).
.sp 2
You must also define \fRLSB_ENABLE_ESTIMATION=Y\fR in lsf.conf to
enable job start time estimation and to use this parameter.
.SH Valid values

.sp 2
Any integer from 1 to \fBESTIMATOR_SIM_START_INTERVAL\fR.
.SH Default

.sp 2
10080 minutes. LSF stops the estimation round once a job start
time is predicted to be one week into the future.
.SH See also

.sp 2
\fBESTIMATOR_SIM_START_INTERVAL\fR,
\fBESTIMATOR_MAX_JOBS_PREDICTION\fR,
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR, and \fBESTIMATOR_CPUS\fR
parameters.
.sp 2
\fBLSB_ENABLE_ESTIMATION\fR parameter in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBESTIMATOR_SIM_START_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRESTIMATOR_SIM_START_INTERVAL=\fIminutes\fR\fR
.SH Description

.sp 2
Specifies the amount of time, in minutes, since the start of the
last round of job start time estimation that mbatchd waits before
triggering another round of estimation. Use this parameter to
control how often LSF uses simulation-based estimation to predict
the start time of jobs.
.sp 2
Each round of job start time estimation uses a snapshot of the
LSF environment at that time to predict the start time of pending
jobs in the cluster. The LSF environment (including the running
jobs and available resources in the cluster) may change between
each round of estimation, so decreasing the value of this
parameter increases the prediction accuracy, but at the expense
of the computation effort.
.sp 2
Conversely, increasing the value of this parameter decreases the
prediction accuracy while decreasing the computation effort. If
your LSF environment does not change frequently and there are the
same jobs pending in each subsequent round of estimation, the
predicted job start times for the same pending jobs should also
not change between estimation rounds. Therefore, increasing the
value of this parameter can avoid redundant estimation rounds for
long-pending jobs.
.sp 2
You must also define \fRLSB_ENABLE_ESTIMATION=Y\fR in lsf.conf to
enable job start time estimation and to use this parameter.
.SH Valid values

.sp 2
Any integer greater than zero.
.SH Default

.sp 2
30 minutes.
.SH See also

.sp 2
\fBESTIMATOR_MAX_TIME_PREDICTION\fR,
\fBESTIMATOR_MAX_JOBS_PREDICTION\fR,
\fBESTIMATOR_MAX_RUNTIME_PREDICTION\fR, and \fBESTIMATOR_CPUS\fR
parameters.
.sp 2
\fBLSB_ENABLE_ESTIMATION\fR parameter in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEVALUATE_JOB_DEPENDENCY\fR
.ce 0

.sp 2
Set the maximum number of job dependencies mbatchd evaluates in
one scheduling cycle.
.sp 2

.SH Syntax

.sp 2
\fREVALUATE_JOB_DEPENDENCY=\fR\fIinteger\fR
.SH Description

.sp 2
This parameter limits the amount of time mbatchd spends on
evaluating job dependencies in a scheduling cycle, which limits
the amount of time the job dependency evaluation blocks services.
Job dependency evaluation is a process that is used to check
whether each job\(aqs dependency condition is satisfied. When a
job\(aqs dependency condition is satisfied, it sets a ready flag and
allows itself to be scheduled by mbschd.
.sp 2
When \fBEVALUATE_JOB_DEPENDENCY\fR is set, a configured number of
jobs are evaluated. Not all the dependency satisfied jobs can be
set to \fRREADY\fR status in the same session. Therefore, jobs
intended to be dispatched in one scheduling session might be
dispatched in different scheduling sessions.
.sp 2
Also, the job dependency evaluation process starts from the last
evaluation end location. Therefore, LSF might prevent some
dependency satisfied jobs that occur before the end location from
being set to \fRREADY\fR status in that particular session. As a
result, one job might be dispatched before another when the other
was ready first. LSF starts the job dependency evaluation from
the endpoint in the next session. LSF evaluates all dependent
jobs every 10 minutes regardless of the configuration for
\fBEVALUATE_JOB_DEPENDENCY\fR.
.sp 2
The \fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR parameter provides an
explicit time limit on how long mbatchd spends on evaluating job
dependencies in one scheduling cycle, in seconds or milliseconds.
If you specify values for both the \fBEVALUATE_JOB_DEPENDENCY\fR
and \fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR parameters, LSF ignores
the \fBEVALUATE_JOB_DEPENDENCY\fR parameter value and instead
uses the value of the \fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR
parameter. If you specify a value for the
\fBEVALUATE_JOB_DEPENDENCY\fR parameter but not the
\fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR parameter, the
\fBEVALUATE_JOB_DEPENDENCY\fR parameter takes effect.
.SH Default

.sp 2
Unlimited.
.sp 2
Parent topic: lsb.params
.sp 2
\fBRelated reference\fR
.br
EVALUATE_JOB_DEPENDENCY_TIMEOUT

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR
.ce 0

.sp 2
Set the maximum amount of time, in seconds or milliseconds, that
the mbatchd daemon takes to evaluate job dependencies in one
scheduling cycle.
.sp 2

.SH Syntax

.sp 2
\fREVALUATE_JOB_DEPENDENCY_TIMEOUT=\fR\fItime_in_seconds\fR
.sp 2
\fREVALUATE_JOB_DEPENDENCY_TIMEOUT=\fR\fItime_in_milliseconds\fR
\fRms\fR
.SH Description

.sp 2
This parameter limits the amount of time that mbatchd spends on
evaluating job dependencies in a scheduling cycle, which limits
the amount of time the job dependency evaluation blocks services.
Job dependency evaluation is a process that is used to check
whether each job\(aqs dependency condition is satisfied. When a
job\(aqs dependency condition is satisfied, it sets a ready flag and
allows itself to be scheduled by mbschd.
.sp 2
When \fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR is set, mbatchd spends
up to this much time, in seconds or milliseconds, evaluating job
dependency conditions in one scheduling session. Use the \fRms\fR
keyword if you are specifying the time limit in milliseconds.
.sp 2
Not all the dependency satisfied jobs can be set to \fRREADY\fR
status in the same session. Therefore, jobs intended to be
dispatched in one scheduling session might be dispatched in
different scheduling sessions. Also, the job dependency
evaluation process starts from the last evaluation end location.
Therefore, LSF might prevent some dependency satisfied jobs that
occur before the end location from being set to \fRREADY\fR
status in that particular session. As a result, one job might be
dispatched before another when the other was ready first. LSF
starts the job dependency evaluation from the endpoint in the
next session. LSF evaluates all dependent jobs every 10 minutes
regardless of the configuration for
\fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR.
.sp 2
While the \fBEVALUATE_JOB_DEPENDENCY\fR parameter also limits the
amount of time that mbatchd spends on evaluating job dependency
conditions by specifying the maximum number of jobs that are
evaluated in one scheduling cycle, the
\fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR parameter provides an
explicit time limit. If you specify values for both the
\fBEVALUATE_JOB_DEPENDENCY\fR and
\fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR parameters, LSF ignores the
\fBEVALUATE_JOB_DEPENDENCY\fR parameter value and instead uses
the value of the \fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR parameter.
If you specify a value for the \fBEVALUATE_JOB_DEPENDENCY\fR
parameter but not the \fBEVALUATE_JOB_DEPENDENCY_TIMEOUT\fR
parameter, the \fBEVALUATE_JOB_DEPENDENCY\fR parameter takes
effect.
.SH Default

.sp 2
1 second.
.sp 2
Parent topic: lsb.params
.sp 2
\fBRelated reference\fR
.br
EVALUATE_JOB_DEPENDENCY

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEVALUATE_WAIT_CONDITION_TIMEOUT\fR
.ce 0

.sp 2
Specifies a limit to the amount of time that the mbatchd daemon
spends on evaluating the bwait wait conditions in a scheduling
session.
.sp 2

.SH Syntax

.sp 2
\fBEVALUATE_WAIT_CONDITION_TIMEOUT=\fRseconds
.sp 2
\fBEVALUATE_WAIT_CONDITION_TIMEOUT=\fRmilliseconds \fBms\fR
.SH Description

.sp 2
If the mbatchd daemon cannot evaluate all the wait conditions
within this time, the wait conditions might be delayed to the
next scheduling session.
.sp 2
To ensure that the wait conditions evaluations are not delayed
for too long, the mbatchd daemon evaluates all wait conditions
every ten minutes regardless of this parameter value.
.SH Valid values

.sp 2
An integer in the range 1 - 1000000.
.SH Default

.sp 2
200 ms.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEVENT_STREAM_FILE \fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fREVENT_STREAM_FILE=\fR\fIfile_path\fR
.SH Description

.sp 2
Determines the path to the event data stream file used by system
performance analysis tools.
.SH Default

.sp 2
LSF_TOP/work/\fIcluster_name\fR/logdir/stream/lsb.stream
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEVENT_UPDATE_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fREVENT_UPDATE_INTERVAL=\fR\fIseconds\fR
.SH Description

.sp 2
Used with duplicate logging of event and accounting log files.
\fBLSB_LOCALDIR\fR in lsf.conf must also be specified. Specifies
how often to back up the data and synchronize the directories
(\fBLSB_SHAREDIR\fR and \fBLSB_LOCALDIR\fR).
.sp 2
If you do not define this parameter, the directories are
synchronized when data is logged to the files, or when mbatchd is
started on the first LSF management host. If you define this
parameter, mbatchd synchronizes the directories only at the
specified time intervals.
.sp 2
Use this parameter if NFS traffic is too high and you want to
reduce network traffic.
.SH Valid values

.sp 2
1 to 2147483647
.SH Recommended values

.sp 2
Between 10 and 30 seconds, or longer depending on the amount of
network traffic.
.sp 2
\fBNote: \fR
.sp 2
Avoid setting the value to exactly 30 seconds, because this will
trigger the default behavior and cause mbatchd to synchronize the
data every time an event is logged.
.SH Default

.sp 2
Not defined.
.SH See also

.sp 2
\fBLSB_LOCALDIR\fR in lsf.conf
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEXIT_RATE_TYPE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fREXIT_RATE_TYPE=\fR[\fRJOBEXIT\fR | \fRJOBEXIT_NONLSF\fR]
[\fRJOBINIT\fR] [\fRHPCINIT\fR]
.SH Description

.sp 2
When host exception handling is configured (\fBEXIT_RATE\fR in
lsb.hosts or \fBGLOBAL_EXIT_RATE\fR in lsb.params), specifies the
type of job exit to be handled.
.sp 2
\fBJOBEXIT\fR
.br
         Job exited after it was dispatched and started running.
.sp 2
\fBJOBEXIT_NONLSF\fR
.br
         Job exited with exit reasons related to LSF and not
         related to a host problem (for example, user action or
         LSF policy). These jobs are not counted in the exit rate
         calculation for the host.
.sp 2
\fBJOBINIT\fR
.br
         Job exited during initialization because of an execution
         environment problem. The job did not actually start
         running.
.sp 2
\fBHPCINIT\fR
.br
         HPC job exited during initialization because of an
         execution environment problem. The job did not actually
         start running.
.SH Default

.sp 2
\fBJOBEXIT_NONLSF\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEXTEND_JOB_EXCEPTION_NOTIFY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fREXTEND_JOB_EXCEPTION_NOTIFY=\fR\fRY\fR | \fRy\fR | \fRN\fR |
\fRn\fR
.SH Description

.sp 2
Sends extended information about a job exception in a
notification email sent when a job exception occurs. Extended
information includes:
.sp 2
*  
   JOB_ID
.sp 2
*  
   RUN_TIME
.sp 2
*  
   IDLE_FACTOR (Only applicable if the job has been idle.)
.sp 2
*  
   USER
.sp 2
*  
   QUEUE
.sp 2
*  
   EXEC_HOST
.sp 2
*  
   JOB_NAME
.sp 2
You can also set format options of the email in the eadmin
script, located in the \fILSF_SERVERDIR\fR directory. Valid
values are fixed or full.
.SH Default

.sp 2
N (Notfication for job exception is standard and includes only
job ID and either run time or idle factor.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBFAIRSHARE_ADJUSTMENT_FACTOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRFAIRSHARE_ADJUSTMENT_FACTOR=\fR\fInumber\fR
.SH Description

.sp 2
Used only with fairshare scheduling. Fairshare adjustment plugin
weighting factor.
.sp 2
In the calculation of a user’s dynamic share priority, this
factor determines the relative importance of the user-defined
adjustment made in the fairshare plugin (libfairshareadjust.*).
.sp 2
A positive float number both enables the fairshare plugin and
acts as a weighting factor.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
0 (user-defined adjustment made in the fairshare plugin not used)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBLSB_FORK_JOB_REQUEST\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRLSB_FORK_JOB_REQUEST=Y|N\fR
.SH Description

.sp 2
This parameter is enabled by default to improve \fRmbatchd\fR
response time after \fRmbatchd\fR is started or restarted
(including parallel restart) and has finished replaying events. A
child \fRmbatchd\fR process is forked to sync cluster state
information to \fRmbschd\fR after events have been replayed.
.SH Default

.sp 2
Y
.sp 2
Parent topic: lsf.conf

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBFWD_JOB_FACTOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRFWD_JOB_FACTOR=\fR\fInumber\fR
.SH Description

.sp 2
Used only with fairshare scheduling. Forwarded job slots
weighting factor.
.sp 2
In the calculation of a user\(aqs dynamic share priority, this
factor determines the relative importance of the number of
forwarded job slots reserved and in use by a user when using the
LSF multicluster capability.
.sp 2
If enabling fairshare scheduling for the LSF multicluster
capability, set this parameter to the same value as
\fBRUN_JOB_FACTOR\fR unless you want a different weighting factor
for forwarded jobs.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
Not defined.
.SH See also

.sp 2
\fBRUN_JOB_FACTOR\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBGLOBAL_EXIT_RATE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRGLOBAL_EXIT_RATE=\fR\fInumber\fR
.SH Description

.sp 2
Specifies a cluster-wide threshold for exited jobs. Specify a
number of jobs. If \fBEXIT_RATE\fR is not specified for the host
in lsb.hosts, \fBGLOBAL_EXIT_RATE\fR defines a default exit rate
for all hosts in the cluster. Host-level \fBEXIT_RATE\fR
overrides the \fBGLOBAL_EXIT_RATE\fR value.
.sp 2
If the number of jobs that exit over the period of time specified
by \fBJOB_EXIT_RATE_DURATION\fR (5 minutes by default) exceeds
the number of jobs that you specify as the threshold in this
parameter, LSF invokes LSF_SERVERDIR/eadmin to trigger a host
exception.
.SH Example

.sp 2
\fRGLOBAL_EXIT_RATE=10\fR defines a job exit rate of 10 jobs for
all hosts.
.SH Default

.sp 2
2147483647 (Unlimited threshold.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBGLOBAL_LIMITS\fR
.ce 0

.sp 2
Enables global limit scheduling.
.sp 2

.SH Syntax

.sp 2
\fBGLOBAL_LIMITS=Y\fR | \fBy\fR | \fBN\fR | \fBn\fR
.SH Description

.sp 2
When using the LSF multicluster capability, this parameter
enables global limit scheduling among all clusters. Job group
limits are still applied when the jobs are forwarded to another
cluster.
.sp 2
The global policy daemon (gpolicyd) is responsible for applying
global limits. To use global limits, you must also ensure that
the \fBLSB_GPD_PORT\fR and \fBLSB_GPD_CLUSTER\fR parameters are
defined correctly in the lsf.conf file for gpolicyd.
.sp 2
The syntax for specifying global resource allocation limits is
the same as specifying local resource allocation limits, but are
specified in the \fBLimit\fR sections of the lsb.globalpolicies.
The global policy daemon (gpolicyd) reads the limits from the
lsb.globalpolicies file and applies these limits to all the
clusters.
.sp 2
Batch features for the LSF multicluster capability, job forward
mode, or lease mode are not required to use global limits.
However, job group limits, which are needed to limit the
forwarded job, requires the job forward mode for the LSF
multicluster capability.
.SH Default

.sp 2
\fRN\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBGPU_REQ_MERGE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBGPU_REQ_MERGE=y\fR | \fBY\fR | \fBn\fR | \fBN\fR
.SH Description

.sp 2

.sp 2
If set to Y, this parameter enables all individual options in the
GPU requirement string to be merged separately. Any specified
options override the any options that are specified at the lower
levels of precedence. If an individual option is not specified,
but is explicitly specified at a lower level, then the highest
level for which the option is specified takes precedence.
.sp 2
If this parameter is set to N, the entire GPU requirement string
overrides the GPU requirement strings at the lower levels of
precedence. Even if an individual option is not specified in the
higher level GPU requirement string, the default value of the
higher level GPU requirement string takes precedence.
.sp 2
In order of precedence, the job level (bsub -gpu command option)
takes precedence over the application level (\fBGPU_REQ\fR
parameter in the lsb.applications file), which takes precedence
over the queue level (\fBGPU_REQ\fR parameter in the lsb.queues
file).
.SH Example

.sp 2
If the GPU requirements are specified as follows:
.sp 2
*  In the lsb.queues file for the \fRqueueA\fR queue:
.sp 2
   GPU_REQ="num=2:gmodel=K80"
.sp 2
*  In the lsb.applications file for the \fRappA\fR application
   profile:
.sp 2
   GPU_REQ="num=3:glink=yes:mode=exclusive_process"
.sp 2
*  At the job submission level:
.sp 2
   bsub -gpu "num=1:gmem=10:mode=shared" -q queueA -app appA my_gpu_job
.sp 2
If \fBGPU_REQ_MERGE\fR is set to \fRY\fR, LSF merges the
individual options separately into the following GPU
requirements:
\fR"num=1:gmem=10:mode=shared:glink=yes:gmodel=K80"\fR
.sp 2
If \fBGPU_REQ_MERGE\fR is set to \fRN\fR, the job level GPU
requirements take precedence, even for options that are not
specified, and LSF uses the following job level GPU requirements:
\fR"num=1:gmem=10:mode=shared"\fR
.sp 2
\fBNote: \fRWhen there are compound resource requirements that
are defined at the job, application, and queue level, the
sub-options for the ngpus_physical are merged separately if
possible, otherwise, the entire \fBngpus_physical\fR
specification overrides those of the lower levels of precedence.
.SH Default

.sp 2
N. The entire GPU requirement string overrides the GPU
requirement strings at lower levels of precedence.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBGPU_RUN_TIME_FACTOR\fR
.ce 0

.sp 2
GPU run time weighting factor. Used only with fairshare
scheduling.
.sp 2

.SH Syntax

.sp 2
\fRGPU_RUN_TIME_FACTOR=\fR\fInumber\fR
.SH Description

.sp 2
In the calculation of a user’s dynamic share priority, this
factor determines the relative importance of the total GPU run
time of a user\(aqs running GPU jobs.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBHIST_HOURS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRHIST_HOURS=\fR\fIhours\fR
.SH Description

.sp 2
Used only with fairshare scheduling. Determines a rate of decay
for cumulative CPU time, run time, and historical run time.
.sp 2
To calculate dynamic user priority, LSF scales the actual CPU
time and the run time using a decay factor, so that 1 hour of
recently-used time is equivalent to 0.1 hours after the specified
number of hours has elapsed.
.sp 2
To calculate dynamic user priority with decayed run time and
historical run time, LSF scales the accumulated run time of
finished jobs and run time of running jobs using the same decay
factor, so that 1 hour of recently-used time is equivalent to 0.1
hours after the specified number of hours has elapsed.
.sp 2
When \fRHIST_HOURS=0\fR, CPU time and run time accumulated by
running jobs is not decayed.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
5
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_ACCEPT_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_ACCEPT_INTERVAL=\fR\fIinteger\fR[ \fRS\fR | \fRs\fR |
\fRM\fR | \fRm\fR ]
.sp 2
where \fRS\fR | \fRs\fR indicates that the value is in seconds
and \fRM\fR | \fRm\fR indicates that the value is in minutes.
.SH Description

.sp 2
If you set a unit (seconds or minutes), the value that you
specify determines how long to wait after dispatching a job to a
host before dispatching a second job to the same host.
.sp 2
If you do not set a unit, the value you specify is multiplied by
the value of lsb.params \fBMBD_SLEEP_TIME\fR (60 seconds by
default). The result of the calculation is the number of seconds
to wait after dispatching a job to a host, before dispatching a
second job to the same host.
.sp 2
If 0 (zero), a host may accept more than one job. By default,
there is no limit to the total number of jobs that can run on a
host, so if this parameter is set to 0, a very large number of
jobs might be dispatched to a host all at once. This can overload
your system to the point that it will be unable to create any
more processes. It is not recommended to set this parameter to 0.
.sp 2
\fBJOB_ACCEPT_INTERVAL\fR set at the queue level (lsb.queues)
overrides \fBJOB_ACCEPT_INTERVAL\fR set at the cluster level
(lsb.params).
.sp 2
\fBNote: \fR
.sp 2
The parameter JOB_ACCEPT_INTERVAL only applies when there are
running jobs on a host. In other words, when there are no running
jobs on a host, a new job can go right away to this host. When
the first job runs and finishes earlier than the next job accept
interval (before the interval expires), this job accept interval
is ignored and a job is dispatched to the same host.
.sp 2
For example, job1 is dispatched to host A. If job1 run time is 10
minutes, and the job accept interval is 1, \fBmbd_sleep_time\fR
is 60 seconds. Therefore, no second job will be dispatched within
60 seconds to host A. However, if job1 run time is 5 seconds on
host A, then after job1 completes, the host is available.
Therefore, \fBJOB_ACCEPT_INTERVAL\fR policy allows 1 job to be
dispatched to Host A as soon as possible.
.SH Default

.sp 2
Set to 0 at time of installation. If otherwise undefined, then
set to 1.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_ARRAY_EVENTS_COMBINE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_ARRAY_EVENTS_COMBINE=Y\fR | \fRN\fR
.SH Description

.sp 2
If enabled (set to \fRY\fR), mbatchd generates additional events
for operations on array jobs or elements.
.sp 2
If disabled (set to \fRN\fR), mbatchd generates the same event
types as single jobs for each job array. This means that for job
arrays with large array sizes, mbatchd performance will suffer
due to writing or reading a large amount of events.
.sp 2
\fBNote: \fRWhether enabled or disabled, mbatchd will not
generate additional events for operations on single jobs.
.sp 2
The following table shows the event records that will be shown
when \fBJOB_ARRAY_EVENTS_COMBINE\fR is enabled or disabled.
.sp 2
+--------------------+-----------------------------------------+
| Event types        | Event logging behaviour                 |
|                    |-----------------------------------------|
|                    | Disabled (N)       |                    |
+--------------------+--------------------+--------------------+
| JOB_MODIFY2        | When modified jobs | The job IDs are    |
|                    | are array jobs or  | recorded in the    |
|                    | array elements,    | existing fields as |
|                    | the job IDs are    | individual job     |
|                    | recorded in the    | IDs. Additional    |
|                    | format of array    | fields for         |
|                    | index ranges.      | modified jobs are  |
|                    |                    | not used.          |
|                    | When a single job  |                    |
|                    | is modified, the   |                    |
|                    | job ID is recorded |                    |
|                    | in the existing    |                    |
|                    | fields.            |                    |
+--------------------+--------------------+--------------------+
| JOB_SIGNAL         | When the logged    | The fields of      |
|                    | jobs are array job | array index ranges |
| JOB_STATUS         | or multiple array  | will not be used   |
|                    | elements, mbatchd  | and marked as 0.   |
| JOB_CLEAN          | will merge         | The existing field |
|                    | multiple events    | of the array index |
| JOB_SWITCH         | into a single one  | will be used to    |
|                    | if the other       | record the array   |
| JOB_FINISH         | fields can share   | index of the job.  |
|                    | the same data.     |                    |
| JOB_FINISH2        |                    |                    |
|                    | When logging a     |                    |
| JOB_STATUS2        | single job or an   |                    |
|                    | array element, the |                    |
| JOB_MOVE           | fields of array    |                    |
|                    | index ranges will  |                    |
|                    | not be used and    |                    |
|                    | marked as 0. The   |                    |
|                    | existing field of  |                    |
|                    | the array index is |                    |
|                    | used to record the |                    |
|                    | array index of the |                    |
|                    | job.               |                    |
+--------------------+--------------------+--------------------+
.SH Default

.sp 2
Set to \fRN\fR by default.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_ATTA_DIR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_ATTA_DIR=\fR\fIdirectory\fR
.SH Description

.sp 2
The shared directory in which mbatchd saves the attached data of
messages posted with the bpost command.
.sp 2
Use \fBJOB_ATTA_DIR\fR if you use bpost and bread to transfer
large data files between jobs and want to avoid using space in
\fBLSB_SHAREDDIR\fR. By default, the bread command reads
attachment data from the \fBJOB_ATTA_DIR\fR directory.
.sp 2
\fBJOB_ATTA_DIR\fR should be shared by all hosts in the cluster,
so that any potential LSF management host can reach it. Like
\fBLSB_SHAREDIR\fR, the directory should be owned and writable by
the primary LSF administrator. The directory must have at least 1
MB of free space.
.sp 2
The attached data will be stored under the directory in the
format:
.sp 2
JOB_ATTA_DIR/timestamp.jobid.msgs/msg$msgindex
.br

.sp 2
On UNIX, specify an absolute path. For example:
.sp 2
JOB_ATTA_DIR=/opt/share/lsf_work
.br

.sp 2
On Windows, specify a UNC path or a path with a drive letter. For
example:
.sp 2
JOB_ATTA_DIR=\\HostA\temp\lsf_work
.br

.sp 2
or
.sp 2
JOB_ATTA_DIR=D:\temp\lsf_work
.br

.sp 2
After adding \fBJOB_ATTA_DIR\fR to lsb.params, use badmin
reconfig to reconfigure your cluster.
.SH Valid values

.sp 2
\fBJOB_ATTA_DIR\fR can be any valid UNIX or Windows path up to a
maximum length of 256 characters.
.SH Default

.sp 2
Not defined
.sp 2
If \fBJOB_ATTA_DIR\fR is not specified, job message attachments
are saved in LSB_SHAREDIR/info/.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_CWD_TTL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_CWD_TTL=hours\fR
.SH Description

.sp 2
Specifies the time-to-live for the current working directory
(CWD) of a job. LSF cleans created CWD directories after a job
finishes based on the TTL value. LSF deletes the CWD for the job
if LSF created that directory for the job. The following options
are available:
.sp 2
*  
   0 - sbatchd deletes CWD when all process related to the job
   finishs.
.sp 2
*  
   2147483647 - Never delete the CWD for a job.
.sp 2
*  
   1 to 2147483646 - Delete the CWD for a job after the timeout
   expires.
.sp 2
The system checks the directory list every 5 minutes with regards
to cleaning and deletes only the last directory of the path to
avoid conflicts when multiple jobs share some parent directories.
TTL will be calculated after the post-exec script finishes. When
LSF (sbatchd) starts, it checks the directory list file and
deletes expired CWDs.
.sp 2
If the value for this parameter is not set in the application
profile, LSF checks to see if it is set at the cluster-wide level
in lsb.params. If neither is set, the default value is used.
.SH Default

.sp 2
Not defined. The value of 2147483647 is used, meaning the CWD is
not deleted.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_DEP_LAST_SUB\fR
.ce 0

.sp 2

.SH Description

.sp 2
Used only with job dependency scheduling.
.sp 2
If set to 1, whenever dependency conditions use a job name that
belongs to multiple jobs, LSF evaluates only the most recently
submitted job.
.sp 2
Otherwise, all the jobs with the specified name must satisfy the
dependency condition.
.sp 2
Running jobs are not affected when \fBJOB_DEP_LAST_SUB\fR is
changed.
.sp 2
To reevaluate job dependencies after changing
\fBJOB_DEP_LAST_SUB\fR, run badmin reconfig.
.SH Default

.sp 2
Set to \fR1\fR at time of installation for the DEFAULT and
PARALLEL configuration templates. If otherwise undefined, then
\fR0\fR (turned off).
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_DISPATCH_PACK_SIZE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_DISPATCH_PACK_SIZE=\fR\fInum_dispatch_decisions\fR
.SH Description

.sp 2
The maximum number of job decisions that can accumulate before
publishing the job decisions in a decision package. If there are
not enough accumulated job decisions, the decisions are published
at the end of the scheduling cycle.
.sp 2
This parameter allows LSF to make more job decisions in a
scheduling cycle without blocking the mbatchd daemon too long at
the end of the scheduling cycle, because mbatchd can process job
decisions that are published before the end of the scheduling
cycle. Dispatching jobs early can also decrease the slot idle
time.
.sp 2
Decrease this parameter value if mbatchd cannot process the
decision package within one second.
.SH Valid Value

.sp 2
0 - (\fBINFINIT_INT\fR-1).
.sp 2
To disable this feature, set the value to 0, or to a value
greater than the \fBLSB_MAX_JOB_DISPATCH_PER_SESSION\fR parameter
in the lsf.conf file. If disabled, all job dispatch decisions are
published at the end of the scheduling cycle.
.sp 2
\fBINFINIT_INT\fR is defined in lsf.h.
.SH Default

.sp 2
300.
.SH See also

.sp 2
\fBLSB_MAX_JOB_DISPATCH_PER_SESSION\fR in lsf.conf
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_DISTRIBUTE_ON_HOST\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_DISTRIBUTE_ON_HOST=pack\fR | \fRbalance\fR | \fRany\fR
.SH Description

.sp 2
For NUMA CPU and memory affinity scheduling. Specifies how LSF
distributes tasks for different jobs. The parameter has the
following values:
.sp 2
\fBpack\fR
.br
         LSF attempts to pack tasks as tightly as possible across
         jobs. Topology nodes with fewer available resources will
         be favored for task allocations.
.sp 2
         JOB_DISTRIBUTE_ON_HOST is not the same as the distribute
         clause on the command-line affinity resource
         requirement. JOB_DISTRIBUTE_ON_HOST decides how to
         distribute tasks between jobs, rather than within a job.
.sp 2
         Use pack to allow your application to use memory
         locality.
.sp 2
\fBbalance\fR
.br
         LSF attempts to distribute tasks equally across hosts\(aq
         topology, while considering the allocations of all jobs.
         Topology nodes with more available resources will be
         favored for task allocations.
.sp 2
\fBany\fR
.br
         LSF attempts no job task placement optimization. LSF
         chooses the first available processor units for task
         placement.
.sp 2
         When JOB_DISTRIBUTE_ON_HOST is not defined, any is the
         default value.
.SH Default

.sp 2
Not defined. JOB_DISTRIBUTE_ON_HOST=any is used.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_EXIT_RATE_DURATION\fR
.ce 0

.sp 2

.SH Description

.sp 2
Defines how long LSF waits before checking the job exit rate for
a host. Used in conjunction with \fBEXIT_RATE\fR in lsb.hosts for
LSF host exception handling.
.sp 2
If the job exit rate is exceeded for the period specified by
\fBJOB_EXIT_RATE_DURATION\fR, LSF invokes LSF_SERVERDIR/eadmin to
trigger a host exception.
.SH Tuning

.sp 2
\fBTip: \fR
.sp 2
Tune \fBJOB_EXIT_RATE_DURATION\fR carefully. Shorter values may
raise false alarms, longer values may not trigger exceptions
frequently enough.
.SH Example

.sp 2
JOB_EXIT_RATE_DURATION=10
.br

.SH Default

.sp 2
5 minutes
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_GROUP_CLEAN\fR
.ce 0

.sp 2
Setting the \fBJOB_GROUP_CLEAN\fR parameter allows for the
automatic deletion of empty job groups.
.sp 2

.SH Syntax

.sp 2
\fRJOB_GROUP_CLEAN=Y\fR | \fRN\fR | \fRall\fR
.SH Valid values

.sp 2
*  If \fBJOB_GROUP_CLEAN\fR = \fRN\fR, implicitly created job
   groups are not automatically deleted (even if they are empty)
   unless they are deleted manually using bgdel
.sp 2
*  If \fBJOB_GROUP_CLEAN\fR = \fRall\fR, implicitly created job
   groups that are empty may be deleted automatically. Job groups
   can only be deleted automatically if they have no explicitly
   created child job groups, and haven’t been attached to an SLA.
.sp 2
*  If \fBJOB_GROUP_CLEAN\fR = \fRY\fR, behavior is like
   \fRJOB_GROUP_CLEAN=all\fR, but job groups will not be deleted
   automatically if they have associated limits (directly or in
   descendant job groups).
.SH Default

.sp 2
N (Implicitly created job groups are not automatically deleted
unless they are deleted manually with bgdel.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_INCLUDE_POSTPROC\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBJOB_INCLUDE_POSTPROC\fR=Y | N
.SH Description

.sp 2
Specifies whether LSF includes the post-execution processing of
the job as part of the job. When set to Y:
.sp 2
*  Prevents a new job from starting on a host until
   post-execution processing is finished on that host
.sp 2
*  sbatchd sends both job finish status (\fBDONE\fR or
   \fBEXIT\fR) and post-execution processing status
   (\fBPOST_DONE\fR or \fBPOST_ERR\fR) to mbatchd at the same
   time
.sp 2
In MultiCluster job forwarding model, the
\fBJOB_INCLUDE_POSTPROC\fR value in the receiving cluster applies
to the job.
.sp 2
MultiCluster job lease model, the \fBJOB_INCLUDE_POSTPROC\fR
value applies to jobs running on remote leased hosts as if they
were running on local hosts.
.sp 2
The variable \fBLSB_JOB_INCLUDE_POSTPROC\fR in the user
environment overrides the value of \fBJOB_INCLUDE_POSTPROC\fR in
an application profile in lsb.applications.
\fBJOB_INCLUDE_POSTPROC\fR in an application profile in
lsb.applications overrides the value of
\fBJOB_INCLUDE_POSTPROC\fR in lsb.params.
.sp 2
For CPU and memory affinity jobs, if JOB_INCLUDE_POSTPROC=Y, LSF
does not release affinity resources until post-execution
processing has finished, since slots are still occupied by the
job during post-execution processing.
.sp 2
For SGI cpusets, if JOB_INCLUDE_POSTPROC=Y, LSF does not release
the cpuset until post-execution processing has finished, even
though post-execution processes are not attached to the cpuset.
.SH Default

.sp 2
N (Post-execution processing is not included as part of the job,
and a new job can start on the execution host before
post-execution processing finishes.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_INFO_EVENT_DUMP_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_INFO_EVENT_DUMP_INTERVAL=\fIminutes\fR\fR
.SH Description

.sp 2
This parameter controls how frequently the job info events file
(jobinfo cache) is rewritten.
.sp 2
If the dump interval is too frequent, it means a greater load on
I/O operations. If the dump interval is too infrequent, events
replay will take longer to finish.
.SH Valid values

.sp 2
Any positive integer between 1 and 2147483646.
.SH Default

.sp 2
15 (minutes)
.SH See also

.sp 2
\fBJOB_INFO_MEMORY_CACHE_SIZE\fR in lsb.params and
\fBLSB_JOBINFO_DIR\fR in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_INFO_MEMORY_CACHE_SIZE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_INFO_MEMORY_CACHE_SIZE=\fInum_MB\fR\fR
.SH Description

.sp 2
This parameter configures how much memory to use for the jobinfo
cache. The unit is MB.
.sp 2
The jobinfo cache can reduce the load on the work directory filer
by caching job information such as the job\(aqs environment
variables, command-line and eexec data in memory, in a compressed
format. The jobinfo cache is part of mbatchd memory.
.sp 2
\fBNote: \fRReducing the load on the jobinfo cache means a
reduction in mbatchd I/O operations to achieve better mbatchd
performance on the other side.
.sp 2
A value of 0 disables the jobinfo cache.
.SH Valid values

.sp 2
Valid values: 0 - 2147483646.
.sp 2
\fBNote: \fRIf enabled, a minimum value of 500 MB is recommended.
.SH Default

.sp 2
1024 (1 GB)
.SH See also

.sp 2
\fBJOB_INFO_EVENT_DUMP_INTERVAL\fR in lsb.params and
\fBLSB_JOBINFO_DIR\fR in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_POSITION_CONTROL_BY_ADMIN\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_POSITION_CONTROL_BY_ADMIN=Y\fR | \fRN\fR
.SH Description

.sp 2
Allows LSF administrators to control whether users can use btop
and bbot to move jobs to the top and bottom of queues. When
\fRJOB_POSITION_CONTROL_BY_ADMIN=Y\fR, only the LSF administrator
(including any queue administrators) can use bbot and btop to
move jobs within a queue.
.SH Default

.sp 2
N
.SH See also

.sp 2
bbot, btop
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_POSTPROC_TIMEOUT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBJOB_POSTPROC_TIMEOUT=\fRminutes
.SH Description

.sp 2
Specifies a timeout in minutes for job post-execution processing.
The specified timeout must be greater than zero.
.sp 2
If post-execution processing takes longer than the timeout,
sbatchd reports that post-execution has failed (POST_ERR status),
and kills the entire process group of the job’s post-execution
processes on UNIX and Linux. On Windows, only the parent process
of the post-execution command is killed when the timeout expires.
The child processes of the post-execution command are not killed.
.sp 2
If \fBJOB_INCLUDE_POSTPROC\fR=Y, and sbatchd kills the
post-execution processes because the timeout has been reached,
the CPU time of the post-execution processing is set to 0, and
the job’s CPU time does not include the CPU time of
post-execution processing.
.sp 2
\fBJOB_POSTPROC_TIMEOUT\fR defined in an application profile in
lsb.applications overrides the value in lsb.params.
\fBJOB_POSTPROC_TIMEOUT\fR cannot be defined in the user
environment.
.sp 2
In the MultiCluster job forwarding model, the
\fBJOB_POSTPROC_TIMEOUT\fR value in the receiving cluster applies
to the job.
.sp 2
In the MultiCluster job lease model, the
\fBJOB_POSTPROC_TIMEOUT\fR value applies to jobs running on
remote leased hosts as if they were running on local hosts.
.sp 2
When running host-based post execution processing, set
\fBJOB_POSTPROC_TIMEOUT\fR to a value that gives the process
enough time to run.
.SH Default

.sp 2
2147483647 (Unlimited; post-execution processing does not time
out.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_PREPROC_TIMEOUT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBJOB_PREPROC_TIMEOUT=\fRminutes
.SH Description

.sp 2
Specify a timeout in minutes for job pre-execution processing.
The specified timeout must be an integer greater than zero. If
the job\(aqs pre-execution processing takes longer than the timeout,
LSF kills the job\(aqs pre-execution processes, kills the job with a
pre-defined exit value of 98, and then requeues the job to the
head of the queue. However, if the number of pre-execution
retries has reached the limit, LSF suspends the job with PSUSP
status instead of requeuing it.
.sp 2
JOB_PREPROC_TIMEOUT defined in an application profile in
lsb.applications overrides the value in lsb.params.
\fBJOB_PREPROC_TIMEOUT\fR cannot be defined in the user
environment.
.sp 2
On UNIX and Linux, sbatchd kills the entire process group of the
job\(aqs pre-execution processes.
.sp 2
On Windows, only the parent process of the pre-execution command
is killed when the timeout expires, the child processes of the
pre-execution command are not killed.
.sp 2
In the MultiCluster job forwarding model,
\fBJOB_PREPROC_TIMEOUT\fR and the number of pre-execution retries
defined in the receiving cluster apply to the job. When the
number of attempts reaches the limit, the job returns to
submission cluster and is rescheduled.
.sp 2
In the MultiCluster job lease model, \fBJOB_PREPROC_TIMEOUT\fR
and the number of pre-execution retries defined in the submission
cluster apply to jobs running on remote leased hosts, as if they
were running on local hosts.
.SH Default

.sp 2
Not defined. Pre-execution processing does not time out. However,
when running host-based pre-execution processing, you cannot use
the infinite value or it may fail. You must configure a
reasonable value.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_PRIORITY_OVER_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_PRIORITY_OVER_TIME=\fR\fIincrement\fR\fR/\fR\fIinterval\fR
.SH Description

.sp 2
\fBJOB_PRIORITY_OVER_TIME\fR enables automatic job priority
escalation when \fBMAX_USER_PRIORITY\fR is also defined.
.SH Valid values

.sp 2
\fIincrement\fR
.sp 2
Specifies the value used to increase job priority every
\fIinterval\fR minutes. Valid values are positive integers.
.sp 2
\fIinterval\fR
.sp 2
Specifies the frequency, in minutes, to \fIincrement\fR job
priority. Valid values are positive integers.
.SH Default

.sp 2
Not defined.
.SH Example

.sp 2
JOB_PRIORITY_OVER_TIME=3/20
.sp 2
Specifies that every 20 minute \fIinterval increment\fR to job
priority of pending jobs by 3.
.SH See also

.sp 2
\fBMAX_USER_PRIORITY\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBREMOVE_HUNG_JOBS_FOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBREMOVE_HUNG_JOBS_FOR = runlimit[,wait_time=min] |
host_unavail[,wait_time=min] | runlimit
[,wait_time=min]:host_unavail[,wait_time=min] |
all[,wait_time=min]\fR
.SH Description

.sp 2
Hung jobs are removed under the following conditions:
.sp 2
*  
   \fBhost_unavail\fR: Hung jobs are automatically removed if the
   first execution host is unavailable and a timeout is reached
   as specified by \fBwait_time\fR in the parameter
   configuration. The default value of \fBwait_time\fR is 10
   minutes.
.sp 2
   Hung jobs of any status (\fRRUN\fR, \fRSSUSP\fR, etc.) will be
   a candidate for removal by LSF when the timeout is reached.
.sp 2
*  
   \fBrunlimit\fR: Remove the hung job after the job’s run limit
   was reached. You can use the \fBwait_time\fR option to specify
   a timeout for removal after reaching the \fBrunlimit\fR. The
   default value of \fBwait_time\fR is 10 minutes. For example,
   if \fBREMOVE_HUNG_JOBS_FOR\fR is defined with \fBrunlimit,
   wait_time=5\fR and \fBJOB_TERMINATE_INTERVAL\fR is not set,
   the job is removed by mbatchd 5 minutes after the job
   \fBrunlimit\fR is reached.
.sp 2
   Hung jobs in \fRRUN\fR status are considered for removal if
   the \fBrunlimit\fR + \fBwait_time\fR have expired.
.sp 2
   For backwards compatibility with earlier versions of LSF,
   \fBREMOVE_HUNG_JOBS_FOR = runlimit\fR is handled as
   previously: The grace period is 10 mins + MAX(6 seconds,
   \fBJOB_TERMINATE_INTERVAL\fR) where
   \fBJOB_TERMINATE_INTERVAL\fR is specified in lsb.params. The
   grace period only begins once a job’s run limit has been
   reached.
.sp 2
*  
   \fBall\fR: Specifies hung job removal for all conditions (both
   \fBrunlimit\fR and \fBhost_unavail\fR). The hung job is
   removed when the first condition is satisfied. For example, if
   a job has a run limit, but it becomes hung because a host is
   unavailable before the run limit is reached, jobs (running,
   suspended, etc.) will be removed after 10 minutes after the
   host is unavailable. Job is placed in \fREXIT\fR status by
   mbatchd.
.sp 2
For a \fBhost_unavail\fR condition, \fBwait_time\fR count starts
from the moment mbatchd detects that the host is \fRunavail\fR.
Running badmin mbdrestart or badmin reconfig while the timeout is
in progress will restart the timeout countdown from 0.
.sp 2
For a \fBrunlimit\fR condition, \fBwait_time\fR is the time that
the job in the \fRUNKNOWN\fR state takes to reach the
\fBrunlimit\fR.
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_RUNLIMIT_RATIO\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_RUNLIMIT_RATIO=\fR\fIinteger\fR | \fR0\fR
.SH Description

.sp 2
Specifies a ratio between a job run limit and the runtime
estimate specified by bsub -We or bmod -We, -We+, -Wep. The ratio
does not apply to the \fBRUNTIME\fR parameter in
lsb.applications.
.sp 2
This ratio can be set to 0 and no restrictions are applied to the
runtime estimate.
.sp 2
\fBJOB_RUNLIMIT_RATIO\fR prevents abuse of the runtime estimate.
The value of this parameter is the ratio of run limit divided by
the runtime estimate.
.sp 2
By default, the ratio value is 0. Only administrators can set or
change this ratio. If the ratio changes, it only applies to newly
submitted jobs. The changed value does not retroactively reapply
to already submitted jobs.
.sp 2
If the ratio value is greater than 0:
.sp 2
*  
   If the users specifiy a runtime estimate only (bsub -We), the
   job-level run limit will automatically be set to
   \fIruntime_ratio\fR * \fIruntime_estimate\fR. Jobs running
   longer than this run limit are killed by LSF. If the job-level
   run limit is greater than the hard run limit in the queue, the
   job is rejected.
.sp 2
*  
   If the users specify a runtime estimate (-We) and job run
   limit (-W) at job submission, and the run limit is greater
   than \fIruntime_ratio\fR * \fIruntime_estimate\fR, the job is
   rejected.
.sp 2
*  
   If the users modify the run limit to be greater than
   \fIruntime_ratio\fR, they must increase the runtime estimate
   first (bmod -We). Then they can increase the default run
   limit.
.sp 2
*  
   LSF remembers the run limit is set with bsub -W or convert
   from \fIruntime_ratio\fR * \fIruntime_estimate\fR. When users
   modify the run limit with bmod -Wn, the run limit is
   automatically be set to \fIruntime_ratio\fR *
   \fIruntime_estimate\fR If the run limit is set from
   \fIruntime_ratio\fR, LSF rejects the run limit modification.
.sp 2
*  
   If users modify the runtime estimate with bmod -We and the run
   limit is set by the user, the run limit is
   MIN(\fInew_estimate\fR * \fInew_ratio\fR, \fIrun_limit\fR). If
   the run limit is set by \fIruntime_ratio\fR, the run limit is
   set to \fInew_estimate\fR * \fInew_ratio\fR.
.sp 2
*  
   If users modify the runtime estimate by using bmod -Wen and
   the run limit is set by the user, it is not changed. If the
   run limit is set by \fIruntime_ratio\fR, it is set to
   unlimited.
.sp 2
In MultiCluster job forwarding model, \fBJOB_RUNLIMIT_RATIO\fR
valuese in both the sending and receiving clusters apply to the
job. The run limit in the receiving cluster cannot be greater
than the value of \fIruntime\fR * \fBJOB_RUNLIMIT_RATIO\fR in the
receiving cluster. Some examples:
.sp 2
*  
   Run limit (for example with bsub -We) is 10,
   \fRJOB_RUNLIMIT_RATIO=5\fR in the sending cluster,
   \fRJOB_RUNLIMIT_RATIO=0\fR in the receiving cluster—run
   limit=50, and the job will run
.sp 2
*  
   Run limit (for example with bsub -We) is 10,
   \fRJOB_RUNLIMIT_RATIO=5\fR in the sending cluster,
   \fRJOB_RUNLIMIT_RATIO=3\fR in the receiving cluster—run
   limit=50, and the job will pend
.sp 2
*  
   Run limit (for example with bsub -We) is 10,
   \fRJOB_RUNLIMIT_RATIO=5\fR in the sending cluster,\fR
   JOB_RUNLIMIT_RATIO=6\fR in the receiving cluster—run limit=50,
   and the job will run
.sp 2
*  
   Run limit (for example with bsub -We) is 10,
   \fRJOB_RUNLIMIT_RATIO=0\fR in the sending cluster,
   \fRJOB_RUNLIMIT_RATIO=5\fR in the receiving cluster—run
   limit=50, and the job will run
.sp 2
MultiCluster job lease model, the \fBJOB_RUNLIMIT_RATIO\fR value
applies to jobs running on remote leased hosts as if they were
running on local hosts.
.SH Default

.sp 2
0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_SCHEDULING_INTERVAL\fR
.ce 0

.sp 2
Specifies the minimum scheduling cycle time and the job
scheduling interval threshold time.
.sp 2

.SH Syntax

.sp 2
\fRJOB_SCHEDULING_INTERVAL=\fR\fImin_time\fR [\fRms\fR]
[\fImax_time\fR]
.SH Description

.sp 2
The first number specifies the minimum scheduling cycle time. If
the mbschd daemon finishes one round of scheduling but does not
reach this time, mbschd puts itself into sleep mode. Specify in
seconds, or include the keyword ms to specify in milliseconds. If
set to 0, there is no interval between subsequent sessions and
mbschd starts the next scheduler session immediately after the
current session. Increasing this interval can reduce the CPU
usage of the mbschd daemon and the load on the mbatchd daemon.
.sp 2
The second number specifies a job scheduling interval threshold
time, in seconds, for the job scheduling cycle. mbschd checks the
threshold during the regular job scheduling phase and the
backfilling phase, and skips the rest of the jobs if the
scheduling cycle exceeds this time. This value prevents the
scheduling cycle from taking an abnormally long amount of time.
Do not specify a time that is lower than your average scheduling
time because this decreases scheduling efficiency. Run the badmin
perfmon view command to determine the average value, which you
can use to determine a reasonable value to set for the job
scheduling interval threshold time.
.sp 2
\fBTip: \fRRun the badmin perfmon view command to determine the
average value, which you can use to determine a reasonable value
to set for the maximum scheduling cycle time.
.SH Valid values

.sp 2
Number of seconds (or milliseconds, for the minimum interval)
greater than or equal to zero (0).
.SH Default

.sp 2
\fRJOB_SCHEDULING_INTERVAL=5 45\fR
.sp 2
The minimum scheduling cycle time is 5 seconds and the job
scheduling interval threshold time is 45 seconds.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_SPOOL_DIR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_SPOOL_DIR=\fR\fIdir\fR
.SH Description

.sp 2
Specifies the directory for buffering batch standard output and
standard error for a job.
.sp 2
When \fBJOB_SPOOL_DIR\fR is defined, the standard output and
standard error for the job is buffered in the specified
directory.
.sp 2
Files are copied from the submission host to a temporary file in
the directory specified by the \fBJOB_SPOOL_DIR\fR on the
execution host. LSF removes these files when the job completes.
.sp 2
If \fBJOB_SPOOL_DIR\fR is not accessible or does not exist, files
are spooled to the default directory $HOME/.lsbatch.
.sp 2
For bsub -is and bsub -Zs, \fBJOB_SPOOL_DIR\fR must be readable
and writable by the job submission user, and it must be shared by
the management host and the submission host. If the specified
directory is not accessible or does not exist, and
\fBJOB_SPOOL_DIR\fR is specified, bsub -is cannot write to the
default directory LSB_SHAREDIR/\fIcluster_name\fR/lsf_indir, and
bsub -Zs cannot write to the default directory
LSB_SHAREDIR/\fIcluster_name\fR/lsf_cmddir, and the job will
fail.
.sp 2
As LSF runs jobs, it creates temporary directories and files
under \fBJOB_SPOOL_DIR\fR. By default, LSF removes these
directories and files after the job is finished. See bsub for
information about job submission options that specify the
disposition of these files.
.sp 2
On UNIX, specify an absolute path. For example:
.sp 2
JOB_SPOOL_DIR=/home/share/lsf_spool
.br

.sp 2
On Windows, specify a UNC path or a path with a drive letter. For
example:
.sp 2
JOB_SPOOL_DIR=\\HostA\share\spooldir
.br

.sp 2
or
.sp 2
JOB_SPOOL_DIR=D:\share\spooldir
.br

.sp 2
In a mixed UNIX/Windows cluster, specify one path for the UNIX
platform and one for the Windows platform. Separate the two paths
by a pipe character (|):
.sp 2
JOB_SPOOL_DIR=/usr/share/lsf_spool | \\HostA\share\spooldir
.br

.SH Valid value

.sp 2
\fBJOB_SPOOL_DIR\fR can be any valid path.
.sp 2
The path can include the following dynamic patterns, which are
case sensitive:
.sp 2
*  %H - first execution host name
.sp 2
*  %P - project name
.sp 2
*  %U - user name
.sp 2
*  %C - execution cluster name
.sp 2
*  %JG - job group (if not specified, it will be ignored)
.sp 2
LSF creates subdirectories with appropriate permissions, based on
the following rules:
.sp 2
\fB\fBJOB_SPOOL_DIR\fB is not defined\fR
.br
         Job spool directory is $HOME/.lsbatch.
.sp 2
\fB\fBJOB_SPOOL_DIR=\fB\fR/\fIfull_path\fR/%\fIdynamic_patterns\fR\fB\fR
.br
         *  If \fR%U\fR is the first dynamic pattern, LSF creates
            a subdirectory before the \fR%U\fR with 777
            permission. LSF creates subdirectories after \fR%U\fR
            (including \fR%U\fR) with 700 permission.
.sp 2
         *  If \fR%U\fR is not included in the path, or it is not
            the first dynamic pattern, LSF creates all
            subdirectories with 777 permission.
.sp 2
\fB\fBJOB_SPOOL_DIR=\fB\fR/\fIfull_path\fR\fB with no dynamic
patterns\fR
.br
         Job spool directory is /\fIfull_path\fR. LSF does not
         create any subdirectories.
.sp 2
When creating subdirectories in the job spool directory, LSF
ignores any dynamic patterns in the path that are not available.
.sp 2
Jobs submitted with -is and -Zs do not support JOB_SPOOL_DIR
paths containing dynamic patterns.
.sp 2
The entire path including \fBJOB_SPOOL_DIR\fR can up to 4094
characters on UNIX and Linux or up to 255 characters for Windows.
This maximum path length includes:
.sp 2
*  
   All directory and file paths attached to the
   \fBJOB_SPOOL_DIR\fR path
.sp 2
*  
   Temporary directories and files that the LSF system creates as
   jobs run.
.sp 2
The path you specify for \fBJOB_SPOOL_DIR\fR should be as short
as possible to avoid exceeding this limit.
.sp 2
\fBNote: \fRThe first path must be UNIX and second path must be
Windows.
.SH Default

.sp 2
Not defined
.sp 2
Batch job output (standard output and standard error) is sent to
the .lsbatch directory on the execution host:
.sp 2
*  
   On UNIX: $HOME/.lsbatch
.sp 2
*  
   On Windows: %windir%\lsbtmp\fIuser_id\fR\.lsbatch
.sp 2
If %HOME% is specified in the user environment, uses that
directory instead of %windir% for spooled output.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_SWITCH2_EVENT (OBSOLETE)\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_SWITCH2_EVENT=Y|N\fR\fI\fR
.SH Description

.sp 2
Obsolete as of 10.1.
.sp 2
Specify Y to allow \fRmbatchd\fR to generate the
\fBJOB_SWITCH2\fR event log when switching a job array to another
queue. If this parameter is not enabled, \fRmbatchd\fR will
generate the old \fBJOB_SWITCH\fR event instead. The
\fBJOB_SWITCH\fR event is generated for the switch of each array
element. If the job array is very large, many \fBJOB_SWITCH\fR
events are generated, causing \fRmbatchd\fR to use large amounts
of memory to replay all the \fBJOB_SWITCH\fR events. This causes
performance problems when \fRmbatchd\fR starts up.
.sp 2
\fBJOB_SWITCH2\fR logs the switching of the array to another
queue as one event instead of logging each array element
separately. \fBJOB_SWITCH2\fR has these advantages:
.sp 2
*  
   Reduces memory usage of \fRmbatchd\fR when replaying bswitch
   d\fBestination_queue job_ID\fR, where job_ID is the job ID of
   the job array on which to operate.
.sp 2
*  
   Reduces the time for reading records from\fB lsb.events\fR
   when \fRmbatchd\fR starts up.
.sp 2
*  
   Reduces the size of \fBlsb.events\fR.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBJOB_TERMINATE_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRJOB_TERMINATE_INTERVAL=\fR\fIseconds\fR
.SH Description

.sp 2
UNIX only.
.sp 2
Specifies the time interval in seconds between sending SIGINT,
SIGTERM, and SIGKILL when terminating a job. When a job is
terminated, the job is sent SIGINT, SIGTERM, and SIGKILL in
sequence with a sleep time of \fBJOB_TERMINATE_INTERVAL\fR
between sending the signals. This allows the job to clean up if
necessary.
.SH Default

.sp 2
10 (seconds)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBKILL_JOBS_OVER_RUNLIMIT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRKILL_JOBS_OVER_RUNLIMIT=\fR\fIinterval\fR[\fR:\fR\fIwait_time\fR]
.SH Description

.sp 2
Enables the mbatchd daemon to kill jobs that are running over the
defined \fBRUNLIMIT\fR value for a long period of time.
.sp 2
*  \fIinterval\fR specifies the checking interval, which is how
   often the mbatchd daemon checks if there are any jobs that run
   over the defined \fBRUNLIMIT\fR value, in minutes.
.sp 2
*  \fIwait_time\fR is optional, and specifies how long the
   mbatchd daemon waits, in minutes, after the jobs reach the
   defined \fBRUNLIMIT\fR before killing these jobs. The default
   value is 10 minutes.
.sp 2
During each checking interval, mbatchd checks if any job runs
over the defined \fBRUNLIMIT\fR by a value greater than the wait
time. If there are jobs over this value, mbatchd directly kills
the job. For any jobs that are killed because of this parameter
setting, LSF logs an additional kill reason message, which is
shown in the bjobs -l or bhist -l output.
.sp 2
Normally, when a job reaches the defined \fBRUNLIMIT\fR, the
sbatchd daemon kills the job. However, under some conditions, the
job still shows RUN status in mbatchd. This parameter allows
mbatchd to clean up or remove jobs that reached the
\fBRUNLIMIT\fR value for a long period of time.
.SH Valid Values

.sp 2
For \fIinterval\fR, specify an integer that is greater than 30
minutes. For \fIwait_time\fR, specify an integer.
.SH Default

.sp 2
Not defined. If the \fBKILL_JOBS_OVER_RUNLIMIT\fR parameter is
defined but the \fIwait_time\fR value is not defined, the default
value for \fIwait_time\fR is 10 minutes.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBLOCAL_MAX_PREEXEC_RETRY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRLOCAL_MAX_PREEXEC_RETRY=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of times to attempt the pre-execution command
of a job on the local cluster.
.sp 2
When this limit is reached, the default behavior of the job is
defined by the \fBLOCAL_MAX_PREEXEC_RETRY_ACTION\fR parameter in
lsb.params, lsb.queues, or lsb.applications.
.SH Valid values

.sp 2
0 < \fBLOCAL_MAX_PREEXEC_RETRY\fR < 2147483647
.SH Default

.sp 2
2147483647 (Unlimited number of pre-execution retry times.)
.SH See also

.sp 2
\fBLOCAL_MAX_PREEXEC_RETRY_ACTION\fR in lsb.params, lsb.queues,
and lsb.applications.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBLOCAL_MAX_PREEXEC_RETRY_ACTION\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRLOCAL_MAX_PREEXEC_RETRY_ACTION=SUSPEND\fR | \fREXIT\fR
.SH Description

.sp 2
The default behavior of a job when it reaches the maximum number
of times to attempt its pre-execution command on the local
cluster (\fBLOCAL_MAX_PREEXEC_RETRY\fR).
.sp 2
*  If set to \fRSUSPEND\fR, the job is suspended and its status
   is set to PSUSP.
.sp 2
*  If set to \fREXIT\fR, the job exits and its status is set to
   EXIT. The job exits with the same exit code as the last
   pre-execution fail exit code.
.sp 2
This parameter is configured cluster-wide (lsb.params), at the
queue level (lsb.queues), and at the application level
(lsb.applications). The action specified in lsb.applications
overrides lsb.queues, and lsb.queues overrides the lsb.params
configuration.
.SH Default

.sp 2
SUSPEND
.SH See also

.sp 2
\fBLOCAL_MAX_PREEXEC_RETRY\fR in lsb.params, lsb.queues, and
lsb.applications.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBEGROUP_UPDATE_INTERVAL\fR
.ce 0

.sp 2
Specifies the time interval for which dynamic user and host group
information is updated automatically.
.sp 2

.SH Syntax

.sp 2
\fREGROUP_UPDATE_INTERVAL=\fIhours\fR\fR | \fR\fIminutes\fR m\fR
.SH Description

.sp 2
Specify a time interval for which dynamic user group information
in the lsb.users file and dynamic host group information in the
lsb.hosts file is updated automatically. Specify the time
interval in hours or use the \fRm\fR suffix to specify the time
interval in minutes. There is no need to run badmin reconfig.
.sp 2
You can also specify \fRLSB_START_EBROKERD=Y\fR in the lsf.conf
file to get a better mbatchd daemon performance for a large
cluster.
.sp 2
In the LSF_SERVERDIR, there must be an executable file named
egroup to manage the host and user group members. When
\fBEGROUP_UPDATE_INTERVAL\fR is set, and the time interval is
matched, LSF gets the updated members from egroup.
.sp 2
If this parameter is not set, you must update the host and user
groups manually by running the badmin reconfig command.
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBLSB_SYNC_HOST_STAT_LIM\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRLSB_SYNC_HOST_STAT_LIM=\fR\fRY|y|N|n\fR
.SH Description

.sp 2
Improves the speed with which mbatchd obtains host status, and
therefore the speed with which LSF reschedules rerunnable jobs:
the sooner LSF knows that a host has become unavailable, the
sooner LSF reschedules any rerunnable jobs executing on that
host. Useful for a large cluster.
.sp 2
This parameter is enabled by default. It allows mbatchd to
periodically obtain the host status from the management host LIM
and verifies the status by polling each sbatchd at an interval.
It is recommended not to disable this parameter because it may
then take longer to get status updates.
.SH Default

.sp 2
Y
.SH See also

.sp 2
\fBMBD_SLEEP_TIME\fR in lsb.params
.sp 2
\fBLSB_MAX_PROBE_SBD\fR in lsf.conf
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_ACCT_ARCHIVE_FILE \fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_ACCT_ARCHIVE_FILE=\fR\fIinteger\fR
.SH Description

.sp 2
Enables automatic deletion of archived LSF accounting log files
and specifies the archive limit.
.SH Compatibility

.sp 2
\fBACCT_ARCHIVE_SIZE\fR or \fBACCT_ARCHIVE_AGE\fR should also be
defined.
.SH Example

.sp 2
MAX_ACCT_ARCHIVE_FILE=10
.br

.sp 2
LSF maintains the current lsb.acct and up to 10 archives. Every
time the old lsb.acct.9 becomes lsb.acct.10, the old lsb.acct.10
gets deleted.
.SH See also

.sp 2
*  
   \fBACCT_ARCHIVE_AGE\fR also enables automatic archiving
.sp 2
*  
   \fBACCT_ARCHIVE_SIZE\fR also enables automatic archiving
.sp 2
*  
   \fBACCT_ARCHIVE_TIME\fR also enables automatic archiving
.SH Default

.sp 2
Not defined. No deletion of lsb.acct.\fIn\fR files.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_CONCURRENT_QUERY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_CONCURRENT_QUERY=\fR\fIinteger\fR
.SH Description

.sp 2
This parameter applies to all query commands and defines the
maximum batch queries (including job queries) that mbatchd can
handle.
.sp 2
\fBMAX_CONCURRENT_QUERY\fR controls the maximum number of
concurrent query commands under the following conditions:
.sp 2
*  
   \fBLSB_QUERY_PORT\fR is not defined
.sp 2
*  
   \fBLSB_QUERY_PORT\fR is defined and \fBLSB_QUERY_ENH\fR is
   \fRY\fR
.sp 2
If the specified threshold is reached, the query commands will
retry.
.sp 2
If \fBLSB_QUERY_PORT\fR is defined and \fBLSB_QUERY_ENH\fR is
\fRN\fR, \fBMAX_CONCURRENT_QUERY\fR controls two thresholds
separately:
.sp 2
*  
   Maximum number of concurrent job related query commands
.sp 2
*  
   Maximum number of concurrent other query commands
.sp 2
If either of the specified thresholds are reached, the query
commands will retry.
.SH Valid values

.sp 2
1-1000
.SH Default

.sp 2
Set to 100 at time of installation. If otherwise undefined, then
unlimited.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_EVENT_STREAM_FILE_NUMBER\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_EVENT_STREAM_FILE_NUMBER=\fR\fIinteger\fR
.SH Description

.sp 2
Determines the maximum number of different lsb.stream.utc files
that \fRmbatchd\fR uses. When \fBMAX_EVENT_STREAM_FILE_NUMBER\fR
is reached, every time the size of the lsb.stream file reaches
\fBMAX_EVENT_STREAM_SIZE\fR, the oldest lsb.stream file is
overwritten.
.SH Default

.sp 2
10
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_EVENT_STREAM_SIZE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_EVENT_STREAM_SIZE=\fR\fIinteger\fR
.SH Description

.sp 2
Determines the maximum size in MB of the lsb.stream file used by
system performance analysis tools.
.sp 2
When the \fBMAX_EVENT_STREAM_SIZE\fR size is reached, LSF logs a
special event \fBEVENT_END_OF_STREAM\fR, closes the stream and
moves it to lsb.stream.0 and a new stream is opened.
.sp 2
All applications that read the file once the event
\fBEVENT_END_OF_STREAM\fR is logged should close the file and
reopen it.
.SH Recommended value

.sp 2
2000 MB
.SH Default

.sp 2
1024 MB
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_INFO_DIRS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_INFO_DIRS=\fR\fInum_subdirs\fR
.SH Description

.sp 2
The number of subdirectories under the
LSB_SHAREDIR/\fIcluster_name\fR/logdir/info directory.
.sp 2
When \fBMAX_INFO_DIRS\fR is enabled, mbatchd creates the
specified number of subdirectories in the info directory. These
subdirectories are given an integer as its name, starting with 0
for the first subdirectory.
.sp 2
\fBImportant: \fR
.sp 2
If you are using local duplicate event logging, you must run
badmin mbdrestart after changing \fBMAX_INFO_DIRS\fR for the
changes to take effect.
.SH Valid values

.sp 2
1-1024
.SH Default

.sp 2
Set to \fR500\fR at time of installation for the HIGH_THROUGHPUT
configuration template. If otherwise undefined, then \fR0\fR (no
subdirectories under the info directory; mbatchd writes all
jobfiles to the info directory).
.SH Example

.sp 2
\fRMAX_INFO_DIRS=10\fR
.sp 2
mbatchd creates ten subdirectories from
LSB_SHAREDIR/\fIcluster_name\fR/logdir/info/0 to
LSB_SHAREDIR/\fIcluster_name\fR/logdir/info/9.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOB_ARRAY_SIZE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOB_ARRAY_SIZE=\fR\fIinteger\fR
.SH Description

.sp 2
Specifies the maximum number of jobs in a job array that can be
created by a user for a single job submission. The maximum number
of jobs in a job array cannot exceed this value.
.sp 2
A large job array allows a user to submit a large number of jobs
to the system with a single job submission.
.SH Valid values

.sp 2
Specify a positive integer between 1 and 2147483646
.SH Default

.sp 2
Set to \fR10000\fR at time of installation for the
HIGH_THROUGHPUT configuration template. If otherwise undefined,
then \fR1000\fR.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOB_ATTA_SIZE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOB_ATTA_SIZE=\fR\fIinteger\fR | \fR0\fR
.sp 2
Specify any number less than 20000.
.SH Description

.sp 2
Maximum attached data size, in KB, that can be transferred to a
job.
.sp 2
Maximum size for data attached to a job with the bpost command.
Useful if you use bpost and bread to transfer large data files
between jobs and you want to limit the usage in the current
working directory.
.sp 2
0 indicates that jobs cannot accept attached data files.
.SH Default

.sp 2
2147483647 (Unlimited; LSF does not set a maximum size of job
attachments.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOB_MSG_NUM\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOB_MSG_NUM=\fR\fIinteger\fR | \fR0\fR
.SH Description

.sp 2
Maximum number of message slots for each job. Maximum number of
messages that can be posted to a job with the bpost command.
.sp 2
0 indicates that jobs cannot accept external messages.
.SH Default

.sp 2
128
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOB_NUM\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOB_NUM=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of finished jobs whose events are to be stored
in the lsb.events log file.
.sp 2
Once the limit is reached, mbatchd starts a new event log file.
The old event log file is saved as lsb.events.\fIn\fR, with
subsequent sequence number suffixes incremented by 1 each time a
new log file is started. Event logging continues in the new
lsb.events file.
.SH Default

.sp 2
Set at time of installation to \fR10000\fR for the DEFAULT
configuration template and \fR100000\fR for the HIGH_THROUGHPUT
configuration template. If otherwise undefined, then \fR1000\fR.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOB_PREEMPT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOB_PREEMPT=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of times a job can be preempted. Applies to
queue-based preemption only.
.SH Valid values

.sp 2
0 < \fBMAX_JOB_PREEMPT\fR < 2147483647
.SH Default

.sp 2
2147483647 (Unlimited number of preemption times.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOB_PREEMPT_RESET\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOB_PREEMPT_RESET=\fR\fIY|N\fR
.SH Description

.sp 2
If \fBMAX_JOB_PREEMPT_RESET=N\fR, the job preempted count for
\fBMAX_JOB_PREEMPT\fR is not reset when a started job is
requeued, migrated, or rerun.
.SH Default

.sp 2
Y. Job preempted counter resets to 0 once a started job is
requeued, migrated, or rerun.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOB_REQUEUE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOB_REQUEUE=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of times to requeue a job automatically.
.SH Valid values

.sp 2
0 < \fBMAX_JOB_REQUEUE\fR < 2147483647
.SH Default

.sp 2
2147483647 (Unlimited number of requeue times.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOBID\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOBID=\fR\fIinteger\fR
.SH Description

.sp 2
The job ID limit. The job ID limit is the highest job ID that LSF
will ever assign, and also the maximum number of jobs in the
system.
.sp 2
By default, LSF assigns job IDs up to 6 digits. This means that
no more than 999999 jobs can be in the system at once.
.sp 2
Specify any integer from 999999 to 2147483646 (for practical
purposes, you can use any 10-digit integer less than this value).
.sp 2
You cannot lower the job ID limit, but you can raise it to 10
digits. This allows longer term job accounting and analysis, and
means you can have more jobs in the system, and the job ID
numbers will roll over less often.
.sp 2
LSF assigns job IDs in sequence. When the job ID limit is
reached, the count rolls over, so the next job submitted gets job
ID "1". If the original job 1 remains in the system, LSF skips
that number and assigns job ID "2", or the next available job ID.
If you have so many jobs in the system that the low job IDs are
still in use when the maximum job ID is assigned, jobs with
sequential numbers could have totally different submission times.
.SH Example

.sp 2
MAX_JOBID=125000000
.SH Default

.sp 2
999999
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_JOBINFO_QUERY_PERIOD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_JOBINFO_QUERY_PERIOD=\fR\fIinteger\fR
.SH Description

.sp 2
Maximum time for job information query commands (for example,
with bjobs) to wait.
.sp 2
When the time arrives, the query command processes exit, and all
associated threads are terminated.
.sp 2
If the parameter is not defined, query command processes will
wait for all threads to finish.
.sp 2
Specify a multiple of \fBMBD_REFRESH_TIME\fR.
.SH Valid values

.sp 2
Any positive integer greater than or equal to one (1)
.SH Default

.sp 2
2147483647 (Unlimited wait time.)
.SH See also

.sp 2
\fBLSB_BLOCK_JOBINFO_TIMEOUT\fR in lsf.conf
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_PEND_JOBS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_PEND_JOBS=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of pending jobs in the cluster.
.sp 2
This is the hard system-wide pending job threshold. No user or
user group can exceed this limit unless the job is forwarded from
a remote cluster.
.sp 2
If the user or user group submitting the job has reached the
pending job threshold as specified by \fBMAX_PEND_JOBS\fR, LSF
will reject any further job submission requests sent by that user
or user group. The system will continue to send the job
submission requests with the interval specified by
\fBSUB_TRY_INTERVAL\fR in lsb.params until it has made a number
of attempts equal to the \fBLSB_NTRIES\fR environment variable.
If \fBLSB_NTRIES\fR is not defined and LSF rejects the job
submission request, the system will continue to send the job
submission requests indefinitely as the default behavior.
.SH Default

.sp 2
2147483647 (Unlimited number of pending jobs.)
.SH See also

.sp 2
\fBSUB_TRY_INTERVAL\fR
.sp 2
\fBMAX_PEND_SLOTS\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_PEND_SLOTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_PEND_SLOTS=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of pending job slots available in the system.
.sp 2
This is the hard system-wide pending slots threshold. No user or
user group can exceed this limit unless the job is forwarded from
a remote cluster.
.sp 2
If the user or user group submitting the job has reached the
pending job slots threshold as specified by \fBMAX_PEND_SLOTS\fR,
LSF will reject any further job submission requests sent by that
user or user group. The system will continue to send the job
submission requests with the interval specified by
\fBSUB_TRY_INTERVAL\fR in lsb.params until it has made a number
of attempts equal to the \fBLSB_NTRIES\fR environment variable.
If \fBLSB_NTRIES\fR is not defined and LSF rejects the job
submission request, the system will continue to send the job
submission requests indefinitely as the default behavior.
.SH Default

.sp 2
2147483647 (Unlimited number of pending jobs.)
.SH See also

.sp 2
\fBSUB_TRY_INTERVAL\fR
.sp 2
\fBMAX_PEND_JOBS\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_PREEXEC_RETRY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_PREEXEC_RETRY=\fR\fIinteger\fR
.SH Description

.sp 2
MultiCluster job forwarding model only. The maximum number of
times to attempt the pre-execution command of a job from a remote
cluster.
.sp 2
If the job\(aqs pre-execution command fails all attempts, the job is
returned to the submission cluster.
.SH Valid values

.sp 2
0 < \fBMAX_PREEXEC_RETRY\fR < 2147483647
.SH Default

.sp 2
5
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_PROTOCOL_INSTANCES\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_PROTOCOL_INSTANCES=\fIinteger\fR\fR
.SH Description

.sp 2
\fBNote: \fRThis parameter is deprecated and might be removed in
a future version of LSF.
.sp 2
For LSF IBM Parallel Environment (PE) integration. Specify the
number of parallel communication paths (windows) available to the
protocol on each network. If number of windows specified for the
job (with the instances option of bsub -network or the
NETWORK_REQ parameter in lsb.queues or lsb.applications) is
greater than the specified maximum value, LSF rejects the job.
.sp 2
Specify MAX_PROTOCOL_INSTANCES in a queue (lsb.queues) or
cluster-wide in lsb.params. The value specified in a queue
overrides the value specified in lsb.params.
.sp 2
LSF_PE_NETWORK_NUM must be defined to a non-zero value in
lsf.conf for MAX_PROTOCOL_INSTANCES to take effect and for LSF to
run PE jobs. If LSF_PE_NETWORK_NUM is not defined or is set to 0,
the value of MAX_PROTOCOL_INSTANCES is ignored with a warning
message.
.SH Default

.sp 2
2
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_SBD_CONNS\fR
.ce 0

.sp 2
Sets the maximum number of open file connections between mbatchd
and sbatchd. The system sets \fBMAX_SBD_CONNS\fR automatically
during mbatchd startup.
.sp 2

.SH Syntax

.sp 2
\fRMAX_SBD_CONNS=\fR\fIinteger\fR
.SH Description

.sp 2
\fBMAX_SBD_CONNS\fR and \fBLSB_MAX_JOB_DISPATCH_PER_SESSION\fR
affect the number of file descriptors. To decrease the load on
the management host LIM you should not configure the management
host as the first host for the \fBLSF_SERVER_HOSTS\fR parameter.
.sp 2
The default values for \fBMAX_SBD_CONNS\fR and
\fBLSB_MAX_JOB_DISPATCH_PER_SESSION\fR are set during mbatchd
startup. They are not changed dynamically. If hosts are added
dynamically, mbatchd does not increase their values. Once all the
hosts have been added, you must run badmin mbdrestart to set the
correct values. If you know in advance that your cluster will
dynamically grow or shrink, you should configure these parameters
beforehand.
.SH Default

.sp 2
\fBMAX_SBD_CONNS = 2 * numOfHosts + 300\fR. This formula does not
provide the exact number of sbatchd connections because it also
calculates the lost and found hosts. Therefore, the calculated
number of connections might be a few more than this theoretical
number.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_SBD_FAIL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_SBD_FAIL=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of retries for reaching a non-responding
server batch daemon, sbatchd.
.sp 2
The minimum interval between retries is defined by
\fBMBD_SLEEP_TIME\fR/10. If mbatchd fails to reach a host and has
retried \fBMAX_SBD_FAIL\fR times, the host is considered
unavailable or unreachable.
.sp 2
After mbatchd tries to reach a host \fBMAX_SBD_FAIL\fR number of
times, mbatchd reports the host status as unavailable or
unreachable.
.sp 2
When a host becomes unavailable, mbatchd assumes that all jobs
running on that host have exited and that all rerunnable jobs
(jobs submitted with the bsub -r option) are scheduled to be
rerun on another host.
.SH Default

.sp 2
3
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_TOTAL_TIME_PREEMPT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_TOTAL_TIME_PREEMPT=\fR\fIinteger\fR
.SH Description

.sp 2
The accumulated preemption time in minutes after which a job
cannot be preempted again, where \fIminutes\fR is wall-clock
time, not normalized time.
.sp 2
The parameter of the same name in lsb.queues overrides this
parameter. The parameter of the same name in lsb.applications
overrides both this parameter and the parameter of the same name
in lsb.queues.
.SH Valid values

.sp 2
Any positive integer greater than or equal to one (1)
.SH Default

.sp 2
Unlimited
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMAX_USER_PRIORITY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMAX_USER_PRIORITY=\fR\fIinteger\fR
.SH Description

.sp 2
Enables user-assigned job priority and specifies the maximum job
priority a user can assign to a job.
.sp 2
LSF and queue administrators can assign a job priority higher
than the specified value for jobs they own.
.SH Compatibility

.sp 2
User-assigned job priority changes the behavior of btop and bbot.
.SH Example

.sp 2
MAX_USER_PRIORITY=100
.br

.sp 2
Specifies that 100 is the maximum job priority that can be
specified by a user.
.SH Default

.sp 2
Not defined.
.SH See also

.sp 2
*  
   bsub, bmod, btop, bbot
.sp 2
*  
   \fBJOB_PRIORITY_OVER_TIME\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMBD_EGO_CONNECT_TIMEOUT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMBD_EGO_CONNECT_TIMEOUT=\fR\fIseconds\fR
.SH Description

.sp 2
For EGO-enabled SLA scheduling, timeout parameter for network I/O
connection with EGO vemkd.
.SH Default

.sp 2
0 seconds
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMBD_EGO_READ_TIMEOUT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMBD_EGO_READ_TIMEOUT=\fR\fIseconds\fR
.SH Description

.sp 2
For EGO-enabled SLA scheduling, timeout parameter for network I/O
read from EGO vemkd after connection with EGO.
.SH Default

.sp 2
0 seconds
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMBD_EGO_TIME2LIVE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMBD_EGO_TIME2LIVE=\fR\fIminutes\fR
.SH Description

.sp 2
For EGO-enabled SLA scheduling, specifies how long EGO should
keep information about host allocations in case mbatchd restarts,
.SH Default

.sp 2
0 minutes
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMBD_QUERY_CPUS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMBD_QUERY_CPUS=\fR\fIcpu_list\fR
.sp 2
\fIcpu_list\fR defines the list of management host CPUS on which
the mbatchd child query processes can run. Format the list as a
white-space delimited list of CPU numbers.
.sp 2
For example, if you specify
.sp 2
MBD_QUERY_CPUS=1 2 3
.br

.sp 2
the mbatchd child query processes will run only on CPU numbers 1,
2, and 3 on the management host.
.SH Description

.sp 2
Defining \fRLSF_INTELLIGENT_CPU_BIND=Y\fR in the lsf.conf file
overrides the value of this parameter. Use
\fRLSF_INTELLIGENT_CPU_BIND=Y\fR instead of this parameter to
enable LSF to bind a defined set of LSF daemons to CPUs.
.sp 2
This parameter is only maintained for backwards compatibility.
.sp 2
This parameter allows you to specify the management host CPUs on
which mbatchd child query processes can run (hard CPU affinity).
This improves mbatchd scheduling and dispatch performance by
binding query processes to specific CPUs so that higher priority
mbatchd processes can run more efficiently.
.sp 2
When you define this parameter, LSF runs mbatchd child query
processes \fIonly\fR on the specified CPUs. The operating system
can assign other processes to run on the same CPU; however, if
utilization of the bound CPU is lower than utilization of the
unbound CPUs.
.SH Important

.sp 2
1. 
   You can specify CPU affinity only for management hosts that
   use one of the following operating systems:
.sp 2
   *  Linux 2.6 or higher
.sp 2
   *  Solaris 10 or higher
.sp 2
2. 
   If failover to a management host candidate occurs, LSF
   maintains the hard CPU affinity, provided that the management
   host candidate has the same CPU configuration as the original
   management host. If the configuration differs, LSF ignores the
   CPU list and reverts to default behavior.
.SH Related parameters

.sp 2
To improve scheduling and dispatch performance of all LSF
daemons, you should use \fBMBD_QUERY_CPUS\fR together with
\fBEGO_DAEMONS_CPUS\fR (in ego.conf), which controls LIM CPU
allocation, and \fBLSF_DAEMONS_CPUS\fR, which binds mbatchd and
mbschd daemon processes to specific CPUs so that higher priority
daemon processes can run more efficiently. To get best
performance, CPU allocation for all four daemons should be
assigned their own CPUs. For example, on a 4 CPU SMP host, the
following configuration will give the best performance:
.sp 2
EGO_DAEMONS_CPUS=0 LSF_DAEMONS_CPUS=1:2 MBD_QUERY_CPUS=3
.br

.SH Default

.sp 2
Not defined
.SH See also

.sp 2
\fBLSF_DAEMONS_CPUS\fR in lsf.conf
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMBD_REFRESH_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMBD_REFRESH_TIME=\fR\fIseconds\fR [\fImin_refresh_time\fR]
.sp 2
where \fImin_refresh_time\fR defines the minimum time (in
seconds) that the child mbatchd will stay to handle queries.
.SH Description

.sp 2
Time interval, in seconds, when mbatchd will fork a new child
mbatchd to service query requests to keep information sent back
to clients updated. A child mbatchd processes query requests
creating threads.
.sp 2
To enable \fBMBD_REFRESH_TIME\fR you must specify
\fBLSB_QUERY_PORT\fR in lsf.conf. The child mbatchd listens to
the port number specified by \fBLSB_QUERY_PORT\fR and creates
threads to service requests until the job changes status, a new
job is submitted, or \fBMBD_REFRESH_TIME\fR has expired.
.sp 2
*  If \fBMBD_REFRESH_TIME\fR is less than or equal to
   \fImin_refresh_time\fR, the child mbatchd exits at
   \fBMBD_REFRESH_TIME\fR even if the job changes status or a new
   job is submitted before \fBMBD_REFRESH_TIME\fR expires.
.sp 2
*  If \fBMBD_REFRESH_TIME\fR is greater than
   \fImin_refresh_time\fR:
.sp 2
   *  the child mbatchd exits at \fImin_refresh_time\fR if a job
      changes status or a new job is submitted before the
      \fImin_refresh_time\fR
.sp 2
   *  the child mbatchd exits after the \fImin_refresh_time\fR
      when a job changes status or a new job is submitted
.sp 2
   *  the child mbatchd exits at \fBMBD_REFRESH_TIME\fR if no job
      changes status or a new job is submitted
.sp 2
The value of this parameter must be between 0 and 300. Any values
specified out of this range are ignored, and the system default
value is applied.
.sp 2
The bjobs command may not display up-to-date information if two
consecutive query commands are issued before a child mbatchd
expires because child mbatchd job information is not updated. If
you use the bjobs command and do not get up-to-date information,
you may need to decrease the value of this parameter. Note,
however, that the lower the value of this parameter, the more you
negatively affect performance.
.sp 2
The number of concurrent requests is limited by the number of
concurrent threads that a process can have. This number varies by
platform:
.sp 2
*  Sun Solaris, 2500 threads per process
.sp 2
*  AIX, 512 threads per process
.sp 2
*  HP-UX, 64 threads per process
.sp 2
*  Linux does not have a direct threads per process limit, but
   instead has a limit on the total number of processes on the
   system. To determine this number, run the following command:
.sp 2
   \fRcat /proc/sys/kernel/threads-max\fR
.sp 2
Set the \fBNEWJOB_REFRESH\fR parameter in the lsb.params as
\fRY\fR to enable a child mbatchd daemon to get up to date
information about new jobs from the parent mbatchd daemon after
the child mbatchd daemon was created. If \fRNEWJOB_REFRESH=Y\fR
is enabled, set the \fBMBD_REFRESH\fR parameter to a value
greater than 10 seconds.
.SH Required parameters

.sp 2
\fBLSB_QUERY_PORT\fR must be enabled in lsf.conf.
.SH Restrictions

.sp 2
Applies only to UNIX operating systems that support thread
programming.
.SH Valid Values

.sp 2
5-300 seconds
.SH Default

.sp 2
The default value for the minimum refresh time is adjusted
automatically based on the number of jobs in the system:
.sp 2
*  If there are less than 500,000 jobs in the system, the default
   value is 10 seconds.
.sp 2
*  If there are more than 500,000 jobs in the system, the default
   value is 10 seconds + (#jobs – 500,000)/100,000.
.SH See also

.sp 2
\fBLSB_QUERY_PORT\fR in lsf.conf, \fBNEWJOB_REFRESH\fR in
lsb.params
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMBD_SLEEP_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMBD_SLEEP_TIME=\fR\fIseconds\fR
.SH Description

.sp 2
Used in conjunction with the parameters \fBSLOT_RESERVE\fR,
\fBMAX_SBD_FAIL\fR, and \fBJOB_ACCEPT_INTERVAL\fR
.sp 2
Amount of time in seconds used for calculating parameter values.
.SH Default

.sp 2
Set at installation to 10 seconds. If not defined, 60 seconds.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMBD_USE_EGO_MXJ\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMBD_USE_EGO_MXJ=Y\fR | \fRN\fR
.SH Description

.sp 2
By default, when EGO-enabled SLA scheduling is configured, EGO
allocates an entire host to LSF, which uses its own MXJ
definition to determine how many slots are available on the host.
LSF gets its host allocation from EGO, and runs as many jobs as
the LSF configured MXJ for that host dictates.
.sp 2
\fBMBD_USE_EGO_MXJ\fR forces LSF to use the job slot maximum
configured in the EGO consumer. This allows partial sharing of
hosts (for example, a large SMP computer) among different
consumers or workload managers. When \fBMBD_USE_EGO_MXJ\fR is
set, LSF schedules jobs based on the number of slots allocated
from EGO. For example, if \fRhostA\fR has 4 processors, but EGO
allocates 2 slots to an EGO-enabled SLA consumer. LSF can
schedule a maximum of 2 jobs from that SLA on \fRhostA\fR.
.SH Default

.sp 2
N (mbatcthd uses the LSF MXJ)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_PENDING_REASON_PKG_SIZE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMC_PENDING_REASON_PKG_SIZE=\fR\fIkilobytes\fR | \fR0\fR
.SH Description

.sp 2
MultiCluster job forwarding model only. Pending reason update
package size, in KB. Defines the maximum amount of pending reason
data this cluster will send to submission clusters in one cycle.
.sp 2
Specify the keyword 0 (zero) to disable the limit and allow any
amount of data in one package.
.SH Default

.sp 2
512
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_PENDING_REASON_UPDATE_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMC_PENDING_REASON_UPDATE_INTERVAL=\fR\fIseconds\fR | 0
.SH Description

.sp 2
MultiCluster job forwarding model only. Pending reason update
interval, in seconds. Defines how often this cluster will update
submission clusters about the status of pending MultiCluster
jobs.
.sp 2
Specify the keyword 0 (zero) to disable pending reason updating
between clusters.
.SH Default

.sp 2
300
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_PLUGIN_SCHEDULE_ENHANCE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBMC_PLUGIN_SCHEDULE_ENHANCE=RESOURCE_ONLY\fR
.sp 2
\fBMC_PLUGIN_SCHEDULE_ENHANCE=COUNT_PREEMPTABLE
[HIGH_QUEUE_PRIORITY]\fR
.sp 2
\fB [PREEMPTABLE_QUEUE_PRIORITY] [PENDING_WHEN_NOSLOTS]\fR
.sp 2
\fBMC_PLUGIN_SCHEDULE_ENHANCE=DYN_CLUSTER_WEIGHTING\fR
.sp 2
\fBNote: \fR
.sp 2
When any one of \fBHIGH_QUEUE_PRIORITY\fR,
\fBPREEMPTABLE_QUEUE_PRIORITY\fR or \fBPENDING_WHEN_NOSLOTS\fR is
defined, \fBCOUNT_PREEMPTABLE\fR is enabled automatically.
.SH Description

.sp 2
MultiCluster job forwarding model only. The parameter
\fBMC_PLUGIN_SCHEDULE_ENHANCE\fR enhances the scheduler for the
MultiCluster job forwarding model based on the settings selected.
Use in conjunction with \fBMC_PLUGIN_UPDATE_INTERVAL\fR to set
the data update interval between remote clusters.
\fBMC_PLUGIN_UPDATE_INTERVAL\fR must be a non-zero value to
enable the MultiCluster enhanced scheduler.
.sp 2
With the parameter \fBMC_PLUGIN_SCHEDULE_ENHANCE\fR set to a
valid value, remote resources are considered as if
\fRMC_PLUGIN_REMOTE_RESOURCE=Y\fR regardless of the actual
setting. In addition the submission cluster scheduler considers
specific execution queue resources when scheduling jobs.
.sp 2
\fBNote: \fR
.sp 2
The parameter \fBMC_PLUGIN_SCHEDULE_ENHANCE\fR was introduced in
LSF Version 7 Update 6. All clusters within a MultiCluster
configuration must be running a version of LSF containing this
parameter to enable the enhanced scheduler.
.sp 2
After a MultiCluster connection is established, counters take the
time set in \fBMC_PLUGIN_UPDATE_INTERVAL\fR to update. Scheduling
decisions made before this first interval has passed do not
accurately account for remote queue workload.
.SH Default

.sp 2
Not defined.
.sp 2
The enhanced MultiCluster scheduler is not used. If
\fRMC_PLUGIN_REMOTE_RESOURCE=Y\fR in lsf.conf remote resource
availability is considered before jobs are forwarded to the queue
with the most available slots.
.SH See also

.sp 2
\fBMC_PLUGIN_UPDATE_INTERVAL\fR in lsb.params.
.sp 2
\fBMC_PLUGIN_REMOTE_RESOURCE\fR in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_PLUGIN_UPDATE_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMC_PLUGIN_UPDATE_INTERVAL=\fR\fIseconds\fR | 0
.SH Description

.sp 2
MultiCluster job forwarding model only; set for the execution
cluster. The number of seconds between data updates between
clusters.
.sp 2
A non-zero value enables collection of remote cluster queue data
for use by the submission cluster enhanced scheduler.
.sp 2
Suggested value when enabled is \fBMBD_SLEEP_TIME\fR (default is
20 seconds).
.sp 2
A value of 0 disables collection of remote cluster queue data.
.SH Default

.sp 2
0
.SH See Also

.sp 2
\fBMC_PLUGIN_SCHEDULE_ENHANCE\fR in lsf.params.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_RECLAIM_DELAY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMC_RECLAIM_DELAY=\fR\fIminutes\fR
.SH Description

.sp 2
MultiCluster resource leasing model only. The reclaim interval
(how often to reconfigure shared leases) in minutes.
.SH Default

.sp 2
10 (minutes)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_RESOURCE_MATCHING_CRITERIA\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMC_RESOURCE_MATCHING_CRITERIA=\fR\fI<rc1> <rc2>...\fR
.SH Description

.sp 2
This parameter is configured on the MultiCluster execution side
and defines numeric and string resources for the execution
cluster to pass back to the submission cluster. The execution
cluster makes the submission cluster aware of what resources and
their values are listed so that the submission cluster can make
better forwarding decisions.
.sp 2
You can define resources that meet the following criteria:
.sp 2
*  User defined numeric and string resources
.sp 2
*  Host based resources, for example:
.sp 2
   *  Resources defined in the \fRRESOURCE\fR column in the Host
      section of the lsf.cluster file.
.sp 2
   *  Resource location as [default] or value@[default] in the
      Resource Map section of the lsf.cluster file.
.sp 2
*  Non-consumable resources.
.sp 2
Although you can configure dynamic resources as criterion, they
should be as close to static as possible to make forwarding
decisions accurately. The number of criterion and values for each
resource should be limited within a reasonable range to prevent
deterioration of forward scheduling performance.
.sp 2
The behavior for \fBMC_PLUGIN_REMOTE_RESOURCE\fR is the default
behavior and is kept for compatibility.
.SH Default

.sp 2
None
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_RUSAGE_UPDATE_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMC_RUSAGE_UPDATE_INTERVAL=\fR\fIseconds\fR
.SH Description

.sp 2
MultiCluster only. Enables resource use updating for MultiCluster
jobs running on hosts in the cluster and specifies how often to
send updated information to the submission or consumer cluster.
.SH Default

.sp 2
300
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMC_SORT_BY_SUBMIT_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMC_SORT_BY_SUBMIT_TIME=Y|y|N|n\fR
.SH Description

.sp 2
Enabling this parameter in a MultiCluster environment allows
forwarded jobs on the execution cluster to be sorted and run
based on their original submission time (instead of their
forwarded time).
.sp 2
When the maximum rescheduled time has been reached and the
pending jobs are rescheduled on the execution cluster, they are
ordered based on their original submission time (the time when
the job was first submitted on the submission cluster) and not
the forwarding time (the time when the job was re-forwarded to
the execution cluster).
.sp 2
Jobs forwarded to the execution cluster using brequeue -a or
brequeue -p are also sorted based on the submission time.
.sp 2
\fBNote \fR: This parameter does not change the behaviour of
bswitch, bbot or btop.
.sp 2
*  After bswitch, LSF forwards the job based on job switch time
   instead of the submission time.
.sp 2
*  Using btop or bbot on the submission cluster does not affect
   the position of the jobs at the execution cluster or future
   forwarding.
.sp 2
*  User can btop the job at the execution cluster but after the
   job is recalled and forwarded again, LSF will order the job
   based on the original submission time and the previous btop
   position is gone.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBMIN_SWITCH_PERIOD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRMIN_SWITCH_PERIOD=\fR\fIseconds\fR
.SH Description

.sp 2
The minimum period in seconds between event log switches.
.sp 2
Works together with \fBMAX_JOB_NUM\fR to control how frequently
mbatchd switches the file. mbatchd checks if \fBMAX_JOB_NUM\fR
has been reached every \fBMIN_SWITCH_PERIOD\fR seconds. If
mbatchd finds that \fBMAX_JOB_NUM\fR has been reached, it
switches the events file.
.sp 2
To significantly improve the performance of mbatchd for large
clusters, set this parameter to a value equal to or greater than
600. This causes mbatchd to fork a child process that handles
event switching, thereby reducing the load on mbatchd. mbatchd
terminates the child process and appends delta events to new
events after the \fBMIN_SWITCH_PERIOD\fR has elapsed.
.SH Default

.sp 2
Set to \fR1800\fR at time of installation for the HIGH_THROUGHPUT
configuration template. If otherwise undefined, then \fR0\fR (no
minimum period, log switch frequency is not restricted).
.SH See also

.sp 2
\fBMAX_JOB_NUM\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBNEWJOB_REFRESH\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBNEWJOB_REFRESH=\fR\fBY\fR | \fBN\fR
.SH Description

.sp 2
Enables a child mbatchd to get up to date information about new
jobs from the parent mbatchd. When set to Y, job queries with
bjobs display new jobs submitted after the child mbatchd was
created.
.sp 2
If you have enabled multithreaded mbatchd support, the bjobs
command may not display up-to-date information if two consecutive
query commands are issued before a child mbatchd expires because
child mbatchd job information is not updated. Use
\fRNEWJOB_REFRESH=Y\fR to enable the parent mbatchd to push new
job information to a child mbatchd
.sp 2
When \fRNEWJOB_REFRESH=Y\fR, as users submit new jobs, the parent
mbatchd pushes the new job event to the child mbatchd. The parent
mbatchd transfers the following kinds of new jobs to the child
mbatchd:
.sp 2
*  Newly submitted jobs
.sp 2
*  Restarted jobs
.sp 2
*  Remote lease model jobs from the submission cluster
.sp 2
*  Remote forwarded jobs from the submission cluster
.sp 2
When \fRNEWJOB_REFRESH=Y\fR, you should set
\fBMBD_REFRESH_TIME\fR to a value greater than 10 seconds.
.SH Required parameters

.sp 2
\fBLSB_QUERY_PORT\fR must be enabled in lsf.conf.
.SH Restrictions

.sp 2
Applies only to UNIX operating systems that support thread
programming.
.sp 2
The parent mbatchd only pushes the new job event to a child
mbatchd. The child mbatchd is not aware of status changes of
existing jobs. The child mbatchd will not reflect the results of
job control commands (bmod, bmig, bswitch, btop, bbot, brequeue,
bstop, bresume, and so on) invoked after the child mbatchd is
created.
.SH Default

.sp 2
Set to \fRY\fR at time of installation for the DEFAULT and
PARALLEL configuration templates. If otherwise undefined, then
\fRN\fR (new jobs are not pushed to the child mbatchd).
.SH See also

.sp 2
\fBMBD_REFRESH_TIME\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBNO_PREEMPT_FINISH_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBNO_PREEMPT_FINISH_TIME\fR=minutes | percentage
.SH Description

.sp 2
Prevents preemption of jobs that will finish within the specified
number of minutes or the specified percentage of the estimated
run time or run limit.
.sp 2
Specifies that jobs due to finish within the specified number of
minutes or percentage of job duration should not be preempted,
where \fIminutes\fR is wall-clock time, not normalized time.
Percentage must be greater than 0 or less than 100% (between 1%
and 99%).
.sp 2
For example, if the job run limit is 60 minutes and
\fRNO_PREEMPT_FINISH_TIME=10%\fR, the job cannot be preempted
after it running 54 minutes or longer.
.sp 2
If you specify percentage for \fBNO_PREEMPT_RUN_TIME\fR, requires
a run time (bsub -We or \fBRUNTIME\fR in lsb.applications), or
run limit to be specified for the job (bsub -W, or \fBRUNLIMIT\fR
in lsb.queues, or \fBRUNLIMIT\fR in lsb.applications)
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBNO_PREEMPT_INTERVAL\fR
.ce 0

.sp 2
Specifies the number of minutes a preemptable job can run before
it is preempted. If the uninterrupted run time of a preemptable
job is longer than the specified time, it can be preempted.
.sp 2

.SH Syntax

.sp 2
\fBNO_PREEMPT_INTERVAL\fR=minutes
.sp 2
The value of \fIminutes\fR is wall-clock time, not normalized
time.
.SH Description

.sp 2
The \fRNO_PREEMPT_INTERVAL=0\fR parameter allows immediate
preemption of jobs as soon as they start or resume running.
.sp 2
For example, if a job \fRA\fR needs to preempt other candidate
preemptable jobs\fRB\fR, \fRC\fR, and \fRD\fR, the
\fBNO_PREEMPT_INTERVAL\fR parameter determines which job is
preempted:
.sp 2
*  Run time of job \fRB\fR and job \fRC\fR is less than the
   \fBNO_PREEMPT_INTERVAL\fR parameter: job \fRB\fR and \fRC\fR
   are not preempted.
.sp 2
*  Run time of job \fRD\fR is greater than or equal to the
   \fBNO_PREEMPT_INTERVAL\fR parameter: job \fRD\fR is preempted.
.sp 2
The parameter of the same name in the lsb.queues file overrides
this parameter. The parameter of the same name in the
lsb.applications file overrides both this parameter and the
parameter of the same name in the lsb.queues file.
.SH Default

.sp 2
0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBNO_PREEMPT_RUN_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBNO_PREEMPT_RUN_TIME\fR=minutes | percentage
.SH Description

.sp 2
Prevents preemption of jobs that have been running for the
specified number of minutes or the specified percentage of the
estimated run time or run limit.
.sp 2
Specifies that jobs that have been running for the specified
number of minutes or longer should not be preempted, where
\fIminutes\fR is wall-clock time, not normalized time. Percentage
must be greater than 0 or less than 100% (between 1% and 99%).
.sp 2
For example, if the job run limit is 60 minutes and
\fRNO_PREEMPT_RUN_TIME=50%\fR, the job cannot be preempted after
it running 30 minutes or longer.
.sp 2
If you specify percentage for \fBNO_PREEMPT_RUN_TIME\fR, requires
a run time (bsub -We or \fBRUNTIME\fR in lsb.applications), or
run limit to be specified for the job (bsub -W, or \fBRUNLIMIT\fR
in lsb.queues, or \fBRUNLIMIT\fR in lsb.applications)
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBORPHAN_JOB_TERM_GRACE_PERIOD \fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRORPHAN_JOB_TERM_GRACE_PERIOD=\fR\fIseconds\fR
.SH Description

.sp 2
If defined, enables automatic orphan job termination at the
cluster level which applies to all dependent jobs; otherwise it
is disabled. This parameter is also used to define a cluster-wide
termination grace period to tell LSF how long to wait before
killing orphan jobs. Once configured, automatic orphan job
termination applies to all dependent jobs in the cluster.
.sp 2
*  \fBORPHAN_JOB_TERM_GRACE_PERIOD =\fR \fR0\fR: Automatic orphan
   job termination is enabled in the cluster but no termination
   grace period is defined. A dependent job can be terminated as
   soon as it is found to be an orphan.
.sp 2
*  \fBORPHAN_JOB_TERM_GRACE_PERIOD >\fR \fR0\fR: Automatic orphan
   job termination is enabled and the termination grace period is
   set to the specified number of seconds. This is the minimum
   time LSF will wait before terminating an orphan job. In a
   multi-level job dependency tree, the grace period is not
   repeated at each level, and all direct and indirect orphans of
   the parent job can be terminated by LSF automatically after
   the grace period has expired.
.sp 2
The valid range of values is any integer greater than or equal to
0 and less than 2147483647.
.SH Default

.sp 2
Not defined. Automatic orphan termination is disabled.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPARALLEL_SCHED_BY_SLOT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPARALLEL_SCHED_BY_SLOT=y\fR | \fRY\fR
.SH Description

.sp 2
If defined, LSF schedules jobs based on the number of slots
assigned to the hosts instead of the number of CPUs. For example,
if MXJ is set to "-", then LSF considers the default value for
number of CPUs for that host. These slots can be defined by host
in lsb.hosts or by slot limit in lsb.resources.
.sp 2
All slot-related messages still show the word “processors”, but
actually refer to “slots” instead. Similarly, all scheduling
activities also use slots instead of processors.
.SH Default

.sp 2
Set to \fRY\fR at time of installation. If otherwise undefined,
then \fRN\fR (disabled).
.SH See also

.sp 2
*  JL/U and MXJ in lsb.hosts
.sp 2
*  SLOTS and SLOTS_PER_PROCESSOR in lsb.resources
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPEND_REASON_UPDATE_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPEND_REASON_UPDATE_INTERVAL=\fR\fIseconds\fR
.SH Description

.sp 2
Time interval that defines how often pending reasons are
calculated by the scheduling daemon mbschd.
.SH Valid values

.sp 2
Any positive integer between 1 and 2147483646.
.SH Default

.sp 2
Set to \fR60\fR seconds at time of installation for the
HIGH_THROUGHPUT configuration template. If otherwise undefined,
then \fR30\fR seconds.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPERFORMANCE_THRESHOLD_FILE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBPERFORMANCE_THRESHOLD_FILE\fR=full_file_path
.SH Description

.sp 2
Specifies the location of the performance threshold file for the
cluster. This file contains the cluster-level threshold values
for the minimize energy and minimize time policies, used with the
energy aware scheduling automatic select CPU frequency feature.
.SH Default

.sp 2
\fILSF_ENVDIR\fR/lsbatch/cluster_name/configdir/lsb.threshold
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPERSIST_LIVE_CONFIG\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPERSIST_LIVE_CONFIG=Y|y|N|n\fR
.SH Description

.sp 2
Specifies whether LSF persists live configuration changes so that
they take effect after the mbatchd daemon restarts.
.sp 2
If \fRPERSIST_LIVE_CONFIG=Y\fR, LSF persists all live
configuration changes so that they take effect after mbatchd
restarts.
.sp 2
If \fRPERSIST_LIVE_CONFIG=N\fR, LSF does not persist live
configuration changes and they do not take effect after
restarting or reconfiguring mbatchd.
.SH Default

.sp 2
Y
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPG_SUSP_IT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPG_SUSP_IT=\fR\fIseconds\fR
.SH Description

.sp 2
The time interval that a host should be interactively idle (it >
0) before jobs suspended because of a threshold on the pg load
index can be resumed.
.sp 2
This parameter is used to prevent the case in which a batch job
is suspended and resumed too often as it raises the paging rate
while running and lowers it while suspended. If you are not
concerned with the interference with interactive jobs caused by
paging, the value of this parameter may be set to 0.
.SH Default

.sp 2
180 seconds
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPLAN\fR
.ce 0

.sp 2
For use when the \fBALLOCATION_PLANNER\fR parameter is enabled.
Used to identify the jobs that are candidates for planning.
.sp 2

.SH Syntax

.sp 2
\fRPLAN = Y | N | "<\fIkey\fR>[\fIvalue\fR] ..."\fR
.SH Description

.sp 2
LSF requires that the \fBALLOCATION_PLANNER\fR parameter is
enabled in order to use \fBPLAN=Y\fR.
.sp 2
Also defined at the application and queue levels. The precedence
is: application, queue, global. For example, application level
setting overrides the queue level setting.
.sp 2
The following key-value pairs are supported:
.sp 2
\fBTable 1. Key-Value pairs for PLAN\fR
.sp 2
+---------------+---------------+---------------+---------------+
| key           | value         | Default       | Description   |
+---------------+---------------+---------------+---------------+
| DELAY         | positive      | -             | Number of     |
|               | integer       |               | minutes to    |
|               |               |               | delay before  |
|               |               |               | considering   |
|               |               |               | making a plan |
|               |               |               | for a job     |
|               |               |               | following the |
|               |               |               | job\(aqs         |
|               |               |               | submission    |
|               |               |               | time.         |
+---------------+---------------+---------------+---------------+
| MAX_JOBS      | positive      | -             | Maximum       |
|               | integer       |               | number of     |
|               |               |               | jobs that can |
|               |               |               | have a plan   |
|               |               |               | concurrently. |
+---------------+---------------+---------------+---------------+
| RSCHED_TIME   | positive      | -             | Number of     |
|               | integer       |               | minutes       |
|               |               |               | before        |
|               |               |               | recalculating |
|               |               |               | the plan. If  |
|               |               |               | set to 0, the |
|               |               |               | plan is       |
|               |               |               | recalculated  |
|               |               |               | in each       |
|               |               |               | plan-making   |
|               |               |               | cycle.        |
+---------------+---------------+---------------+---------------+
.sp 2
\fBNote: \fR
.sp 2
The \fBPLAN\fR parameter replaces the existing \fBSLOT_RESERVE\fR
parameter and \fBRESOURCE_RESERVE\fR parameter when the
\fBALLOCATION_PLANNER\fR parameter is enabled.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPOWER_ON_WAIT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPOWER_ON_WAIT=\fR\fR\fItime_seconds\fR\fR
.SH Description

.sp 2
Configures a wait time (in seconds) after a host is resumed and
enters ok status, before dispatching a job. This is to allow
other services on the host to restart and enter a ready state.
The default value is 0 and is applied globally.
.SH Default

.sp 2
0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPOWER_RESET_CMD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPOWER_RESET_CMD=\fR\fR\fIcommand\fR\fR
.SH Description

.sp 2
Defines the reset operation script that will be called when
handling a power reset request.
.sp 2
To allow the command to parse all its arguments as a host list,
LSF uses the command in the format:
.sp 2
\fRcommand host [host …]\fR
.sp 2
To show each host with its execution result (success (0) or fail
(1)), the return value of the command follows the format:
.sp 2
host 0
.br
host 1
.br
 ...
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPOWER_RESUME_CMD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPOWER_RESUME_CMD=\fR\fRcommand\fR
.SH Description

.sp 2
Defines the resume operation script that will be called when
handling a resume request. An opposite operation to
POWER_SUSPEND_CMD.
.sp 2
To allow the command to parse all its arguments as a host list,
LSF uses the command in the format:
.sp 2
\fRcommand host [host …]\fR
.sp 2
To show each host with its execution result (success (0) or fail
(1)), the return value of the command follows the format:
.sp 2
host 0
.br
host 1
.br
 ...
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPOWER_STATUS_LOG_MAX\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPOWER_STATUS_LOG_MAX=\fR\fR\fInumber\fR\fR
.SH Description

.sp 2
Configures a trigger value for events switching. The default
value is 10000. This value takes effect only if PowerPolicy (in
lsb.resources) is enabled.
.sp 2
If a finished job number is not larger than the value of
\fBMAX_JOB_NUM\fR, the event switch can also be triggered by
POWER_STATUS_LOG_MAX, which works with MIN_SWITCH_PERIOD.
.sp 2
POWER_STATUS_LOG_MAX is not available with LSF Express edition.
.SH Default

.sp 2
10000
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPOWER_SUSPEND_CMD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPOWER_SUSPEND_CMD=\fR\fRcommand\fR
.SH Description

.sp 2
Defines the suspend operation script that will be called when
handling a suspend request.
.sp 2
To allow the command to parse all its arguments as a host list,
LSF uses the command in the format:
.sp 2
\fRcommand host [host …]\fR
.sp 2
To show each host with its execution result (success (0) or fail
(1)), the return value of the command follows the format:
.sp 2
host 0
.br
host 1
.br
 ...
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPOWER_SUSPEND_TIMEOUT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPOWER_SUSPEND_TIMEOUT=\fR\fR\fIinteger\fR\fR
.SH Description

.sp 2
Defines the timeout value (in seconds) for power suspend, resume,
and reset actions. When a power operation is not successful (for
example, sbatchd does not reconnect when resuming a host) within
the specified number of seconds, the action will be considered
failed.
.SH Default

.sp 2
600
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPREEMPT_DELAY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPREEMPT_DELAY=\fR\fIseconds\fR
.SH Description

.sp 2
Preemptive jobs will wait the specified number of seconds from
the submission time before preempting any low priority
preemptable jobs. During the grace period, preemption will not be
trigged, but the job can be scheduled and dispatched by other
scheduling policies.
.sp 2
This feature can provide flexibility to tune the system to reduce
the number of preemptions. It is useful to get better performance
and job throughput. When the low priority jobs are short, if high
priority jobs can wait a while for the low priority jobs to
finish, preemption can be avoided and cluster performance is
improved. If the job is still pending after the grace period has
expired, the preemption will be triggered.
.sp 2
The waiting time is for preemptive jobs in the pending status
only. It will not impact the preemptive jobs that are suspended.
.sp 2
The time is counted from the submission time of the jobs. The
submission time means the time mbatchd accepts a job, which
includes newly submitted jobs, restarted jobs (by brestart) or
forwarded jobs from a remote cluster.
.sp 2
When the preemptive job is waiting, the pending reason is:
.sp 2
The preemptive job is allowing a grace period before preemption.
.sp 2
If you use an older version of bjobs, the pending reason is:
.sp 2
Unknown pending reason code <6701>;
.sp 2
The parameter is defined in lsb.params, lsb.queues (overrides
lsb.params), and lsb.applications (overrides both lsb.params and
lsb.queues).
.sp 2
Run badmin reconfig to make your changes take effect.
.SH Default

.sp 2
Not defined (if the parameter is not defined anywhere, preemption
is immediate).
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPREEMPT_FOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBPREEMPT_FOR=\fR[\fBGROUP_JLP\fR] [\fBGROUP_MAX\fR]
[\fBHOST_JLU\fR] [\fBLEAST_RUN_TIME\fR] [\fBMINI_JOB\fR]
[\fBUSER_JLP\fR] [\fBOPTIMAL_MINI_JOB\fR] [\fBBUSY\fR]
.SH Description

.sp 2
If preemptive scheduling is enabled, this parameter is used to
disregard suspended jobs when determining if a job slot limit is
exceeded, to preempt jobs with the shortest running time, and to
optimize preemption of parallel jobs.
.sp 2
If preemptive scheduling is enabled, more lower-priority parallel
jobs may be preempted than necessary to start a high-priority
parallel job. Both running and suspended jobs are counted when
calculating the number of job slots in use, except for the
following limits:
.sp 2
*  The total job slot limit for hosts, specified at the host
   level
.sp 2
*  Total job slot limit for individual users, specified at the
   user level—by default, suspended jobs still count against the
   limit for user groups
.sp 2
Specify one or more of the following keywords. Use spaces to
separate multiple keywords.
.sp 2
\fBBUSY\fR
.br
         Enables preemptive scheduling to preempt slots on the
         closed_busy host for all preemptive jobs except
         preemptive suspended jobs and only one job can preempt a
         closed_busy host at a time.
.sp 2
         If the job cannot run in two minutes after making a
         reservation on the closed_busy host, the job preempts
         necessary slots on other candidate hosts or all
         preemptable slots on this closed_busy host.
.sp 2
         After two minutes, if the closed_busy host is still the
         candidate host and there are no preemptable running
         jobs, this job will pend without any reservations.
.sp 2
         If the job cannot run in five minutes after making a
         reservation on the closed_busy host, the job no longer
         considers this closed_busy host as a candidate host.
.sp 2
         \fBTip: \fRTo decrease load on the closed_busy host for
         running preemptive pending jobs, specify
         \fRJOB_CONTROLS=SUSPEND[brequeue $LSB_JOBID]\fR on
         preemptable queues.
.sp 2
         To use the closed_busy host when submitting a higher
         priority preemptive job with the \fRselect\fR statement,
         avoid removing hosts from consideration based on load
         indices
.sp 2
\fBGROUP_JLP\fR
.br
         Counts only running jobs when evaluating if a user group
         is approaching its per-processor job slot limit
         (SLOTS_PER_PROCESSOR, USERS, and PER_HOST=all in the
         lsb.resources file). Suspended jobs are ignored when
         this keyword is used.
.sp 2
\fBGROUP_MAX\fR
.br
         Counts only running jobs when evaluating if a user group
         is approaching its total job slot limit (SLOTS,
         PER_USER=all, and HOSTS in the lsb.resources file).
         Suspended jobs are ignored when this keyword is used.
         When preemptive scheduling is enabled, suspended jobs
         never count against the total job slot limit for
         individual users.
.sp 2
\fBHOST_JLU\fR
.br
         Counts only running jobs when evaluating if a user or
         user group is approaching its per-host job slot limit
         (SLOTS and USERS in the lsb.resources file). Suspended
         jobs are ignored when this keyword is used.
.sp 2
\fBLEAST_RUN_TIME\fR
.br
         Preempts the job that has been running for the shortest
         time. Run time is wall-clock time, not normalized run
         time.
.sp 2
\fBMINI_JOB\fR
.br
         Optimizes the preemption of parallel jobs by preempting
         only enough parallel jobs to start the high-priority
         parallel job.
.sp 2
\fBOPTIMAL_MINI_JOB\fR
.br
         Optimizes preemption of parallel jobs by preempting only
         low-priority parallel jobs based on the least number of
         jobs that will be suspended to allow the high-priority
         parallel job to start.
.sp 2
         User limits and user group limits can interfere with
         preemption optimization of \fBOPTIMAL_MINI_JOB\fR. You
         should not configure \fBOPTIMAL_MINI_JOB\fR if you have
         user or user group limits configured.
.sp 2
         You should configure \fRPARALLEL_SCHED_BY_SLOT=Y\fR when
         using \fBOPTIMAL_MINI_JOB\fR.
.sp 2
\fBUSER_JLP\fR
.br
         Counts only running jobs when evaluating if a user is
         approaching their per-processor job slot limit
         (SLOTS_PER_PROCESSOR, USERS, and PER_HOST=all in the
         lsb.resources file). Suspended jobs are ignored when
         this keyword is used. Ignores suspended jobs when
         calculating the user-processor job slot limit for
         individual users. When preemptive scheduling is enabled,
         suspended jobs never count against the total job slot
         limit for individual users.
.SH Default

.sp 2
0 (The parameter is not defined.)
.sp 2
Both running and suspended jobs are included in job slot limit
calculations, except for job slots limits for hosts and
individual users where only running jobs are ever included.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPREEMPT_JOBTYPE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBPREEMPT_JOBTYPE=\fR[\fBEXCLUSIVE\fR] [\fBBACKFILL\fR]
.SH Description

.sp 2
If preemptive scheduling is enabled, this parameter enables
preemption of exclusive and backfill jobs.
.sp 2
Specify one or both of the following keywords. Separate keywords
with a space.
.sp 2
\fBEXCLUSIVE\fR
.br
         Enables preemption of and preemption by exclusive jobs.
         \fBLSB_DISABLE_LIMLOCK_EXCL=Y\fR in lsf.conf must also
         be defined.
.sp 2
\fBBACKFILL\fR
.br
         Enables preemption of backfill jobs. Jobs from higher
         priority queues can preempt jobs from backfill queues
         that are either backfilling reserved job slots or
         running as normal jobs.
.sp 2
\fBAFFINITY\fR
.br
         Enables affinity resource preemption. Affinity resources
         (thread, core, socket, and NUMA) held by a suspended job
         can be used by a pending job through queue-based
         preemption, or through LSF License Scheduler preemption.
.SH Default

.sp 2
Not defined. Exclusive and backfill jobs are only preempted if
the exclusive low priority job is running on a different host
than the one used by the preemptive high priority job.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPREEMPTABLE_RESOURCES\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBPREEMPTABLE_RESOURCES=\fR \fRres1 [res2] [res3] ....\fR
.SH Description

.sp 2
Enables preemption for resources (in addition to slots) when
preemptive scheduling is enabled (has no effect if queue
preemption is not enabled) and specifies the resources that will
be preemptable. Specify shared resources (static or dynamic) that
are numeric, decreasing, and releasable. One of the resources can
be built-in resource mem, meaning that \fRres1\fR is also option
if memory comes later in the list.
.sp 2
The default preemption action is the suspend the job. To force a
job to release resources instead of suspending them, set
\fRTERMINATE_WHEN=PREEMPT\fR in lsb.queues, or set
\fBJOB_CONTROLS\fR in lsb.queues and specify brequeue as the
SUSPEND action. Some applications will release resources when
sent the SIGTSTP signal. Use \fBJOB_CONTROLS\fR to send this
signal to suspend the job.
.sp 2
To enable memory preemption, include \fRmem\fR in the
\fBPREEMPTABLE_RESOURCES\fR list in lsb.params.
.sp 2
When preempting a job for memory, LSF does not free the memory
occupied by the job. Rather, it suspends the job and dispatches
another job to the host. It relies on the operating system to
swap out the pages of the stopped job as memory of the running
job grows.
.SH Default

.sp 2
Not defined (if preemptive scheduling is configured, LSF preempts
on job slots only)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPREEMPTION_WAIT_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPREEMPTION_WAIT_TIME=\fR\fIseconds \fR
.SH Description

.sp 2
You must also specify \fBPREEMPTABLE_RESOURCES\fR in lsb.params.
.sp 2
The amount of time LSF waits, after preempting jobs, for
preemption resources to become available. Specify at least 300
seconds.
.sp 2
If LSF does not get the resources after this time, LSF might
preempt more jobs.
.SH Default

.sp 2
300 (seconds)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPREEXEC_EXCLUDE_HOST_EXIT_VALUES\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRPREEXEC_EXCLUDE_HOST_EXIT_VALUES=\fR\fRall\fR
[\fI~exit_value\fR] | \fIexit_value\fR [\fIexit_value\fR] [...]
.SH Description

.sp 2
Specify one or more values (between 1 and 255, but not 99) that
corresponds to the exit code your pre-execution scripts exits
with in the case of failure. LSF excludes any hosts that attempt
to run the pre-exec script and exit with the value specified in
\fBPREEXEC_EXCLUDE_HOST_EXIT_VALUES\fR.
.sp 2
The exclusion list exists for this job until the mbatchd
restarts.
.sp 2
Specify more than one value by separating them with a space. 99
is a reserved value. For example,
\fRPREEXEC_EXCLUDE_HOST_EXIT_VALUES=1 14 19 20 21\fR.
.sp 2
Exclude values using a "~": PREEXEC_EXCLUDE_HOST_EXIT_VALUES=all
~40
.sp 2
In the case of failures that could be avoided by retrying on the
same host, add the retry process to the pre-exec script.
.sp 2
Use in combination with \fBMAX_PREEXEC_RETRY\fR in lsb.params to
limit the total number of hosts that are tried. In a multicluster
environment, use in combination with
\fBLOCAL_MAX_PREEXEC_RETRY\fR and \fBREMOTE_MAX_PREEXEC_RETRY\fR.
.SH Default

.sp 2
None.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBPRIVILEGED_USER_FORCE_BKILL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBPRIVILEGED_USER_FORCE_BKILL=y\fR | \fBY\fR
.SH Description

.sp 2
If Y, only root or the LSF administrator can successfully run
bkill -r. For any other users, -r is ignored. If not defined, any
user can run bkill -r.
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRC_MAX_REQUESTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRC_MAX_REQUESTS=\fR\fIinteger\fR
.SH Description

.sp 2
For LSF resource connector. Specifies the maximum number of new
instances that can be requested through the resource connector
during demand evaluations. Use this parameter to control the
speed of cluster growth in the cluster.
.SH Default

.sp 2
300
.SH See also

.sp 2
\fBLSB_RC_UPDATE_INTERVAL\fR in the lsf.conf file, which controls
the minimum interval between two demand evaluations.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRELAX_JOB_DISPATCH_ORDER\fR
.ce 0

.sp 2
Allows LSF to deviate from standard job prioritization policies
to improve cluster utilization.
.sp 2

.SH Syntax

.sp 2
\fRRELAX_JOB_DISPATCH_ORDER=Y\fR | \fRy\fR | \fRN\fR | \fRn\fR
.sp 2
\fRRELAX_JOB_DISPATCH_ORDER=\fR[\fRALLOC_REUSE_DURATION[\fR[\fImin\fR]
\fImax\fR\fR]\fR] [\fRSHARE[\fR[\fRuser\fR] [\fRgroup\fR]
[\fRproject\fR]\fR]\fR]
.SH Description

.sp 2
When this parameter is enabled, LSF allows multiple jobs with
common resource requirements to run consecutively on the same
allocation. Whenever a job finishes, LSF attempts to quickly
replace it with a pending job that has the same resource
requirements. To ensure that limits are not violated, LSF selects
pending jobs that belong to the same user and have other
attributes in common.
.sp 2
Since LSF bypasses most of the standard scheduling logic between
jobs, reusing resource allocation can help improve cluster
utilization. This improvement is most evident in clusters with
several shorter jobs (that is, jobs that run from a few seconds
to several minutes).
.sp 2
To ensure that the standard job prioritization policies are
approximated, there is a limit on the length of time that each
allocation is reusable. LSF automatically sets this time limit to
achieve a high level of resource utilization. By default, this
reuse time cannot exceed 30 minutes. If you specify a maximum
reuse time and an optional minimum reuse time (by using
\fBALLOC_REUSE_DURATION[]\fR), LSF adjusts the time limit within
this specified range to achieve the highest level of resource
utilization.
.sp 2
When jobs from job arrays reuse allocations, or jobs are shorter
than the \fBALLOC_REUSE_DURATION[]\fR values, the dispatch order
of these jobs may change. This is because jobs are chosen for
allocation reuse based on submission time instead of other
factors.
.sp 2
Advance reservations are not considered when reusing the job
allocation. A job that is placed on a host with advance
reservations enabled cannot have its allocation reused. If an
advance reservation is created on a host after the job allocation
is already made, the allocation can still be reused until the
reuse duration is expired or the job is suspended by the advance
reservation policy.
.sp 2
Use the \fBSHARE[]\fR keyword to further relax the constraints of
what types of pending jobs can reuse the resource allocation of a
finished job. This allows more jobs to reuse the resource
allocation, but might result in resource limits and policies
being temporarily violated because these limits and policies are
relaxed. The \fBSHARE[]\fR keyword specifies constraints that the
mbatchd daemon no longer has to apply when determining which
pending jobs can reuse the resource allocation of a finished job.
If a job is finished and LSF does not find any pending jobs with
the same user or other attributes in common, LSF considers the
specifications in the \fBSHARE[]\fR keyword. Specify one or more
of the following keywords within \fBSHARE[]\fR for LSF to also
consider the following pending jobs:
.sp 2
\fBuser\fR
.br
         Pending jobs that do not have the same job owner as the
         finished job.
.sp 2
\fBgroup\fR
.br
         Pending jobs that are not associated with the same
         fairshare group (bsub -G command option) as the finished
         job.
.sp 2
\fBproject\fR
.br
         Pending jobs that are not assigned to the same project
         (bsub -P command option) as the finished job.
.sp 2
If using the LSF multicluster capability, \fBSHARE[]\fR applies
only to the job forward mode.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Examples

.sp 2
*  
   RELAX_JOB_DISPATCH_ORDER=Y
.br

.sp 2
   The resource allocation of a finished job can be reused from 0
   to 30 minutes.
.sp 2
*  
   RELAX_JOB_DISPATCH_ORDER=ALLOC_REUSE_DURATION[45]
.sp 2
   The resource allocation of a finished job can be reused from 0
   to 45 minutes.
.sp 2
*  
   RELAX_JOB_DISPATCH_ORDER=ALLOC_REUSE_DURATION[5 45]
.sp 2
   The resource allocation of a finished job can be reused from 5
   to 45 minutes.
.sp 2
*  
   RELAX_JOB_DISPATCH_ORDER=SHARE[user]
.sp 2
   The resource allocation of a finished job can be reused from 0
   to 30 minutes. If there are no pending jobs with the same
   common attributes, pending jobs that belong to different users
   can also reuse the resource allocation.
.sp 2
*  
   RELAX_JOB_DISPATCH_ORDER=SHARE[user group]
.sp 2
   The resource allocation of a finished job can be reused from 0
   to 30 minutes. If there are no pending jobs with the same
   common attributes, pending jobs that belong to different users
   and are associated with different fairshare groups can also
   reuse the resource allocation.
.sp 2
*  
   RELAX_JOB_DISPATCH_ORDER=ALLOC_REUSE_DURATION[45] SHARE[user group]
.sp 2
   The resource allocation of a finished job can be reused from 0
   to 45 minutes. If there are no pending jobs with the same
   common attributes, pending jobs that belong to different users
   and are associated with different fairshare groups can also
   reuse the resource allocation.
.SH Default

.sp 2
Set to Y at time of installation. Otherwise, N.
.sp 2
If set to Y, the \fBALLOC_REUSE_DURATION[]\fR value is between 0
and 30 minutes and the \fBSHARE[]\fR value is not defined.
.sp 2
\fBNote: \fRA setting of N gives the same behavior seen in LSF,
Version 9, and earlier. This behavior changed with LSF, Version
10.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBREMOTE_MAX_PREEXEC_RETRY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRREMOTE_MAX_PREEXEC_RETRY=\fR\fIinteger\fR
.SH Description

.sp 2
The maximum number of times to attempt the pre-execution command
of a job from the remote cluster.
.SH Valid values

.sp 2
0 < \fBREMOTE_MAX_PREEXEC_RETRY\fR < 2147483647
.SH Default

.sp 2
5
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRESCHED_UPON_CSM_SETUP_ERROR\fR
.ce 0

.sp 2
Enables LSF to reschedule stage-in or non-transfer jobs that fail
during CSM setup if they fail with the specified CSM API error
codes.
.sp 2
\fRRESCHED_UPON_CSM_SETUP_ERROR=\fR\fIerr_codeA\fR
[\fIerr_codeB\fR [\fIerr_codeC\fR] ...]
[\fIerr_codeD\fR\fR-\fR\fIerr_codeE\fR
[\fIerr_codeF\fR\fR-\fR\fIerr_codeG\fR] ...]
[\fR~\fR\fIerr_codeH\fR [\fR~\fR\fIerr_codeI\fR] ...]
[\fR~\fR\fIerr_codeJ\fR\fR-\fR\fIerr_codeK\fR
[\fR~\fR\fIerr_codeL\fR\fR-\fR\fIerr_codeM\fR] ...]
.SH Description

.sp 2
This option is for LSF jobs that are submitted with the IBM
Cluster Systems Manager (CSM) integration package.
.sp 2
If CSM setup fails with one of the specified CSM API error codes,
LSF repeats the attempt to schedule or dispatch the job. This
parameter affects only stage-in or non-transfer jobs.
.sp 2
Specify a space-separated list of CSM API error code entries.
Each error code entry can be one of the following:
.sp 2
*  An individual error code to reschedule a job. For example,
   \fR5\fR specifies that CSM API error code 5 jobs are
   rescheduled.
.sp 2
*  A range of error codes to reschedule a job, using a hyphen
   (\fR-\fR) with no space between two numbers. For example,
   \fR10-20\fR specifies that jobs with a range of CSM API error
   codes between 10 and 20 are rescheduled.
.sp 2
*  A tilde (\fR~\fR) with no space before an individual error
   code to explicitly exclude an error code from being
   rescheduled and instead use the default LSF behavior. For
   example, \fR~12\fR indicates that CSM API error code 12 jobs
   use the default LSF behavior even if it is specified within an
   allowed range.
.sp 2
*  A tilde (\fR~\fR) with no space before a range of error codes
   to explicitly exclude a range of error codes from being
   rescheduled and instead use the default LSF behavior. For
   example, \fR~15-19\fR indicates that jobs within a range of
   CSM API error codes 15 and 19 jobs use the default LSF
   behavior even if these codes are specified within an allowed
   range.
.sp 2
LSF processes all error code entries and merges them together.
For example,
.sp 2
RESCHED_UPON_CSM_SETUP_ERROR=5 6 10-20 25-27 ~12 ~15-19
.sp 2
This specifies that LSF reschedules jobs with CSM API error codes
5, 6, 10, 11, 13, 14, 20, 25, 26, and 27. The merged
configuration value might not be the same as the specified value
for this parameter. If you specified duplicate or redundant
values, the bparams -a or -l output does not show the duplicate
or redundant values for the \fBRESCHED_UPON_CSM_SETUP_ERROR\fR
parameter. If you specified multiple numbers that form a range
(such as \fR1 2 3 4\fR), the bparams -a or -l output shows a
range (such as \fR1-4\fR) instead of the individual numbers.
.sp 2
A stage-in job that fails during setup with one of the specified
CSM API error codes moves to the \fBJOB_STAT_EXIT\fR state with
the reason \fBEXIT_CSM_ALLOC\fR, and LSF reschedules the
corresponding user\(aqs job.
.sp 2
A non-transfer job (that is, a job that is not a stage-in or
stage-out job) that fails during setup with one of the specified
CSM API error codes moves to the \fBJOB_STAT_PEND\fR state with
the reason \fBPEND_CSM_API_BAD_NODE\fR if the CSM subsystem was
able to provide a bad node list, or \fBPEND_CSM_PREJOB_FAIL\fR
otherwise.
.sp 2
If advance priority scheduling (APS) is enabled, a rescheduled
job maintains its original APS value. Other jobs are not affected
by this parameter and are subject to normal LSF behavior.
.sp 2
\fBNote: \fRWhen the CSM subsystem sets a node as
\fBOUT_OF_SERVICE\fR, there is a short delay (of several seconds)
before LSF is aware of the node\(aqs new state. During this period
of time, LSF might select the node for a job allocation. Jobs
that are allocated to this node will fail.
.SH Default

.sp 2
Not defined.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRESIZABLE_JOBS\fR
.ce 0

.sp 2
Allows jobs to be resized or to be autoresizable.
.sp 2

.SH Syntax

.sp 2
\fBRESIZABLE_JOBS = [Y|N|auto]\fR
.SH Description

.sp 2
\fRN|n\fR: The resizable job feature is disabled. Under this
setting, all jobs are not resizable. All bresize and bsub -ar
commands will be rejected with a proper error message.
.sp 2
\fRY|y\fR: Resize is enabled and all jobs are resizable by
default. Under this setting, users can run bresize commands to
cancel pending resource allocation requests for the job or
release resources from an existing job allocation, or use bsub to
submit an autoresizable job.
.sp 2
\fRauto\fR: All jobs will be autoresizable.
.sp 2
Resizable jobs must be submitted defining \fBRESIZABLE_JOBS\fR as
either auto or Y. If \fBRESIZABLE_JOBS=auto\fR, but the
administrator changes it to N and reconfigures LSF, jobs without
job-level auto resizable attribute become not autoresizable. For
running jobs that are in the middle of notification stage, LSF
lets current notification complete and stops scheduling. Changing
\fBRESIZABLE_JOBS\fR configuration does not affect jobs with
job-level autoresizable attribute. (This behavior is same as
exclusive job, bsub -x and \fBEXCLUSIVE\fR parameter in queue
level.)
.sp 2
Resizable jobs can have alternative and compound resource
requirements. When using bresize release to release slots from
compound resource requirements, you can only release slots
represented by the last term of the compound resource
requirement. To release slots in earlier terms, run bresize
release repeatedly to release slots in subsequent last terms.
.SH Default

.sp 2
If the parameter is undefined, the default value is N.
.SH See also

.sp 2
\fBRESIZABLE_JOBS\fR in lsb.applications
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRESOURCE_RESERVE_PER_TASK\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRESOURCE_RESERVE_PER_TASK=Y\fR| \fRy|N|n\fR
.sp 2
If set to Y, mbatchd reserves resources based on job tasks
instead of per-host.
.sp 2
By default, mbatchd only reserves resources for parallel jobs on
a per-host basis. For example, by default, the command:
.sp 2
bsub -n 4 -R "rusage[mem=500]" -q reservation my_job
.br

.sp 2
requires the job to reserve 500 MB on each host where the job
runs.
.sp 2
Some parallel jobs need to reserve resources based on job tasks,
rather than by host. In this example, if per-task reservation is
enabled by \fBRESOURCE_RESERVE_PER_TASK\fR, the job \fRmy_job\fR
must reserve 500 MB of memory for each job task (4*500=2 GB) on
the host in order to run.
.sp 2
If \fBRESOURCE_RESERVE_PER_TASK\fR is set, the following command
reserves the resource \fRmy_resource\fR for all 4 job tasks
instead of only 1 on the host where the job runs:
.sp 2
bsub -n 4 -R "my_resource > 0 rusage[my_resource=1]" myjob
.br

.SH Default

.sp 2
N (Not defined)
.sp 2
When a shared resource is set to the default behavior, the job
reserves the resource per \fIjob\fR. A shared resource can be
defined as a License Scheduler resource or a LSF resource.
.sp 2
When a host-based resource is set to the default behavior, the
job reserves the resources per \fIhost\fR.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBENABLE_JOB_INFO_BY_ADMIN_ROLE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRENABLE_JOB_INFO_BY_ADMIN_ROLE = [usergroup] [queue]
[cluster]\fR
.SH Description

.sp 2
By default, an administrator’s access to job details is
determined by the setting of \fBSECURE_JOB_INFO_LEVEL\fR, the
same as a regular user. The parameter
\fBENABLE_JOB_INFO_BY_ADMIN_ROLE\fR in lsb.params allows you to
enable the user group, queue, and cluster administrators the
right to access job detail information for jobs in the user
group, queue, and clusters they manage, even when the
administrator has no right based on the configuration of
\fBSECURE_JOB_INFO_LEVEL\fR.
.sp 2
You may define one or more of the values, \fRusergroup\fR,
\fRqueue\fR, or \fRcluster\fR.
.SH Default

.sp 2
NULL (Not defined)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRUN_JOB_FACTOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRUN_JOB_FACTOR=\fR\fInumber\fR
.SH Description

.sp 2
Used only with fairshare scheduling. Job slots weighting factor.
.sp 2
In the calculation of a user’s dynamic share priority, this
factor determines the relative importance of the number of job
slots reserved and in use by a user.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
3.0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRUN_TIME_DECAY\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRUN_TIME_DECAY=Y | y | N | n\fR
.SH Description

.sp 2
Used only with fairshare scheduling. Enables decay for run time
at the same rate as the decay set by HIST_HOURS for cumulative
CPU time and historical run time.
.sp 2
In the calculation of a user’s dynamic share priority, this
factor determines whether run time is decayed.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Restrictions

.sp 2
Running badmin reconfig or restarting mbatchd during a job\(aqs run
time results in the decayed run time being recalculated.
.sp 2
When a suspended job using run time decay is resumed, the decay
time is based on the elapsed time.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBRUN_TIME_FACTOR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRRUN_TIME_FACTOR=\fR\fInumber\fR
.SH Description

.sp 2
Used only with fairshare scheduling. Run time weighting factor.
.sp 2
In the calculation of a user’s dynamic share priority, this
factor determines the relative importance of the total run time
of a user’s running jobs.
.sp 2
This parameter can also be set for an individual queue in
lsb.queues. If defined, the queue value takes precedence.
.SH Default

.sp 2
0.7
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSAME_JOB_AFFINITY\fR
.ce 0

.sp 2
Enables users to specify affinity preferences for jobs to run on
the same host or compute unit as another job.
.sp 2

.SH Syntax

.sp 2
\fBSAME_JOB_AFFINITY=Y\fR | \fBy\fR | \fBN\fR | \fBn\fR
.SH Description

.sp 2
If enabled, users can use the \fBsamehost\fR and \fBsamecu\fR
keywords with the bsub -jobaff command option when specifying
affinity preferences for jobs to run on the same host or compute
unit as another job.
.sp 2
\fBNote: \fRIf you submit a job with a \fBsamehost\fR or
\fBsamecu\fR affinity for a job that is finished and there are no
other unfinished jobs that reference this finished job at
submission time, LSF cleans the finished job\(aqs allocation host
information from the job scheduler. With no host allocation
information for the finished job, your job submission with
mandatory \fBsamehost\fR or \fBsamecu\fR requirements would pend
indefinitely, and if your job submission has a preferred
\fBsamehost\fR or \fBsamecu\fR requirement, the preferred
requirement is ignored.
.SH Default

.sp 2
\fRN\fR. Users cannot use the \fBsamehost\fR or \fBsamecu\fR
keywords with the bsub -jobaff command option.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSBD_SLEEP_TIME\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSBD_SLEEP_TIME=\fR\fIseconds\fR
.SH Description

.sp 2
The interval at which LSF checks the load conditions of each
host, to decide whether jobs on the host must be suspended or
resumed.
.sp 2
The job-level resource usage information is updated at a maximum
frequency of every \fBSBD_SLEEP_TIME\fR seconds.
.sp 2
The update is done only if the value for the CPU time, resident
memory usage, or virtual memory usage has changed by more than 10
percent from the previous update or if a new process or process
group has been created.
.sp 2
The LIM marks the host SBDDOWN if it does not receive the
heartbeat in 1 minute. Therefore, setting SBD_SLEEP_TIME greater
than 60 seconds causes the host to be frequently marked SBDDOWN
and triggers mbatchd probe, thus slowing performance.
.sp 2
After modifying this parameter, use bctrld restart sbd -f all to
restart \fRsbatchds\fR and let the modified value take effect.
.SH Default

.sp 2
30 seconds.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSCHED_METRIC_ENABLE\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSCHED_METRIC_ENABLE=Y\fR | \fRN\fR
.SH Description

.sp 2
Enable scheduler performance metric collection.
.sp 2
Use badmin perfmon stop and badmin perfmon start to dynamically
control performance metric collection.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSCHED_METRIC_SAMPLE_PERIOD\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSCHED_METRIC_SAMPLE_PERIOD=\fR\fIseconds\fR
.SH Description

.sp 2
Set a default performance metric sampling period in seconds.
.sp 2
Cannot be less than 60 seconds.
.sp 2
Use badmin perfmon setperiod to dynamically change performance
metric sampling period.
.SH Default

.sp 2
60 seconds
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSCHED_PER_JOB_SORT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSCHED_PER_JOB_SORT=\fR\fRY/N\fR
.SH Description

.sp 2
Enable this parameter to use the per-job sorting feature in
scheduler. This feature allows LSF to schedule jobs accurately in
one scheduling cycle by adding extra load to scheduler.
.sp 2
For example, jobs 1 to 3 are submitted to LSF as follows:
.sp 2
*  
   bsub -R "order[slots]" job1
.sp 2
*  
   bsub -R "order[slots]" job2
.sp 2
*  
   bsub -R "order[slots]" job3
.sp 2
Each job was requested to be dispatched to the host with the most
unused slots. The request is not completely satisfied in one
scheduling cycle if per-job sorting is disabled. For example:
.sp 2
*  
   host1 3 slots
.sp 2
*  
   host2 3 slots
.sp 2
*  
   host3 3 slots
.sp 2
Jobs 1 to 3 are dispatched to the same host (for example, host1)
in one scheduling cycle because the hosts are only sorted once in
one scheduling cycle. If the per-job sorting feature is enabled,
the candidate hosts are sorted again before the job is actually
scheduled. Therefore, these three jobs are dispatched to each
host separately. This result is exactly what you want but the
cost is that scheduler performance maybe significantly lower. For
example, if there are 5000 hosts in the cluster and the
management host is on the machine with 24GB memory and 2 physical
CPUs with 2 cores with 6 threads, each job with \fR!\fR in the
\fRORDER[]\fR section consumes about an extra 10ms of time in one
scheduling cycle. If there are many jobs with\fR!\fR in the
\fRORDER[]\fR section that are controlled by
\fBLSB_MAX_JOB_DISPATCH_PER_SESSION\fR, then a lot of extra time
is consumed in one scheduling cycle.
.sp 2
To get the accurate schedule result without impacting scheduler
performance, you can set \fBJOB_ACCEPT_INTERVAL\fR as a non-zero
value. This is because the hosts do not need to be sorted again
by the per-job sorting feature.
.SH Default

.sp 2
N
.SH See also

.sp 2
\fBJOB_ACCEPT_INTERVAL\fR in lsb.params and lsb.queues.
.sp 2
\fBLSB_MAX_JOB_DISPATCH_PER_SESSION\fR in lsf.conf.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSCHEDULER_THREADS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSCHEDULER_THREADS=integer\fR
.SH Description

.sp 2
Set the number of threads the scheduler uses to evaluate resource
requirements.
.sp 2
Multithreaded resource evaluation is useful for large scale
clusters with large numbers of hosts. The idea is to do resource
evaluation for hosts concurrently. For example, there are 6,000
hosts in a cluster, so the scheduler may create six threads to do
the evaluation concurrently. Each thread is in charge of 1,000
hosts.
.sp 2
To set an effective value for this parameter, consider the number
of available CPUs on the management host, the number of hosts in
the cluster, and the scheduling performance metrics. Set the
number of threads between 1 and the number of cores in the
management host. A value of 0 means that the scheduler does not
create any threads to evaluate resource requirements.
.SH Default

.sp 2
0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSECURE_INFODIR_USER_ACCESS\fR
.ce 0

.sp 2
Prevents users from viewing detailed information for jobs that
belong to other users.
.sp 2

.SH Syntax

.sp 2
\fRSECURE_INFODIR_USER_ACCESS=Y\fR | \fRN\fR | \fRG\fR
.SH Description

.sp 2
*  By default, (\fBSECURE_INFODIR_USER_ACCESS=N\fR or is not
   defined), any user can view detailed information for jobs that
   belong to other users in the lsb.event and lsb.acct files by
   using the bhist or bacct commands. Specify \fRY\fR or \fRG\fR
   to restrict this access so that regular and administator users
   only see their own job information.
.sp 2
*  Specify \fRY\fR to prevent users (including all users except
   the primary administrator) from accessing other users\(aq job
   information using the bhist or bacct commands.
.sp 2
   You can control the granularity of the bjobs command to
   specify the information that other users can see by specifying
   a value for the \fBSECURE_JOB_INFO_LEVEL\fR parameter in the
   lsb.params file.
.sp 2
   A regular user does not have rights to call the API to get
   data under LSB_SHAREDIR/cluster/logdir, which is readable only
   by the primary administrator. Regular and administrator users
   do not have rights to run bhist -t. Only the primary
   administrator has rights to run bhist -t.
.sp 2
*  Specify \fRG\fR to prevent users (including all users except
   the primary administrator) from accessing other users\(aq job
   information.
.sp 2
   You can control the granularity of the information that the
   bhist and bacct commands display by specifying the
   \fBSECURE_JOB_INFO_LEVEL\fR and
   \fBENABLE_JOB_INFO_BY_ADMIN_ROLE\fR parameters in the
   lsb.params file.
.sp 2
   A regular user does not have rights to call the API to get
   data under LSB_SHAREDIR/cluster/logdir, which is readable only
   by the primary administrator. Regular and administrator users
   do not have rights to run bhist -t. Only the primary
   administrator has rights to run bhist -t.
.sp 2
The LSF primary administrator can always view job information for
all users in the lsb.event and lsb.acct files, no matter what the
setting.
.sp 2
After enabling this feature by setting
\fBSECURE_INFODIR_USER_ACCESS\fR to \fRY\fR or \fRG\fR, you must
setuid of the LSF primary administrator for bhist and bacct
binary under LSF_BINDIR. bhist and bacct will call mbatchd to
check whether the parameter is set or not when you have setuid
for bhist and bacct.
.sp 2
To disable this feature, set \fBSECURE_INFODIR_USER_ACCESS\fR to
\fRN\fR, then remove the setuid for bhist and bacct binary under
LSF_BINDIR to prevent bhist and bacct from calling mbatchd. When
disabled, the permission to LSB_SHAREDIR/cluster/logdir returns
to normal after you reconfigure mbatchd (by running badmin
reconfig).
.sp 2
\fBNote: \fR
.sp 2
*  This feature is only supported when LSF is installed on a file
   system that supports the setuid bit for files. Therefore, this
   feature does not work on Windows platforms.
.sp 2
*  If \fBLSB_LOCALDIR\fR is enabled to duplicate
   \fBLSB_SHAREDIR\fR, \fBLSB_LOCALDIR\fR is also readable only
   by the primary administrator after setting
   \fBSECURE_INFODIR_USER_ACCESS=Y\fR.
.SH Default

.sp 2
N
.sp 2
Parent topic: lsb.params
.sp 2
\fBRelated reference\fR
.br
\fBSECURE_JOB_INFO_LEVEL\fR parameter in the lsb.params file.

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSECURE_JOB_INFO_LEVEL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSECURE_JOB_INFO_LEVEL=0\fR | \fR1\fR | \fR2\fR | \fR3\fR |
\fR4\fR | \fR5\fR
.SH Description

.sp 2
Defines an access control level for all users. Specify a level to
control which jobs users and administrators (except the primary
administrator) can see.
.sp 2
For LSF users, there are three types of jobs:
.sp 2
*  The user’s own jobs.
.sp 2
*  Jobs that belong to other users in the same user group.
.sp 2
*  Jobs that do not belong to users in the same user group.
.sp 2
There are two kinds of job information which will be viewed by
users:
.sp 2
*  Detailed information:
.sp 2
   Obtained from bjobs -l, bjobs -UF, bjobs -N, bjdepinfo, bread,
   and bstatus.
.sp 2
   If \fBSECURE_INFODIR_USER_ACCESS\fR is set to \fRG\fR, this is
   also obtained from bacct -l, bacct -UF, bhist -b, bhist -l,
   and bhist -UF.
.sp 2
*  Summary information:
.sp 2
   Obtained from bjobs with options other than -l, such as -aps,
   -fwd, -p, -ss, -sum, -W, -WF, -WP, and -WL.
.sp 2
   If \fBSECURE_INFODIR_USER_ACCESS\fR is set to \fRG\fR, this is
   also obtained from bacct with options other than -l and -UF
   (such as -d, -e, -q, and -w), and from bhist with options
   other than -b, -l, and -UF (such as -a, -b, and -d).
.sp 2
There are two kinds of user rights which will determine what kind
of information a user can view for a job:
.sp 2
*  Basic rights: User can see all summary information.
.sp 2
*  Detail rights: User can see all detail information.
.sp 2
When a user or admin enters one of the commands to see job
information (bjobs, bjdepinfo, bread, or bstatus), the
\fBSECURE_JOB_INFO_LEVEL\fR parameter controls whether they see:
.sp 2
*  Summary information for all jobs (level 5).
.sp 2
*  No information for any other jobs (level 4).
.sp 2
*  Summary information from jobs in the same user group (level
   3).
.sp 2
*  Detailed and summary information from jobs in the same user
   group (level 2).
.sp 2
*  Detailed and summary information from jobs in the same user
   group, and summary information from jobs outside their user
   group (level 1).
.sp 2
*  Detailed and summary information for all jobs (level 0).
.sp 2
Regardless of the setting, users can always see summary and
detailed information for their own jobs.
.sp 2
If \fBSECURE_INFODIR_USER_ACCESS\fR is set to \fRG\fR, the
\fBSECURE_JOB_INFO_LEVEL\fR parameter also controls whether they
see this information for the bacct and bhist commands.
.sp 2
\fBNote: \fR
.sp 2
*  If \fBSECURE_JOB_INFO_LEVEL\fR is set to a level greater than
   0, LSF checks if \fBSECURE_INFODIR_USER_ACCESS\fR is enabled
   (set to \fRY\fR or \fRG\fR). If it is not enabled, access to
   bjobs functions will be restricted, but access to bhist /
   bacct will be available.
.sp 2
*  When using the LSF multicluster capability, the
   \fBSECURE_JOB_INFO_LEVEL\fR definition still applies when a
   user attempts to view job information from a remote cluster
   through the bjobs -m remotecluster command. The security level
   configuration of a specified cluster will take effect.
.SH Interaction with bsub -G and bjobs -o

.sp 2
*  If a user submits a job using bsub -G, the job will be treated
   as a member of the -G specified user group (or default user
   group). For example: UserA belongs to user groups UG1 and UG2.
   UserA submits Job1 using bsub -G:
.sp 2
   bsub -G UG1
.sp 2
   UserA submits Job2 without using bsub -G. Job1 will be treated
   as belonging to UG1 only. Job2 will be treated as belonging to
   UG1 and UG2. The result is that members of UG1 can view both
   Job1 and Job2 details if they are given access rights to view
   jobs in the same user group. Members of UG2 can view only Job2
   if they are given access rights to view jobs in the same user
   group.
.sp 2
*  If a user has only basic rights, bjobs -o returns only values
   in the basic fields (others display as "-"): Jobid, stat,
   user, queue, job_name, proj_name, pids, from_host, exec_host,
   nexec_host, first_host, submit_time, start_time, time_left,
   finish_time, %complete, cpu_used, slots, mem, swap,
   forward_cluster, forward_time, run_time.
.SH Limitations

.sp 2
*  Administrators may not have permission to see a job, but they
   can still control a job (for example, kill a job) using the
   appropriate commands.
.sp 2
*  When job information security is enabled, pre-LSF 9.1 bjobs
   and bjdepinfo commands will be rejected no matter who issues
   them because mbatchd cannot get the command user name. A "No
   job found" message will be returned.
.sp 2
*  When job information security is enabled, users may have
   rights to only view job summary information and no rights to
   view job detail information. Therefore, a user would see job
   info when viewing summary info (using bjobs <jobid>), but an
   error (\fRjob <jobid> is not found\fR) will be returned when
   the user tries to view job detail information (using bjobs -l
   <jobid>).
.SH Default

.sp 2
0
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSIMPLIFIED_GUARANTEE\fR
.ce 0

.sp 2
Enables simplified scheduling algorithms for package and slot
pools that are used by jobs with guarantee policies.
.sp 2

.SH Syntax

.sp 2
\fBSIMPLIFIED_GUARANTEE=Y\fR | \fBy\fR | \fBN\fR | \fBn\fR
.SH Description

.sp 2
When scheduling jobs that use guarantee policies, setting this
parameter to \fRy\fR or \fRY\fR enables LSF to use a scheduling
algorithm for package and slot type guarantees that improve
resource utilization within the GSLA pool.
.sp 2
If this parameter is not enabled, the LSF administrator has to
choose a package size for a guarantee policy on a set of hosts.
This package size must be greater than or equal to the
requirements of a single job that is given a guarantee in a pool.
This means that jobs might remain pending even when there are
sufficient tasks and memory available on a host because owners
are allocated full multiples of the package size, which might be
larger than what is actually required for a job. Enabling the new
scheduling algorithm improves resource utilization by
partitioning the hosts within each guarantee package or task pool
into owner hosts (which are only for owners that have not
exceeded the guarantee) and shared hosts (which anyone can use)
based on configured guarantees.
.sp 2
Enabling this parameter also introduces the following
improvements for jobs that use guarantees:
.sp 2
*  LSF supports queue-based preemption in package and slot type
   guarantees. A higher priority job can preempt any job from the
   pool of shared hosts.
.sp 2
*  For host and license pools, LSF supports queue-based
   preemption for owner jobs. A higher priority owner job whose
   guarantee has not been fulfilled can preempt any loaned owner
   job in the pool of owner hosts.
.sp 2
*  The bresources command displays additional information for
   package and slot type guarantee policies.
.sp 2
*  The bjobs -l command marks jobs with resources that are
   borrowed from the GSLA pool and displays loaning usage
   information.
.SH Default

.sp 2
Set to \fRY\fR at time of installation. If otherwise undefined,
then \fRN\fR.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSLA_TIMER\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSLA_TIMER=\fR\fIseconds\fR
.SH Description

.sp 2
For EGO-enabled SLA scheduling. Controls how often each service
class is evaluated and a network message is sent to EGO
communicating host demand.
.SH Valid values

.sp 2
Positive integer between 2 and 21474847
.SH Default

.sp 2
0 (Not defined.)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSSCHED_ACCT_DIR\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSSCHED_ACCT_DIR=\fR\fIdirectory\fR
.SH Description

.sp 2
Used by IBM Platform Session Scheduler (ssched).
.sp 2
A universally accessible and writable directory that will store
Session Scheduler task accounting files. Each Session Scheduler
session (each ssched instance) creates one accounting file. Each
file contains one accounting entry for each task. The accounting
file is named \fIjob_ID\fR.ssched.acct. If no directory is
specified, accounting records are not written.
.SH Valid values

.sp 2
Specify any string up to 4096 characters long
.SH Default

.sp 2
Not defined. No task accounting file is created.
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSSCHED_MAX_RUNLIMIT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSSCHED_MAX_RUNLIMIT=\fR\fIseconds\fR
.SH Description

.sp 2
Used by IBM Platform Session Scheduler (ssched).
.sp 2
Maximum run time for a task. Users can override this value with a
lower value. Specify a value greater than or equal to zero (0).
.SH Recommended value

.sp 2
For very short-running tasks, a reasonable value is twice the
typical runtime. Because LSF does not release slots allocated to
the session until all tasks are completed and ssched exits, you
should avoid setting a large value for SSCHED_MAX_RUNLIMIT.
.SH Valid values

.sp 2
Specify a positive integer between 0 and 2147483645
.SH Default

.sp 2
600 seconds (10 minutes)
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSSCHED_MAX_TASKS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSSCHED_MAX_TASKS=\fR\fIinteger\fR
.SH Description

.sp 2
Used by Session Scheduler (ssched).
.sp 2
Maximum number of tasks that can be submitted to Session
Scheduler. Session Scheduler exits if this limit is reached.
Specify a value greater than or equal to zero (0).
.SH Valid values

.sp 2
Specify a positive integer between 0 and 2147483645
.SH Default

.sp 2
50000 tasks
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSSCHED_REQUEUE_LIMIT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSSCHED_REQUEUE_LIMIT=\fR\fIinteger\fR
.SH Description

.sp 2
Used by Session Scheduler (ssched).
.sp 2
Number of times Session Scheduler tries to requeue a task as a
result of the REQUEUE_EXIT_VALUES (ssched -Q) setting.
SSCHED_REQUEUE_LIMIT=0 means never requeue. Specify a value
greater than or equal to zero (0).
.SH Valid values

.sp 2
Specify a positive integer between 0 and 2147483645
.SH Default

.sp 2
3 requeue attempts
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSSCHED_RETRY_LIMIT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSSCHED_RETRY_LIMIT=\fR\fIinteger\fR
.SH Description

.sp 2
Used by Session Scheduler (ssched).
.sp 2
Number of times Session Scheduler tries to retry a task that
fails during dispatch or setup. SSCHED_RETRY_LIMIT=0 means never
retry. Specify a value greater than or equal to zero (0).
.SH Valid values

.sp 2
Specify a positive integer between 0 and 2147483645
.SH Default

.sp 2
3 retry attempts
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSSCHED_UPDATE_SUMMARY_BY_TASK\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSSCHED_UPDATE_SUMMARY_BY_TASK=\fR\fIinteger\fR
.SH Description

.sp 2
Used by Platform Session Scheduler (ssched).
.sp 2
Update the Session Scheduler task summary via bpost after the
specified number of tasks finish. Specify a value greater than or
equal to zero (0).
.sp 2
If both SSCHED_UPDATE_SUMMARY_INTERVAL and
SSCHED_UPDATE_SUMMARY_BY_TASK are set to zero (0), bpost is not
run.
.SH Valid values

.sp 2
Specify a positive integer between 0 and 2147483645
.SH Default

.sp 2
0
.SH See also

.sp 2
SSCHED_UPDATE_SUMMARY_INTERVAL
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSSCHED_UPDATE_SUMMARY_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSSCHED_UPDATE_SUMMARY_INTERVAL=\fR\fIseconds\fR
.SH Description

.sp 2
Used by Platform Session Scheduler (ssched).
.sp 2
Update the Session Scheduler task summary via bpost after the
specified number of seconds. Specify a value greater than or
equal to zero (0).
.sp 2
If both SSCHED_UPDATE_SUMMARY_INTERVAL and
SSCHED_UPDATE_SUMMARY_BY_TASK are set to zero (0), bpost is not
run.
.SH Valid values

.sp 2
Specify a positive integer between 0 and 2147483645
.SH Default

.sp 2
60 seconds
.SH See also

.sp 2
SSCHED_UPDATE_SUMMARY_BY_TASK
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSTRICT_UG_CONTROL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSTRICT_UG_CONTROL=Y\fR | \fRN\fR
.SH Description

.sp 2
When \fRSTRICT_UG_CONTROL=Y\fR is defined:
.sp 2
*  
   Jobs submitted with -G \fIusergroup\fR specified can only be
   controlled by the usergroup administrator of the specified
   user group.
.sp 2
*  
   user group administrators can be defined for user groups with
   all as a member
.sp 2
   After adding or changing \fBSTRICT_UG_CONTROL\fR in
   lsb.params, use badmin reconfig to reconfigure your cluster.
.SH Default

.sp 2
N (Not defined.)
.SH See also

.sp 2
\fBDEFAULT_USER_GROUP\fR, \fBENFORCE_ONE_UG_LIMIT\fR,
\fBENFORCE_UG_TREE\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSTRIPING_WITH_MINIMUM_NETWORK\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSTRIPING_WITH_MINIMUM_NETWORK=y\fR | \fRn\fR
.SH Description

.sp 2
\fBNote: \fRThis parameter is deprecated and might be removed in
a future version of LSF.
.sp 2
For LSF IBM Parallel Environment (PE) integration. Specifies
whether or not nodes which have more than half of their networks
in READY state are considered for PE jobs with type=sn_all
specified in the network resource requirements (in the bsub
-network option or the NETWORK_REQ parameter in lsb.queues or
lsb.applications). This makes certain that at least one network
is UP and in READY state between any two nodes assigned for the
job.
.sp 2
When set to y, the nodes which have more than half the minimum
number of networks in the READY state are considered for
\fBsn_all\fR jobs. If set to n, only nodes which have all
networks in the READY state are considered for \fBsn_all\fR jobs.
.sp 2
\fBNote: \fRLSF_PE_NETWORK_NUM must be defined with a value
greater than 0 for STRIPING_WITH_MINUMUM_NETWORK to take effect.
.SH Example

.sp 2
In a cluster with 8 networks, due to hardware failure, only 3
networks are ok on \fRhostA\fR, and 5 networks are ok on
\fRhostB\fR. If \fRSTRIPING_WITH_MINUMUM_NETWORK=n\fR, an
\fBsn_all\fR job cannot run on either \fRhostA\fR or \fRhostB\fR.
If \fRSTRIPING_WITH_MINUMUM_NETWORK=y\fR, an \fBsn_all\fR job can
run on \fRhostB\fR, but it cannot run on \fRhostA\fR.
.SH Default

.sp 2
n
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSUB_TRY_INTERVAL\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRSUB_TRY_INTERVAL=\fR\fIinteger\fR
.SH Description

.sp 2
The number of seconds for the requesting client to wait before
resubmitting a job. This is sent by mbatchd to the client.
.SH Default

.sp 2
60 seconds
.SH See also

.sp 2
\fBMAX_PEND_JOBS\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBSYSTEM_MAPPING_ACCOUNT\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fBSYSTEM_MAPPING_ACCOUNT\fR=user_account
.SH Description

.sp 2
Enables Windows workgroup account mapping, which allows LSF
administrators to map all Windows workgroup users to a single
Windows system account, eliminating the need to create multiple
users and passwords in LSF. Users can submit and run jobs using
their local user names and passwords, and LSF runs the jobs using
the mapped system account name and password. With Windows
workgroup account mapping, all users have the same permissions
because all users map to the same system account.
.sp 2
To specify the user account, include the domain name in uppercase
letters (\fIDOMAIN_NAME\fR\\fIuser_name\fR).
.sp 2
Define this parameter for LSF Windows Workgroup installations
only.
.SH Default

.sp 2
Not defined
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBTRACK_ELIGIBLE_PENDINFO\fR
.ce 0

.sp 2
Allows LSF to determine whether a pending job is eligible for
scheduling.
.sp 2

.SH Syntax

.sp 2
\fRTRACK_ELIGIBLE_PENDINFO=Y\fR | \fRy\fR| \fRN\fR | \fRn\fR
.SH Description

.sp 2
Set to \fRY\fR or \fRy\fR to allow LSF to determine whether a
pending job is eligible for scheduling, and to use eligible
pending time instead of total pending time to determine job
priority for the following time-based scheduling policies:
.sp 2
*  Automatic job priority escalation: Only increases job priority
   of jobs that have been in an eligible pending state instead of
   pending state for the specified period of time.
.sp 2
*  Absolute priority scheduling (APS): The JPRIORITY subfactor
   for the APS priority calculation uses the amount of time that
   the job spent in an eligible pending state instead of the
   total pending time.
.sp 2
A job that is in an eligible pending state is a job that LSF
would normally select for resource allocation, but is currently
pending because its priority is lower than other jobs. It is a
job that is eligible for scheduling and will be run if there are
sufficient resources to run it.
.sp 2
An ineligible pending job remains pending even if there are
enough resources to run it and is therefore ineligible for
scheduling. Reasons for a job to remain pending, and therefore be
in an ineligible pending state, include the following:
.sp 2
*  The job has a start time constraint (specified with the -b
   option)
.sp 2
*  The job is suspended while pending (in a PSUSP state).
.sp 2
*  The queue of the job is made inactive by the administrator or
   by its time window.
.sp 2
*  The job\(aqs dependency conditions are not satisfied.
.sp 2
*  The job cannot fit into the run time window (\fBRUN_WINDOW\fR)
.sp 2
*  Delayed scheduling is enabled for the job
   (\fBNEW_JOB_SCHED_DELAY\fR is greater than zero)
.sp 2
*  The job\(aqs queue or application profile does not exist.
.sp 2
A job that is not under any of the ineligible pending state
conditions is treated as an eligible pending job. In addition,
for chunk jobs in \fRWAIT\fR status, the time spent in the
\fRWAIT\fR status is counted as eligible pending time.
.sp 2
When mbatchd is restarted, some ineligible pending time may be
lost since it is recovered from the snapshot file, which is
dumped periodically at set intervals. The lost time period is
counted as eligible pending time under such conditions.
.sp 2
In multicluster job fowarding mode, if the
\fBMC_SORT_BY_SUBMIT_TIME\fR parameter is enabled, LSF counts all
pending time before the job is forwarded as eligible for a
forwarded job in the execution cluster.
.SH Default

.sp 2
Set to \fRY\fR at time of installation for the PARALLEL
configuration template. Otherwise, \fRN\fR (disabled).
.SH See also

.sp 2
\fBELIGIBLE_PENDINFO_SNAPSHOT_INTERVAL\fR
.sp 2
Parent topic: lsb.params

.ad l

.TH lsb.params 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBUSE_SUSP_SLOTS\fR
.ce 0

.sp 2

.SH Syntax

.sp 2
\fRUSE_SUSP_SLOTS=Y\fR | \fRN\fR
.SH Description

.sp 2
If \fRUSE_SUSP_SLOTS=Y\fR, allows jobs from a low priority queue
to use slots held by suspended jobs in a high priority queue,
which has a preemption relation with the low priority queue.
.sp 2
Set \fBUSE_SUSP_SLOTS=N\fR to prevent low priority jobs from
using slots held by suspended jobs in a high priority queue,
which has a preemption relation with the low priority queue.
.SH Default

.sp 2
Y
.sp 2
Parent topic: lsb.params
