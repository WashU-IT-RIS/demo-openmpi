
.ad l

.TH lsb.acct 5 "July 2021" "" ""
.ll 72

.ce 1000
\fBlsb.acct\fR
.ce 0

.sp 2
The lsb.acct file is the batch job log file of LSF.
.sp 2
The management batch daemon (mbatchd) generates a record for each
job completion or failure. The record is appended to the job log
file lsb.acct.
.sp 2
The file is located in the LSB_SHAREDIR/cluster_name/logdir
directory, where the LSB_SHAREDIR parameter must be defined in
lsf.conf and cluster_name is the name of the LSF cluster, as
returned by lsid.
.sp 2
The bacct command uses the current lsb.acct file for its output.
.SH lsb.acct structure

.sp 2
The job log file is an ASCII file with one record per line. The
fields of a record are separated by blanks. If the value of some
field is unavailable, a pair of double quotation marks ("") is
logged for character string, 0 for time and number, and -1 for
resource usage.
.SH Configuring automatic archiving

.sp 2
The following parameters in lsb.params affect how records are
logged to lsb.acct:
.sp 2
\fBACCT_ARCHIVE_AGE=\fIdays\fB\fR
.br
         Enables automatic archiving of LSF accounting log files,
         and specifies the archive interval. LSF archives the
         current log file if the length of time from its creation
         date exceeds the specified number of days.
.sp 2
         By default there is no limit to the age of lsb.acct.
.sp 2
\fBACCT_ARCHIVE_SIZE=\fIkilobytes\fB\fR
.br
         Enables automatic archiving of LSF accounting log files,
         and specifies the archive threshold. LSF archives the
         current log file if its size exceeds the specified
         number of kilobytes.
.sp 2
         By default, there is no limit to the size of lsb.acct.
.sp 2
\fBACCT_ARCHIVE_TIME=\fIhh\fB:\fImm\fB\fR
.br
         Enables automatic archiving of LSF accounting log file
         lsb.acct, and specifies the time of day to archive the
         current log file.
.sp 2
         By default, no time is set for archiving lsb.acct.
.sp 2
\fBMAX_ACCT_ARCHIVE_FILE=\fIinteger\fB\fR
.br
         Enables automatic deletion of archived LSF accounting
         log files and specifies the archive limit.
.sp 2
         By default, lsb.acct.\fIn\fR files are not automatically
         deleted.
.sp 2
Parent topic: Configuration files
.sp 2

.ce 1000
\fBRecords and fields\fR
.ce 0

.sp 2
The fields of a record are separated by blanks. The first string
of an event record indicates its type. The following types of
events are recorded:
.sp 2
*  JOB_FINISH
.sp 2
*  EVENT_ADRSV_FINISH
.sp 2
*  JOB_RESIZE
.sp 2

.ce 1000
\fBJOB_FINISH\fR
.ce 0

.sp 2
A job has finished.
.sp 2
If LSF_HPC_EXTENSIONS="SHORT_EVENTFILE" is specified in lsf.conf,
older daemons and commands (pre-LSF Version 6.0) cannot recognize
the lsb.acct file format.
.sp 2
The fields in order of occurrence are:
.sp 2
\fBEvent type (%s)\fR
.br
         Which is JOB_FINISH
.sp 2
\fBVersion Number (%s)\fR
.br
         Version number of the log file format
.sp 2
\fBEvent Time (%d)\fR
.br
         Time the event was logged (in seconds since the epoch)
.sp 2
\fBjobId (%d)\fR
.br
         ID for the job
.sp 2
\fBuserId (%d)\fR
.br
         UNIX user ID of the submitter
.sp 2
\fBoptions (%d)\fR
.br
         Bit flags for job processing
.sp 2
\fBnumProcessors (%d)\fR
.br
         Number of processors initially requested for execution
.sp 2
\fBsubmitTime (%d)\fR
.br
         Job submission time
.sp 2
\fBbeginTime (%d)\fR
.br
         Job start time – the job should be started at or after
         this time
.sp 2
\fBtermTime (%d)\fR
.br
         Job termination deadline – the job should be terminated
         by this time
.sp 2
\fBstartTime (%d)\fR
.br
         Job dispatch time – time job was dispatched for
         execution
.sp 2
\fBuserName (%s) \fR
.br
         User name of the submitter
.sp 2
\fBqueue (%s)\fR
.br
         Name of the job queue to which the job was submitted
.sp 2
\fBresReq (%s)\fR
.br
         Resource requirement specified by the user
.sp 2
\fBdependCond (%s)\fR
.br
         Job dependency condition specified by the user
.sp 2
\fBpreExecCmd (%s)\fR
.br
         Pre-execution command specified by the user
.sp 2
\fBfromHost (%s)\fR
.br
         Submission host name
.sp 2
\fBcwd (%s)\fR
.br
         Current working directory (up to 4094 characters for
         UNIX or 512 characters for Windows), or the current
         working directory specified by bsub -cwd if that command
         was used.
.sp 2
\fBinFile (%s)\fR
.br
         Input file name (up to 4094 characters for UNIX or 512
         characters for Windows)
.sp 2
\fBoutFile (%s)\fR
.br
         output file name (up to 4094 characters for UNIX or 512
         characters for Windows)
.sp 2
\fBerrFile (%s)\fR
.br
         Error output file name (up to 4094 characters for UNIX
         or 512 characters for Windows)
.sp 2
\fBjobFile (%s)\fR
.br
         Job script file name
.sp 2
\fBnumAskedHosts (%d)\fR
.br
         Number of host names to which job dispatching will be
         limited
.sp 2
\fBaskedHosts (%s)\fR
.br
         List of host names to which job dispatching will be
         limited (%s for each); nothing is logged to the record
         for this value if the last field value is 0. If there is
         more than one host name, then each additional host name
         will be returned in its own field
.sp 2
\fBnumExHosts (%d)\fR
.br
         Number of processors used for execution
.sp 2
         If LSF_HPC_EXTENSIONS="SHORT_EVENTFILE" is specified in
         lsf.conf, the value of this field is the number of hosts
         listed in the execHosts field.
.sp 2
         Logged value reflects the allocation at job finish time.
.sp 2
\fBexecHosts (%s)\fR
.br
         List of execution host names (%s for each); nothing is
         logged to the record for this value if the last field
         value is 0.
.sp 2
         If LSF_HPC_EXTENSIONS="SHORT_EVENTFILE" is specified in
         lsf.conf, the value of this field is logged in a
         shortened format.
.sp 2
         The logged value reflects the allocation at job finish
         time.
.sp 2
\fBjStatus (%d)\fR
.br
         Job status. The number 32 represents EXIT, 64 represents
         DONE
.sp 2
\fBhostFactor (%f)\fR
.br
         CPU factor of the first execution host.
.sp 2
\fBjobName (%s)\fR
.br
         Job name (up to 4094 characters).
.sp 2
\fBcommand (%s)\fR
.br
         Complete batch job command specified by the user (up to
         4094 characters for UNIX or 512 characters for Windows).
.sp 2
\fBlsfRusage\fR
.br
         The following fields contain resource usage information
         for the job (see getrusage(2)). If the value of some
         field is unavailable (due to job exit or the difference
         among the operating systems), -1 will be logged. Times
         are measured in seconds, and sizes are measured in KB.
.sp 2
         \fBru_utime (%f)\fR
.br
                  User time used
.sp 2
         \fBru_stime (%f)\fR
.br
                  System time used
.sp 2
         \fBru_maxrss (%f)\fR
.br
                  Maximum shared text size
.sp 2
         \fBru_ixrss (%f)\fR
.br
                  Integral of the shared text size over time (in
                  KB seconds)
.sp 2
         \fBru_ismrss (%f)\fR
.br
                  Integral of the shared memory size over time
                  (valid only on Ultrix)
.sp 2
         \fBru_idrss (%f)\fR
.br
                  Integral of the unshared data size over time
.sp 2
         \fBru_isrss (%f)\fR
.br
                  Integral of the unshared stack size over time
.sp 2
         \fBru_minflt (%f)\fR
.br
                  Number of page reclaims
.sp 2
         \fBru_majflt (%f)\fR
.br
                  Number of page faults
.sp 2
         \fBru_nswap (%f)\fR
.br
                  Number of times the process was swapped out
.sp 2
         \fBru_inblock (%f)\fR
.br
                  Number of block input operations
.sp 2
         \fBru_oublock (%f)\fR
.br
                  Number of block output operations
.sp 2
         \fBru_ioch (%f)\fR
.br
                  Number of characters read and written (valid
                  only on HP-UX)
.sp 2
         \fBru_msgsnd (%f)\fR
.br
                  Number of System V IPC messages sent
.sp 2
         \fBru_msgrcv (%f)\fR
.br
                  Number of messages received
.sp 2
         \fBru_nsignals (%f)\fR
.br
                  Number of signals received
.sp 2
         \fBru_nvcsw (%f)\fR
.br
                  Number of voluntary context switches
.sp 2
         \fBru_nivcsw (%f)\fR
.br
                  Number of involuntary context switches
.sp 2
         \fBru_exutime (%f)\fR
.br
                  Exact user time used (valid only on ConvexOS)
.sp 2
\fBmailUser (%s)\fR
.br
         Name of the user to whom job related mail was sent
.sp 2
\fBprojectName (%s)\fR
.br
         LSF project name (up to 59 characters)
.sp 2
\fBexitStatus (%d)\fR
.br
         UNIX exit status of the job
.sp 2
\fBmaxNumProcessors (%d)\fR
.br
         Maximum number of processors specified for the job
.sp 2
\fBloginShell (%s)\fR
.br
         Login shell used for the job
.sp 2
\fBtimeEvent (%s)\fR
.br
         Time event string for the job - IBM Spectrum LSF Process
         Manager only
.sp 2
\fBidx (%d)\fR
.br
         Job array index
.sp 2
\fBmaxRMem (%d)\fR
.br
         Maximum resident memory usage in KB of all processes in
         the job
.sp 2
\fBmaxRSwap (%d)\fR
.br
         Maximum virtual memory usage in KB of all processes in
         the job
.sp 2
\fBinFileSpool (%s)\fR
.br
         Spool input file (up to 4094 characters for UNIX or 512
         characters for Windows)
.sp 2
\fBcommandSpool (%s)\fR
.br
         Spool command file (up to 4094 characters for UNIX or
         512 characters for Windows)
.sp 2
\fBrsvId %s\fR
.br
         Advance reservation ID for a user group name less than
         120 characters long; for example, "\fRuser2#0\fR"
.sp 2
         If the advance reservation user group name is longer
         than 120 characters, the rsvId field output appears
         last.
.sp 2
\fBsla (%s)\fR
.br
         SLA service class name under which the job runs
.sp 2
\fBexceptMask (%d)\fR
.br
         Job exception handling
.sp 2
         Values:
.sp 2
         *  \fRJ_EXCEPT_OVERRUN 0x02\fR
.sp 2
         *  \fRJ_EXCEPT_UNDERUN 0x04\fR
.sp 2
         *  \fRJ_EXCEPT_IDLE 0x80\fR
.sp 2
\fBadditionalInfo (%s)\fR
.br
         Placement information of HPC jobs
.sp 2
\fBexitInfo (%d)\fR
.br
         Job termination reason, mapped to corresponding
         termination keyword displayed by bacct.
.sp 2
\fBwarningAction (%s)\fR
.br
         Job warning action
.sp 2
\fBwarningTimePeriod (%d)\fR
.br
         Job warning time period in seconds
.sp 2
\fBchargedSAAP (%s)\fR
.br
         SAAP charged to a job
.sp 2
\fBlicenseProject (%s)\fR
.br
         IBM Spectrum LSF License Scheduler project name
.sp 2
\fBapp (%s)\fR
.br
         Application profile name
.sp 2
\fBpostExecCmd (%s)\fR
.br
         Post-execution command to run on the execution host
         after the job finishes
.sp 2
\fBruntimeEstimation (%d)\fR
.br
         Estimated run time for the job, calculated as the CPU
         factor of the submission host multiplied by the runtime
         estimate (in seconds).
.sp 2
\fBjobGroupName (%s)\fR
.br
         Job group name
.sp 2
\fBrequeueEvalues (%s)\fR
.br
         Requeue exit value
.sp 2
\fBoptions2 (%d)\fR
.br
         Bit flags for job processing
.sp 2
\fBresizeNotifyCmd (%s)\fR
.br
         Resize notification command to be invoked on the first
         execution host upon a resize request.
.sp 2
\fBlastResizeTime (%d)\fR
.br
         Last resize time. The latest wall clock time when a job
         allocation is changed.
.sp 2
\fBrsvId %s\fR
.br
         Advance reservation ID for a user group name more than
         120 characters long.
.sp 2
         If the advance reservation user group name is longer
         than 120 characters, the rsvId field output appears
         last.
.sp 2
\fBjobDescription (%s)\fR
.br
         Job description (up to 4094 characters).
.sp 2
\fBsubmitEXT\fR
.br
         Submission extension field, reserved for internal use.
.sp 2
         \fBNum (%d)\fR
.br
                  Number of elements (key-value pairs) in the
                  structure.
.sp 2
         \fBkey (%s)\fR
.br
                  Reserved for internal use.
.sp 2
         \fBvalue (%s)\fR
.br
                  Reserved for internal use.
.sp 2
\fBnumHostRusage (%d)\fR
.br
         The number of host-based resource usage entries
         (\fIhostRusage\fR) that follow. Enabled by default.
.sp 2
\fBhostRusage\fR
.br
         The following fields contain host-based resource usage
         information for the job. To disable reporting of
         \fIhostRusage\fR set
         \fBLSF_HPC_EXTENSIONS=NO_HOST_RUSAGE\fR in lsf.conf.
.sp 2
         \fBhostname (%s)\fR
.br
                  Name of the host.
.sp 2
         \fBmem (%d)\fR
.br
                  Total resident memory usage of all processes in
                  the job running on this host.
.sp 2
         \fBswap (%d)\fR
.br
                  The total virtual memory usage of all processes
                  in the job running on this host.
.sp 2
         \fButime (%d)\fR
.br
                  User time used on this host.
.sp 2
         \fBstime (%d)\fR
.br
                  System time used on this host.
.sp 2
\fBoptions3 (%d)\fR
.br
         Bit flags for job processing
.sp 2
\fBrunLimit (%d)\fR
.br
         Job submission runtime limit
.sp 2
\fBavgMem (%d)\fR
.br
         Job average memory usage
.sp 2
\fBeffectiveResReq (%s)\fR
.br
         The runtime resource requirements used for the job.
.sp 2
\fBsrcCluster (%s)\fR
.br
         The name of the submission cluster
.sp 2
\fBsrcJobId (%d)\fR
.br
         The submission cluster job ID
.sp 2
\fBdstCluster (%s)\fR
.br
         The name of the execution cluster
.sp 2
\fBdstJobId (%d)\fR
.br
         The execution cluster job ID
.sp 2
\fBforwardTime (%d)\fR
.br
         The job forward time.
.sp 2
\fBflow_id (%d)\fR
.br
         Internal usage.
.sp 2
\fBacJobWaitTime (%d)\fR
.br
         Reserved for internal use.
.sp 2
\fBtotalProvisionTime (%d)\fR
.br
         Reserved for internal use.
.sp 2
\fBoutdir (%s)\fR
.br
         The output directory.
.sp 2
\fBrunTime (%d)\fR
.br
         Time in seconds that the job has been in the run state.
         runTime includes the totalProvisionTime.
.sp 2
\fBsubcwd (%d)\fR
.br
         The submission current working directory.
.sp 2
\fBnum_network (%d)\fR
.br
         The number of allocated networks.
.sp 2
\fBnetworkAlloc\fR
.br
         List of network allocation information. Nothing is
         logged to the record for this value if the last field
         value is 0.
.sp 2
         \fBnetworkID (%s)\fR
.br
                  Allocated networkID array.
.sp 2
         \fBnum_window (%d)\fR
.br
                  Array of allocated numbers of windows.
.sp 2
\fBaffinity (%s)\fR
.br
         Affinity allocation information.
.sp 2
\fBserial_job_energy (%f)\fR
.br
         Serial job energy data.
.sp 2
\fBcpi (%f)\fR
.br
         Cycles per instruction.
.sp 2
\fBgips (%f)\fR
.br
         Giga-instructions per second.
.sp 2
\fBgbs (%f)\fR
.br
         Gigabytes per second.
.sp 2
\fBgflops (%f)\fR
.br
         Giga floating point operations per second.
.sp 2
\fBnumAllocSlots(%d)\fR
.br
         Number of allocated slots.
.sp 2
\fBallocSlots(%s)\fR
.br
         List of execution host names where the slots are
         allocated.
.sp 2
\fBineligiblePendTime(%d)\fR
.br
         Time in seconds that the job has been in the ineligible
         pending state.
.sp 2
\fBindexRangeCnt (%d)\fR
.br
         The number of element ranges indicating successful
         signals
.sp 2
\fBindexRangeStart1 (%d)\fR
.br
         The start of the first index range.
.sp 2
\fBindexRangeEnd1 (%d)\fR
.br
         The end of the first index range.
.sp 2
\fBindexRangeStep1 (%d)\fR
.br
         The step of the first index range.
.sp 2
\fBindexRangeStartN (%d)\fR
.br
         The start of the last index range.
.sp 2
\fBindexRangeEndN (%d)\fR
.br
         The end of the last index range.
.sp 2
\fBindexRangeStepN (%d)\fR
.br
         The step of the last index range.
.sp 2
\fBrequeueTime (%s)\fR
.br
         The job\(aqs requeue time.
.sp 2
\fBnumGPURusages (%d)\fR
.br
         The number of host-based GPU rusage records.
.sp 2
\fBgRusage\fR
.br
         List of host-based GPU rusage. Nothing is logged to the
         record for this value if the last field value is 0.
.sp 2
         \fBhostname (%s)\fR
.br
                  Current host name.
.sp 2
         \fBnumKVP (%d)\fR
.br
                  Number of elements (key-value pairs) in the
                  structure.
.sp 2
         \fBkey (%s)\fR
.br
                  Reserved for future use.
.sp 2
         \fBvalue (%s)\fR
.br
                  Reserved for future use.
.sp 2
\fBstorageInfoC (%d)\fR
.br
         The number of storage staging information.
.sp 2
\fBstorageInfoV (%d)\fR
.br
         List of storage staging information. Nothing is logged
         to the record for this value if the last field value is
         0.
.sp 2
\fBfinishKVP\fR
.br
         \fBnumKVP (%d)\fR
.br
                  Number of elements (key-value pairs) in the
                  structure.
.sp 2
         \fBkey (%s)\fR
.br
                  Reserved for future use.
.sp 2
         \fBvalue (%s)\fR
.br
                  Reserved for future use.
.sp 2
\fBschedulingOverhead(%f)\fR
.br
         The scheduler overhead for a job, in milliseconds. This
         is the total time that is taken by the scheduler to
         dispatch the job and the time that is taken by the
         scheduler to reallocate resources to a new job.
.sp 2

.ce 1000
\fBEVENT_ADRSV_FINISH\fR
.ce 0

.sp 2
An advance reservation has expired. The fields in order of
occurrence are:
.sp 2
\fBEvent type (%s)\fR
.br
         Which is EVENT_ADRSV_FINISH
.sp 2
\fBVersion Number (%s)\fR
.br
         Version number of the log file format
.sp 2
\fBEvent Logging Time (%d)\fR
.br
         Time the event was logged (in seconds since the epoch);
         for example, "\fR1038942015\fR"
.sp 2
\fBReservation Creation Time (%d)\fR
.br
         Time the advance reservation was created (in seconds
         since the epoch); for example, \fR1038938898\fR
.sp 2
\fBReservation Type (%d)\fR
.br
         Type of advance reservation request:
.sp 2
         *  User reservation (RSV_OPTION_USER, defined as 0x001)
.sp 2
         *  User group reservation (RSV_OPTION_GROUP, defined as
            0x002)
.sp 2
         *  System reservation (RSV_OPTION_SYSTEM, defined as
            0x004)
.sp 2
         *  Recurring reservation (RSV_OPTION_RECUR, defined as
            0x008)
.sp 2
         For example, \fR9\fRis a recurring reservation created
         for a user.
.sp 2
\fBCreator ID (%d)\fR
.br
         UNIX user ID of the reservation creator; for example,
         \fR30408\fR
.sp 2
\fBReservation ID (rsvId %s) \fR
.br
         For example, \fRuser2#0\fR
.sp 2
\fBUser Name (%s) \fR
.br
         User name of the reservation user; for example,
         \fRuser2\fR
.sp 2
\fBTime Window (%s)\fR
.br
         Time window of the reservation:
.sp 2
         *  One-time reservation in seconds since the epoch; for
            example, \fR1033761000-1033761600\fR
.sp 2
         *  Recurring reservation; for example, \fR17:50-18:00\fR
.sp 2
\fBCreator Name (%s) \fR
.br
         User name of the reservation creator; for example,
         \fRuser1\fR
.sp 2
\fBDuration (%d)\fR
.br
         Duration of the reservation, in hours, minutes, seconds;
         for example, \fR600\fRis 6 hours, 0 minutes, 0 seconds
.sp 2
\fBNumber of Resources (%d)\fR
.br
         Number of reserved resource pairs in the resource list;
         for example \fR2\fRindicates 2 resource pairs (\fRhostA
         1 hostB 1\fR)
.sp 2
\fBHost Name (%s) \fR
.br
         Reservation host name; for example, \fRhostA\fR
.sp 2
\fBNumber of CPUs (%d)\fR
.br
         Number of reserved CPUs; for example \fR1\fR
.sp 2

.ce 1000
\fBJOB_RESIZE\fR
.ce 0

.sp 2
When there is an allocation change, LSF logs the event after
mbatchd receives a JOB_RESIZE_NOTIFY_DONE event. From
lastResizeTime and eventTime, you can calculate the duration of
previous job allocation. The fields in order of occurrence are:
.sp 2
\fBVersion number (%s)\fR
.br
         The version number.
.sp 2
\fBEvent Time (%d)\fR
.br
         Time the event was logged (in seconds since the epoch).
.sp 2
\fBjobId (%d)\fR
.br
         ID for the job.
.sp 2
\fBtdx (%d)\fR
.br
         Job array index.
.sp 2
\fBstartTime (%d)\fR
.br
         The start time of the running job.
.sp 2
\fBuserId (%d)\fR
.br
         UNIX user ID of the user invoking the command
.sp 2
\fBuserName (%s) \fR
.br
         User name of the submitter
.sp 2
\fBresizeType (%d)\fR
.br
         Resize event type, 0, grow, 1 shrink.
.sp 2
\fBlastResizeTime(%d)\fR
.br
         The wall clock time when job allocation is changed
         previously. The first lastResizeTime is the job start
         time.
.sp 2
\fBnumExecHosts (%d)\fR
.br
         The number of execution hosts before allocation is
         changed. Support LSF_HPC_EXTENSIONS="SHORT_EVENTFILE".
.sp 2
\fBexecHosts (%s)\fR
.br
         Execution host list before allocation is changed.
         Support LSF_HPC_EXTENSIONS="SHORT_EVENTFILE".
.sp 2
\fBnumResizeHosts (%d)\fR
.br
         Number of processors used for execution during resize.
         If LSF_HPC_EXTENSIONS="SHORT_EVENTFILE" is specified in
         lsf.conf, the value of this field is the number of hosts
         listed in short format.
.sp 2
\fBresizeHosts (%s)\fR
.br
         List of execution host names during resize. If
         LSF_HPC_EXTENSIONS="SHORT_EVENTFILE" is specified in
         lsf.conf, the value of this field is logged in a
         shortened format.
.sp 2
\fBnumAllocSlots(%d)\fR
.br
         Number of allocated slots.
.sp 2
\fBallocSlots(%s)\fR
.br
         List of execution host names where the slots are
         allocated.
.sp 2
\fBnumResizeSlots (%d)\fR
.br
         Number of allocated slots for executing resize.
.sp 2
\fBresizeSlots (%s)\fR
.br
         List of execution host names where slots are allocated
         for resizing.