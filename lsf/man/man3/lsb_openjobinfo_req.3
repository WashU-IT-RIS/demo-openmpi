.TH "lsb_openjobinfo_req" 3 "10 Jun 2021" "Version 10.1" "IBM Spectrum LSF 10.1 C API Reference" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lsb_openjobinfo_req \- lsb_openjobinfo_req 
Extensible API.
.PP
Instead of submitting individual requests, this API defines all job info requests as objects, and can easily be enhanced to include additinal requests.
.PP
\fB#include <lsf/lsbatch.h>\fP
.PP
\fB struct \fBjobInfoHeadExt\fP *lsb_openjobinfo_req (struct \fBjobInfoReq\fP *req)\fP
.PP
.SH "Parameters:"
\fI*req\fP job information request.
.PP
.SH "Data Structures:" 
.PP
\fBjobInfoReq\fP 
.br
\fBjobInfoHeadExt\fP
.PP
.SH "Define Statements:" 
.PP
\fBdefs_lsb_openjobinfo_a\fP 
.br
\fBdefs_lsb_openjobinfo\fP 
.br
\fBdefs_lsb_openjobinfo2\fP
.PP
.SH "Returns:"
struct \fBjobInfoHeadExt\fP *:A pointer to job Information head extent. 
.br
 Function was successful. 
.PP
NULL 
.br
 Function failed.
.PP
.SH "Errors:" 
.PP
If the function fails, lsberrno is set to indicate the error.
.PP
.SH "Equivalent line command:" 
.PP
none
.PP
.SH "Files:" 
.PP
${LSF_ENVDIR:-/etc}/lsf.conf
.PP
.SH "See also:"
\fBlsb_openjobinfo_a\fP 
.PP
\fBlsb_openjobinfo_a_ext\fP 
.PP
\fBlsb_closejobinfo\fP 
.PP
\fBlsb_readjobinfo\fP 
.PP
\fBlsb_readframejob\fP 
.PP

.ad l
.nh
.SH NAME
jobInfoReq \- job Information Request  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int \fBoptions\fP"
.br
.ti -1c
.RI "char * \fBuserName\fP"
.br
.ti -1c
.RI "LS_LONG_INT \fBjobId\fP"
.br
.ti -1c
.RI "char * \fBjobName\fP"
.br
.ti -1c
.RI "char * \fBqueue\fP"
.br
.ti -1c
.RI "char * \fBhost\fP"
.br
.ti -1c
.RI "char * \fBapp\fP"
.br
.ti -1c
.RI "char * \fBjobDescription\fP"
.br
.ti -1c
.RI "char * \fBjobGroupName\fP"
.br
.ti -1c
.RI "char * \fBprojectName\fP"
.br
.ti -1c
.RI "char * \fBlicenseProjectName\fP"
.br
.ti -1c
.RI "char * \fBserviceClassName\fP"
.br
.ti -1c
.RI "struct \fBsubmit_ext\fP * \fBsubmitExt\fP"
.br
.ti -1c
.RI "char * \fBsourceClusterName\fP"
.br
.ti -1c
.RI "int \fBoptions2\fP"
.br
.ti -1c
.RI "int \fBreasonLevel\fP"
.br
.ti -1c
.RI "char * \fBrsvId\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
job Information Request 
.SH "Field Documentation"
.PP 
.SS "int \fBjobInfoReq::options\fP"
.PP
Options defined in \fBdefs_lsb_openjobinfo\fP. 
.PP
.SS "char* \fBjobInfoReq::userName\fP"
.PP
User name of the job owner whose job is to be checked. 
.PP
.SS "LS_LONG_INT \fBjobInfoReq::jobId\fP"
.PP
Job id, 0 means all jobs or more than one job specified. 
.PP
.SS "char* \fBjobInfoReq::jobName\fP"
.PP
Job name. 
.PP
.SS "char* \fBjobInfoReq::queue\fP"
.PP
Queue name. 
.PP
.SS "char* \fBjobInfoReq::host\fP"
.PP
Check jobs running on this host. 
.PP
.SS "char* \fBjobInfoReq::app\fP"
.PP
Job application. 
.PP
.SS "char* \fBjobInfoReq::jobDescription\fP"
.PP
Job description. 
.PP
.SS "char* \fBjobInfoReq::jobGroupName\fP"
.PP
Job group name. 
.PP
.SS "char* \fBjobInfoReq::projectName\fP"
.PP
project name 
.PP
.SS "char* \fBjobInfoReq::licenseProjectName\fP"
.PP
licnese project name 
.PP
.SS "char* \fBjobInfoReq::serviceClassName\fP"
.PP
service class name 
.PP
.SS "struct \fBsubmit_ext\fP* \fBjobInfoReq::submitExt\fP"
.PP
For new options in future. 
.PP
.SS "char* \fBjobInfoReq::sourceClusterName\fP"
.PP
Source Cluster Name, NULL means more than one job specified. 
.PP
.SS "int \fBjobInfoReq::options2\fP"
.PP
Options defined in \fBdefs_lsb_openjobinfo2\fP . 
.PP
Includes options such as 'OLD_PEND_MSG' to tell mbd whether to send customized pending reason messages. 
.SS "int \fBjobInfoReq::reasonLevel\fP"
.PP
The level of pending reason information to be retrieved with bjobs -p. 
.PP
.SS "char* \fBjobInfoReq::rsvId\fP"
.PP
Reservation ID. 
.PP


.ad l
.nh
.SH NAME
jobInfoHeadExt \- job Information head extent  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "struct \fBjobInfoHead\fP * \fBjobInfoHead\fP"
.br
.ti -1c
.RI "struct groupInfoReply * \fBgroupInfo\fP"
.br
.ti -1c
.RI "int \fBnField\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
job Information head extent 
.SH "Field Documentation"
.PP 
.SS "struct \fBjobInfoHead\fP* \fBjobInfoHeadExt::jobInfoHead\fP"
.PP
Job Information header. 
.PP
.SS "struct groupInfoReply* \fBjobInfoHeadExt::groupInfo\fP"
.PP
Group Information returned. 
.PP
.SS "int \fBjobInfoHeadExt::nField\fP"
.PP
The number of supported fields. 
.PP


.ad l
.nh
.SH NAME
defs_lsb_openjobinfo_a \- defs_lsb_openjobinfo_a is part of defs_lsb_openjobinfo  

.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBALL_JOB\fP   0x0001"
.br
.ti -1c
.RI "#define \fBDONE_JOB\fP   0x0002"
.br
.ti -1c
.RI "#define \fBPEND_JOB\fP   0x0004"
.br
.ti -1c
.RI "#define \fBSUSP_JOB\fP   0x0008"
.br
.ti -1c
.RI "#define \fBCUR_JOB\fP   0x0010"
.br
.ti -1c
.RI "#define \fBLAST_JOB\fP   0x0020"
.br
.in -1c
.SH "Detailed Description"
.PP 
defs_lsb_openjobinfo_a is part of defs_lsb_openjobinfo 
.SH "Define Documentation"
.PP 
.SS "#define ALL_JOB   0x0001"
.PP
Information about all jobs, including unfinished jobs (pending, running or suspended) and recently finished jobs. 
.PP
LSF remembers jobs finished within the preceding period. This period is set by the parameter CLEAN_PERIOD in the lsb.params file. The default is 3600 seconds (1 hour). (See lsb.params). The command line equivalent is bjobs -a. 
.SS "#define DONE_JOB   0x0002"
.PP
Information about recently finished jobs. 
.PP

.SS "#define PEND_JOB   0x0004"
.PP
Information about pending jobs. 
.PP

.SS "#define SUSP_JOB   0x0008"
.PP
Information about suspended jobs. 
.PP

.SS "#define CUR_JOB   0x0010"
.PP
Information about all unfinished jobs. 
.PP

.SS "#define LAST_JOB   0x0020"
.PP
Information about the last submitted job. 
.PP

.ad l
.nh
.SH NAME
defs_lsb_openjobinfo \- Information options about job.  

.PP
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBdefs_lsb_openjobinfo_a\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBALL_USERS\fP   'all'"
.br
.ti -1c
.RI "#define \fBRUN_JOB\fP   0x0040"
.br
.ti -1c
.RI "#define \fBJOBID_ONLY\fP   0x0080"
.br
.ti -1c
.RI "#define \fBHOST_NAME\fP   0x0100"
.br
.ti -1c
.RI "#define \fBEXIT_JOB\fP   0x0100"
.br
.ti -1c
.RI "#define \fBNO_PEND_REASONS\fP   0x0200"
.br
.ti -1c
.RI "#define \fBJGRP_INFO\fP   0x0400"
.br
.ti -1c
.RI "#define \fBJGRP_RECURSIVE\fP   0x0800"
.br
.ti -1c
.RI "#define \fBJGRP_ARRAY_INFO\fP   0x1000"
.br
.ti -1c
.RI "#define \fBJOBID_ONLY_ALL\fP   0x02000"
.br
.ti -1c
.RI "#define \fBZOMBIE_JOB\fP   0x04000"
.br
.ti -1c
.RI "#define \fBTRANSPARENT_MC\fP   0x08000"
.br
.ti -1c
.RI "#define \fBEXCEPT_JOB\fP   0x10000"
.br
.ti -1c
.RI "#define \fBMUREX_JOB\fP   0x20000"
.br
.ti -1c
.RI "#define \fBALLOC_FILE\fP   0x20000"
.br
.ti -1c
.RI "#define \fBFORWARDED_JOB\fP   0x40000"
.br
.ti -1c
.RI "#define \fBSYM_TOP_LEVEL_ONLY\fP   0x80000"
.br
.ti -1c
.RI "#define \fBFILTER_RECALLED_JOBS\fP   0x80000"
.br
.ti -1c
.RI "#define \fBJGRP_NAME\fP   0x100000"
.br
.ti -1c
.RI "#define \fBCOND_HOSTNAME\fP   0x200000"
.br
.ti -1c
.RI "#define \fBFROM_BJOBSCMD\fP   0x400000"
.br
.ti -1c
.RI "#define \fBWITH_LOPTION\fP   0x800000"
.br
.ti -1c
.RI "#define \fBAPS_JOB\fP   0x1000000"
.br
.ti -1c
.RI "#define \fBUGRP_INFO\fP   0x2000000"
.br
.ti -1c
.RI "#define \fBTIME_LEFT\fP   0x4000000"
.br
.ti -1c
.RI "#define \fBFINISH_TIME\fP   0x8000000"
.br
.ti -1c
.RI "#define \fBCOM_PERCENTAGE\fP   0x10000000"
.br
.ti -1c
.RI "#define \fBSSCHED_JOB\fP   0x20000000"
.br
.ti -1c
.RI "#define \fBNON_INTERACTIVE_JOB\fP   0x40000000"
.br
.in -1c
.SH "Detailed Description"
.PP 
Information options about job. 
.SH "Define Documentation"
.PP 
.SS "#define ALL_USERS   'all'"
.PP
Reserved user name. 
.PP
.SS "#define RUN_JOB   0x0040"
.PP
Information about all running jobs. 
.PP
.SS "#define JOBID_ONLY   0x0080"
.PP
Information about JobId only. 
.PP

.SS "#define HOST_NAME   0x0100"
.PP
Internal use only. 
.PP

.SS "#define EXIT_JOB   0x0100"
.PP
Duplicate for bclean. 
.PP

.SS "#define NO_PEND_REASONS   0x0200"
.PP
Exclude pending jobs. 
.PP

.SS "#define JGRP_INFO   0x0400"
.PP
Return group info structures. 
.PP
.SS "#define JGRP_RECURSIVE   0x0800"
.PP
Recursively search job group tree. 
.PP
.SS "#define JGRP_ARRAY_INFO   0x1000"
.PP
Return job array info structures. 
.PP
.SS "#define JOBID_ONLY_ALL   0x02000"
.PP
All jobs in the core. 
.PP
.SS "#define ZOMBIE_JOB   0x04000"
.PP
All zombie jobs. 
.PP
.SS "#define TRANSPARENT_MC   0x08000"
.PP
Display remote jobs by their submission jobid. 
.PP

.SS "#define EXCEPT_JOB   0x10000"
.PP
Exceptional jobs. 
.PP
.SS "#define MUREX_JOB   0x20000"
.PP
Display for murex jobs. 
.PP
.SS "#define ALLOC_FILE   0x20000"
.PP
Display user specified allocation file content. 
.PP
.SS "#define FORWARDED_JOB   0x40000"
.PP
Grid broker -f and -fwd, show forwarded jobs. 
.PP
.SS "#define SYM_TOP_LEVEL_ONLY   0x80000"
.PP
Only show top-level symphony job. 
.PP
.SS "#define FILTER_RECALLED_JOBS   0x80000"
.PP
Duplicated : For internal use only. 
.PP
.SS "#define JGRP_NAME   0x100000"
.PP
For internal use only. 
.PP
.SS "#define COND_HOSTNAME   0x200000"
.PP
Condensed host group. 
.PP
.SS "#define FROM_BJOBSCMD   0x400000"
.PP
Called from command, for internal use only. 
.PP
.SS "#define WITH_LOPTION   0x800000"
.PP
-l in command parameter, for internal use only 
.PP
.SS "#define APS_JOB   0x1000000"
.PP
Jobs submitted to aps queue. 
.PP
.SS "#define UGRP_INFO   0x2000000"
.PP
Information about user group. 
.PP

.SS "#define TIME_LEFT   0x4000000"
.PP
RFC#1531: -G option support. 
.PP
-WL Estimated time remaining based on the runtime estimate or runlimit. 
.SS "#define FINISH_TIME   0x8000000"
.PP
Estimated finish time based on the runtime estimate or runlimit. 
.PP

.SS "#define COM_PERCENTAGE   0x10000000"
.PP
Estimated completion percentage based on the runtime estimate or runlimit. 
.PP
If options is 0, default to CUR_JOB. 
.SS "#define SSCHED_JOB   0x20000000"
.PP
-ss option 
.PP
.SS "#define NON_INTERACTIVE_JOB   0x40000000"
.PP
used to indicate non-interactive request when requesting job information 
.PP
.ad l
.nh
.SH NAME
defs_lsb_openjobinfo2 \- Information options2 about job.  

.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBMR_JOB\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBPEND_JOB_ELIGIBLE\fP   0x2"
.br
.ti -1c
.RI "#define \fBPEND_JOB_INELIGIBLE\fP   0x4"
.br
.ti -1c
.RI "#define \fBPEND_JOB_ELIGIBLE_AND_INELIGIBLE\fP   0x8"
.br
.ti -1c
.RI "#define \fBPEND_JOB_ELIGIBLE_WITH_PEND\fP   0x0010"
.br
.ti -1c
.RI "#define \fBOLD_PEND_MSG\fP   0x0020"
.br
.ti -1c
.RI "#define \fBPEND_REASON_SUM\fP   0x0040"
.br
.ti -1c
.RI "#define \fBJOB_RUSAGE_FILTER\fP   0x0080"
.br
.ti -1c
.RI "#define \fBPRIO_JOB\fP   0x0800"
.br
.ti -1c
.RI "#define \fBCONTAINER_JOB\fP   0x8000"
.br
.ti -1c
.RI "#define \fBK8S_JOB\fP   0x10000"
.br
.ti -1c
.RI "#define \fBSHOW_JOB_ENV\fP   0x20000"
.br
.ti -1c
.RI "#define \fBSHOW_JOB_SCRIPT\fP   0x40000"
.br
.in -1c
.SH "Detailed Description"
.PP 
Information options2 about job. 
.SH "Define Documentation"
.PP 
.SS "#define MR_JOB   0x00000001"
.PP
-mr option 
.PP
.SS "#define PEND_JOB_ELIGIBLE   0x2"
.PP
-pe option 
.PP
.SS "#define PEND_JOB_INELIGIBLE   0x4"
.PP
-pi option 
.PP
.SS "#define PEND_JOB_ELIGIBLE_AND_INELIGIBLE   0x8"
.PP
-pei option 
.PP
.SS "#define PEND_JOB_ELIGIBLE_WITH_PEND   0x0010"
.PP
-pi/-pe/-pei with -p 
.PP
.SS "#define OLD_PEND_MSG   0x0020"
.PP
This flag indicates that LSB_SUPPRESS_CUSTOM_REASONS has been set to Y. 
.PP

.SS "#define PEND_REASON_SUM   0x0040"
.PP
-bjobs -psum option 
.PP
.SS "#define JOB_RUSAGE_FILTER   0x0080"
.PP
-bjobs -rusage option 
.PP
.SS "#define PRIO_JOB   0x0800"
.PP
-prio option 
.PP
.SS "#define CONTAINER_JOB   0x8000"
.PP
This flag indicates to selecting container jobs. 
.PP

.SS "#define K8S_JOB   0x10000"
.PP
-k8s option. 
.PP
List kubernetes jobs. 
.SS "#define SHOW_JOB_ENV   0x20000"
.PP
This flag indicates to show the env for specified job. 
.PP

.SS "#define SHOW_JOB_SCRIPT   0x40000"
.PP
This flag indicates to show the jobfile script for specified job. 
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for IBM Spectrum LSF 10.1 C API Reference from the source code.
