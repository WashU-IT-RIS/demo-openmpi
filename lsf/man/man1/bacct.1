
.ad l

.TH bacct 1 "July 2021" "" ""
.ll 72

.ce 1000
\fBbacct\fR
.ce 0

.sp 2
Displays accounting statistics about finished jobs.
.sp 2

.SH Synopsis

.sp 2
\fBbacct\fR [\fB-b\fR | \fB-l\fR[\fB-aff\fR] [\fB-gpu\fR]]
[\fB-d\fR] [\fB-E\fR] [\fB-e\fR] [\fB-UF\fR] [\fB-w\fR]
[\fB-x\fR] [\fB-cname\fR] [\fB-app\fR application_profile_name]
[\fB-C\fR time0,time1] [\fB-D\fR time0,time1] [\fB-f\fR
logfile_name | \fB-f -\fR ] [\fB-Lp\fR ls_project_name ...]
[\fB-m\fR host_name ...|\fB-M\fR host_list_file] [\fB-N\fR
host_name | \fB-N\fR host_model | \fB-N\fR cpu_factor] [\fB-P\fR
project_name ...] [\fB-q\fR queue_name ...] [\fB-rcacct "all\fR |
rc_account_name ...\fB"\fR] [\fB-rcalloc "all\fR |
rc_account_name ...\fB"\fR] [\fB-sla\fR service_class_name ...]
[\fB-S\fR time0,time1] [\fB-u\fR user_name ... | \fB-u\fR
\fBall\fR] [\fB-f\fR logfile_name] [job_ID ...] [\fB-U\fR
resrvation_ID ... | \fB-U all\fR]
.sp 2
\fBbacct\fR [\fB-h\fR | \fB-V\fR]
.SH Description

.sp 2
Displays a summary of accounting statistics for all finished jobs
(with a \fRDONE\fR or \fREXIT\fR status) submitted by the user
who ran the command, on all hosts, projects, and queues in the
LSF system.
.sp 2
By default, the bacct command displays statistics for all jobs
that are logged in the current LSF accounting log file:
LSB_SHAREDIR/\fIcluster_name\fR/logdir/lsb.acct.
.sp 2
CPU time is not normalized.
.sp 2
All times are in seconds.
.sp 2
Statistics not reported by the bacct command but of interest to
individual system administrators can be generated by directly
using awk or perl to process the lsb.acct file.
.SH Throughput calculations

.sp 2
To calculate the throughput (\fIT\fR) of the LSF system, specific
hosts, or queues, use the following formula:
.sp 2
T = N/(ET-BT)
.br

.sp 2
Where:
.sp 2
*  \fIN\fR is the total number of jobs for which accounting
   statistics are reported
.sp 2
*  \fIBT\fR is the job start time, when the first job was logged
.sp 2
*  \fIET\fR is the job end time, when the last job was logged
.sp 2
Use the option -C \fItime0\fR,\fItime1\fR to specify the job
start time as \fItime0\fR and the end time as \fItime1\fR. In
this way, you can examine throughput during a specific time
period.
.sp 2
*  To calculate the total throughput of the LSF system, specify
   the -u all option without any of the -m, -q, -S, -D, or
   \fIjob_ID\fR options.
.sp 2
*  To calculate the throughput of hosts, specify the -u all
   option \fIwithout\fR the -q, -S, -D, or \fIjob_ID\fR options.
.sp 2
*  To calculate the throughput of queues, specify the -u all
   option \fIwithout\fR the -m, -S, -D, or \fIjob_ID\fR options.
.sp 2
Only the jobs that are involved in the throughput calculation are
logged (that is, with a \fRDONE\fR or \fREXIT\fR status). Jobs
that are running, suspended, or that were never dispatched after
submission are not considered, because they are still in the LSF
system and not logged in the lsb.acct file.
.sp 2
The bacct command does not show local pending batch jobs that
were killed with the bkill -b command. The bacct command shows
LSF multicluster capability jobs and local running jobs even if
they are killed by using the bkill -b command.
.SH Options

.sp 2
\fB-aff\fR
.br
         Displays information about jobs with CPU and memory
         affinity resource requirement for each task in the job.
         A table headed \fRAFFINITY\fR shows detailed memory and
         CPU binding information for each task in the job, one
         line for each allocated processor unit.
.sp 2
         Use only with the -l option.
.sp 2
\fB-b\fR
.br
         Brief format.
.sp 2
\fB-E\fR
.br
         Displays accounting statistics that are calculated with
         eligible pending time instead of total pending time for
         the wait time, turnaround time, expansion factor
         (turnaround time/run time), and hog factor (CPU
         time/turnaround time).
.sp 2
\fB-d\fR
.br
         Displays accounting statistics for successfully
         completed jobs (with a \fRDONE\fR status).
.sp 2
\fB-e\fR
.br
         Displays accounting statistics for exited jobs (with an
         \fREXIT\fR status).
.sp 2
\fB-gpu\fR
.br
         bacct -l -gpu shows the following information on GPU job
         allocation after the job finishes:
.sp 2
         Use this option only with the -l option.
.sp 2
         \fBHost Name\fR
.br
                  Name of the host.
.sp 2
         \fBGPU IDs on the host\fR
.br
                  Each GPU is shown as a separate line.
.sp 2
         \fBTASK and ID\fR
.br
                  List of job tasks and IDs using the GPU
                  (separated by comma if used by multiple tasks)
.sp 2
         \fBMODEL\fR
.br
                  Contains the GPU brand name and model type
                  name.
.sp 2
         \fBMTOTAL\fR
.br
                  The total GPU memory size.
.sp 2
         \fBGPU Compute Capability\fR
.br

.sp 2
         \fBMRSV\fR
.br
                  GPU memory reserved by the job
.sp 2
         \fBSOCKET\fR
.br
                  socket ID of the GPU located at
.sp 2
         \fBNVLINK\fR
.br
                  Indicates if the GPU has NVLink connections
                  with other GPUs allocated for the job (ranked
                  by GPU ID and including itself). The connection
                  flag of each GPU is a character separated by
                  “/” with the next GPU:
.br
                  A “Y” indicates there is a direct NVLINK
                  connection between two GPUs.
.br
                  An “N” shows there is no direct NVLINK
                  connection with that GPU.
.br
                  A “-” shows the GPU is itself.
.sp 2
         If the job exited abnormally due to a GPU-related error
         or warning, the error or warning message displays. If
         LSF could not get GPU usage information from DCGM, a
         hyphen (\fR-\fR) displays.
.sp 2
\fB-l\fR
.br
         Long format. Displays detailed information for each job
         in a multiline format.
.sp 2
         If the job was submitted with the bsub -K command, the
         -l option displays \fRSynchronous Execution\fR.
.sp 2
\fB-UF\fR
.br
         Displays unformatted job detail information.
.sp 2
         This option makes it easy to write scripts for parsing
         keywords on bacct. The results of this option have no
         wide control for the output. Each line starts from the
         beginning of the line. All lines that start with the
         time stamp are displayed unformatted in a single line.
         The output has no line length and format control.
.sp 2
\fB-w\fR
.br
         Wide field format.
.sp 2
\fB-x\fR
.br
         Displays jobs that triggered a job exception (overrun,
         underrun, idle, runtime_est_exceeded). Use with the -l
         option to show the exception status for individual jobs.
.sp 2
\fB-cname\fR
.br
         In IBM Spectrum LSF Advanced Edition, includes the
         cluster name for execution cluster hosts and host groups
         in output.
.sp 2
         \fBNote: \fRThis command option is deprecated and might
         be removed in a future version of LSF.
.sp 2
\fB-app \fIapplication_profile_name\fB\fR
.br
         Displays accounting information about jobs that are
         submitted to the specified application profile. You must
         specify an existing application profile that is
         configured in lsb.applications.
.sp 2
\fB-C \fItime0\fB,\fItime1\fB \fR
.br
         Displays accounting statistics for jobs that completed
         or exited during the specified time interval. Reads the
         lsb.acct file and all archived log files
         (lsb.acct.\fIn\fR) unless the -f option is used to
         specify a log file.
.sp 2
         The time format is the same as in the bhist command.
.sp 2
\fB-D \fItime0\fB,\fItime1\fB \fR
.br
         Displays accounting statistics for jobs that are
         dispatched during the specified time interval. Reads the
         lsb.acct file and all archived log files
         (lsb.acct.\fIn\fR) unless the -f option is also used to
         specify a log file.
.sp 2
         The time format is the same as in the bhist command.
.sp 2
\fB-f \fIlogfile_name\fB | -f -\fR
.br
         Searches the specified job log file for accounting
         statistics, which is useful for offline analysis.
         Specify either an absolute or relative path.
.sp 2
         The specified file path can contain up to 4094
         characters for UNIX, or up to 512 characters for
         Windows.
.sp 2
         Specify the -f - option to force the bacct command to
         use the lsb.acct log file for accounting statistics. If
         you are using IBM Spectrum LSF Explorer ("LSF Explorer")
         to load accounting log records, the -f - option (or any
         -f argument that specifies a log file) forces the bacct
         command to bypass LSF Explorer. For more details, refer
         to \fBLSF_QUERY_ES_SERVERS\fR and
         \fBLSF_QUERY_ES_FUNCTIONS\fR in the IBM Spectrum LSF
         Configuration Reference.
.sp 2
\fB-Lp \fIls_project_name\fB ...\fR
.br
         Displays accounting statistics for jobs that belong to
         the specified LSF License Scheduler projects. If a list
         of projects is specified, project names must be
         separated by spaces and enclosed in quotation marks
         (\fR"\fR) or (\(aq).
.sp 2
\fB-M \fIhost_list_file\fB \fR
.br
         Displays accounting statistics for jobs that are
         dispatched to the hosts listed in a file
         (\fIhost_list_file\fR) containing a list of hosts. The
         host list file has the following format:
.sp 2
         *  Multiple lines are supported
.sp 2
         *  Each line includes a list of hosts that are separated
            by spaces
.sp 2
         *  The length of each line must be fewer than 512
            characters
.sp 2
\fB-m \fIhost_name\fB ... \fR
.br
         Displays accounting statistics for jobs that are
         dispatched to the specified hosts.
.sp 2
         If a list of hosts is specified, host names must be
         separated by spaces and enclosed in quotation marks
         (\fR"\fR) or (\fR\(aq\fR), and maximum length cannot exceed
         1024 characters.
.sp 2
\fB-N \fIhost_name\fB | -N \fIhost_model\fB | -N
\fIcpu_factor\fB\fR
.br
         Normalizes CPU time by the CPU factor of the specified
         host or host model, or by the specified CPU factor.
.sp 2
         If you use the bacct command offline by indicating a job
         log file, you must specify a CPU factor.
.sp 2
\fB-P \fIproject_name\fB ...\fR
.br
         Displays accounting statistics for jobs that belong to
         the specified projects. If a list of projects is
         specified, project names must be separated by spaces and
         enclosed in quotation marks (\fR"\fR) or (\fR\(aq\fR). You
         cannot use one double quotation mark (\fR"\fR) and one
         single quotation mark (\fR\(aq\fR) to enclose the list.
.sp 2
\fB-q \fIqueue_name\fB ...\fR
.br
         Displays accounting statistics for jobs that are
         submitted to the specified queues.
.sp 2
         If a list of queues is specified, queue names must be
         separated by spaces and enclosed in quotation marks
         (\fR"\fR) or (\fR\(aq\fR).
.sp 2
\fB-rcacct "all | \fIrc_account_name\fB ..."\fR
.br
         Displays accounting statistics for jobs that are
         associated with the specified LSF resource connector
         account name.
.sp 2
         If a list of account names is specified, account names
         must be separated by spaces.
.sp 2
\fB-rcalloc "all | \fIrc_account_name\fB ..."\fR
.br
         Displays accounting statistics for jobs that are
         associated with the specified LSF resource connector
         account name and actually ran on an LSF resource
         connector host.
.sp 2
         If a list of account names is specified, account names
         must be separated by spaces.
.sp 2
\fB-S \fItime0\fB,\fItime1\fB\fR
.br
         Displays accounting statistics for jobs that are
         submitted during the specified time interval. Reads the
         lsb.acct file and all archived log files
         (lsb.acct.\fIn\fR) unless the -f option is also used to
         specify a log file.
.sp 2
         The time format is the same as in the bhist command.
.sp 2
\fB-sla \fIservice_class_name\fB\fR
.br
         Displays accounting statistics for jobs that ran under
         the specified service class.
.sp 2
         If a default system service class is configured with the
         \fBENABLE_DEFAULT_EGO_SLA\fR parameter in the lsb.params
         file, but not explicitly configured in the
         lsb.applications file, the bacct -sla
         \fIservice_class_name\fR command displays accounting
         information for the specified default service class.
.sp 2
\fB-U \fIreservation_id\fB ... | -U all\fR
.br
         Displays accounting statistics for the specified advance
         reservation IDs, or for all reservation IDs if the
         keyword all is specified.
.sp 2
         A list of reservation IDs must be separated by spaces
         and enclosed in quotation marks (\fR"\fR) or (\fR\(aq\fR).
.sp 2
         The -U option also displays historical information about
         reservation modifications.
.sp 2
         When combined with the -U option, the -u option is
         interpreted as the user name of the reservation creator.
         The following command shows all the advance reservations
         that are created by user \fRuser2\fR.
.sp 2
         bacct -U all -u user2
.br

.sp 2
         Without the -u option, the bacct -U command shows all
         advance reservation information about jobs that are
         submitted by the user.
.sp 2
         In a LSF multicluster capability environment, advance
         reservation information is only logged in the execution
         cluster, so bacct displays advance reservation
         information for local reservations only. You cannot see
         information about remote reservations. You cannot
         specify a remote reservation ID, and the keyword all
         displays only information about reservations in the
         local cluster.
.sp 2
\fB-u \fIuser_name\fB ...|-u all\fR
.br
         Displays accounting statistics for jobs that are
         submitted by the specified users, or by all users if the
         keyword \fRall\fR is specified.
.sp 2
         If a list of users is specified, user names must be
         separated by spaces and enclosed in quotation marks
         (\fR"\fR) or (\fR\(aq\fR). You can specify both user names
         and user IDs in the list of users.
.sp 2
\fB\fIjob_ID\fB ...\fR
.br
         Displays accounting statistics for jobs with the
         specified job IDs.
.sp 2
         If the reserved job ID 0 is used, it is ignored.
.sp 2
         In LSF multicluster capability job forwarding mode, you
         can use the local job ID and cluster name to retrieve
         the job details from the remote cluster.
.sp 2
         General queries have the following syntax:
.sp 2
         bacct submission_job_id@submission_cluster_name
.sp 2
         Job arrays have the following query syntax:
.sp 2
         bacct "submission_job_id[index]"@submission_cluster_name"
.sp 2
         The advantage of using
         \fR\fIsubmission_job_id\fR@\fIsubmission_cluster_name\fR\fR
         instead of \fRbacct -l \fIjob_ID\fR\fR is that you can
         use
         \fR\fIsubmission_job_id\fR@\fIsubmission_cluster_name\fR\fR
         as an alias to query a local job in the execution
         cluster without knowing the local job ID in the
         execution cluster. The bacct output is identical no
         matter which job ID you use (local job ID or
         \fR\fIsubmission_job_id\fR@\fIsubmission_cluster_name\fR\fR
.sp 2
         You can use the bacct 0 command to find all finished
         jobs in your local cluster, but \fRbacct
         0@\fIsubmission_cluster_name\fR\fR is not supported.
.sp 2
\fB-h\fR
.br
         Prints command usage to stderr and exits.
.sp 2
\fB-V\fR
.br
         Prints LSF release version to stderr and exits.
.SH Default output format (SUMMARY)

.sp 2
Statistics on jobs. The following fields are displayed:
.sp 2
*  Total number of done jobs.
.sp 2
*  Total number of exited jobs.
.sp 2
*  Total CPU time consumed.
.sp 2
*  Average CPU time consumed.
.sp 2
*  Maximum CPU time of a job.
.sp 2
*  Minimum CPU time of a job.
.sp 2
*  Total wait time in queues.
.sp 2
*  Average wait time in queue, which is the elapsed time from job
   submission to job dispatch.
.sp 2
*  Maximum wait time in queue.
.sp 2
*  Minimum wait time in queue.
.sp 2
*  Average turnaround time, which is the elapsed time from job
   submission to job completion (seconds/job).
.sp 2
*  Maximum turnaround time.
.sp 2
*  Minimum turnaround time.
.sp 2
*  Average hog factor of a job, which is the amount of CPU time
   that is consumed by a job divided by its turnaround time (CPU
   time/turnaround time).
.sp 2
*  Maximum hog factor of a job.
.sp 2
*  Minimum hog factor of a job.
.sp 2
*  Average expansion factor of a job, which is its turnaround
   time divided by its run time (turnaround time/run time).
.sp 2
*  Maximum expansion factor of a job.
.sp 2
*  Minimum expansion factor of a job.
.sp 2
*  Total run time consumed.
.sp 2
*  Average run time consumed.
.sp 2
*  Maximum run time of a job.
.sp 2
*  Minimum run time of a job.
.sp 2
*  Total throughput, which is the number of completed jobs
   divided by the time period to finish these jobs (jobs/hour).
.sp 2
*  Beginning time, which is the completion or exit time of the
   first job selected.
.sp 2
*  Ending time, which is the completion or exit time of the last
   job selected.
.sp 2
*  Scheduler efficiency for a set of finished jobs in the
   cluster. For each job, its scheduler efficiency is a job\(aqs run
   time divided by the total of its run time and the scheduler
   overhead time (run time/(run time + scheduler overhead)). The
   overall scheduler efficiency is the average scheduler
   efficiency of all jobs. The bacct command displays the
   scheduler efficiency for slot and memory resources.
.sp 2
The total, average, minimum, and maximum statistics are on all
specified jobs.
.SH Output: Brief format (-b)

.sp 2
In addition to the default format \fRSUMMARY\fR, displays the
following fields:
.sp 2
\fBU/UID\fR
.br
         Name of the user who submitted the job. If LSF fails to
         get the user name by getpwuid, the user ID is displayed.
.sp 2
\fBQUEUE\fR
.br
         Queue to which the job was submitted.
.sp 2
\fBSUBMIT_TIME\fR
.br
         Time when the job was submitted.
.sp 2
\fBCPU_T\fR
.br
         CPU time that is consumed by the job.
.sp 2
\fBWAIT\fR
.br
         Wait time of the job.
.sp 2
\fBTURNAROUND\fR
.br
         Turnaround time of the job.
.sp 2
\fBFROM\fR
.br
         Host from which the job was submitted.
.sp 2
\fBEXEC_ON\fR
.br
         Host or hosts to which the job was dispatched to run.
.sp 2
\fBJOB_NAME\fR
.br
         The job name that is assigned by the user, or the
         command string assigned by default at job submission
         with the bsub command. If the job name is too long to
         fit in this field, then only the latter part of the job
         name is displayed.
.sp 2
         The displayed job name or job command can contain up to
         4094 characters.
.SH Output: Long format (-l)

.sp 2
Also displays host-based accounting information (\fRCPU_T\fR,
\fRMEM\fR, and \fRSWAP\fR) for completed jobs when the
\fBLSF_HPC_EXTENSIONS="HOST_RUSAGE"\fR parameter is set in the
lsf.conf file.
.sp 2
In addition to the fields displayed by default in \fRSUMMARY\fR
and by the -b option, displays the following fields:
.sp 2
\fBJOBID\fR
.br
         Identifier that LSF assigned to the job.
.sp 2
\fBPROJECT_NAME\fR
.br
         Project name that is assigned to the job.
.sp 2
\fBSTATUS\fR
.br
         Status that indicates the job was either successfully
         completed (\fRDONE\fR status) or exited (\fREXIT\fR
         status).
.sp 2
\fBDISPATCH_TIME\fR
.br
         Time when the job was dispatched to run on the execution
         hosts.
.sp 2
\fBCOMPL_TIME\fR
.br
         Time when the job exited or completed.
.sp 2
\fBHOG_FACTOR\fR
.br
         Average hog factor, equal to \fR\fICPU_time\fR /
         \fIturnaround_time\fR\fR.
.sp 2
\fBMEM\fR
.br
         Maximum resident memory usage of all processes in a job.
         By default, memory usage is shown in MB. Use the
         \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file
         to specify a larger unit for display (MB, GB, TB, PB, or
         EB).
.sp 2
\fBCWD\fR
.br
         Full path of the current working directory (CWD) for the
         job.
.sp 2
\fBSpecified CWD\fR
.br
         User specified execution CWD.
.sp 2
\fBSWAP\fR
.br
         Maximum virtual memory usage of all processes in a job.
         By default, swap space is shown in MB. Use the
         \fBLSF_UNIT_FOR_LIMITS\fR parameter in the lsf.conf file
         to specify a larger unit for display (MB, GB, TB, PB, or
         EB).
.sp 2
\fBINPUT_FILE\fR
.br
         File from which the job reads its standard input (see
         bsub -i \fIinput_file\fR).
.sp 2
\fBOUTPUT_FILE\fR
.br
         File to which the job writes its standard output (see
         bsub -o \fIoutput_file\fR).
.sp 2
\fBERR_FILE\fR
.br
         File in which the job stores its standard error output
         (see bsub -e \fIerr_file\fR).
.sp 2
\fBEXCEPTION STATUS\fR
.br
         The exception status of a job includes the following
         possible values:
.sp 2
         \fBidle\fR
.br
                  The job is consuming less CPU time than
                  expected. The job idle factor
                  (\fR\fICPU_time\fR/\fIrun_time\fR\fR) is less
                  than the configured \fBJOB_IDLE\fR threshold
                  for the queue and a job exception was
                  triggered.
.sp 2
         \fBoverrun\fR
.br
                  The job is running longer than the number of
                  minutes specified by the \fBJOB_OVERRUN\fR
                  threshold for the queue and a job exception was
                  triggered.
.sp 2
         \fBunderrun\fR
.br
                  The job finished sooner than the number of
                  minutes specified by the \fBJOB_UNDERRUN\fR
                  threshold for the queue and a job exception was
                  triggered.
.sp 2
         \fBruntime_est_exceeded\fR
.br
                  The job is running longer than the number of
                  minutes specified by the runtime estimation and
                  a job exception was triggered.
.sp 2
\fBSYNCHRONOUS_EXECUTION\fR
.br
         Job was submitted with the -K option. LSF submits the
         job and waits for the job to complete.
.sp 2
\fBJOB_DESCRIPTION\fR
.br
         The job description that is assigned by the user at job
         submission with bsub. This field is omitted if no job
         description was assigned.
.sp 2
         The displayed job description can contain up to 4094
         characters.
.sp 2
\fBDispatched <number> Tasks on Hosts\fR
.br
         The number of tasks in the job and the hosts to which
         those tasks were sent for processing. Displayed when the
         if\fBLSB_ENABLE_HPC_ALLOCATION\fR parameter is set to
         \fRY\fR or \fRy\fR in the lsf.conf file.
.sp 2
\fBAllocated <number> Slot(s) on Host(s)\fR
.br
         The number of slots that were allocated to the job based
         on the number of tasks, and the hosts on which the slots
         are allocated. Displayed when the
         \fBLSB_ENABLE_HPC_ALLOCATION\fR parameter is set to
         \fRY\fR or \fRy\fR in the lsf.conf file.
.sp 2
\fBEffective RES_REQ\fR
.br
         Displays a job\(aqs effective resource requirement as seen
         by the scheduler after resolving any OR constructs.
.sp 2
\fBPE Network ID\fR
.br
         Displays network resource allocations for IBM Parallel
         Edition (PE) jobs that are submitted with the bsub
         -network option, or to a queue or an application profile
         with the \fBNETWORK_REQ\fR parameter defined.
.sp 2
         bacct -l 210
.br
         Job <210>, User <user1>;, Project <default>, Status <DONE>. Queue <normal>,
.br
                              Command <my_pe_job>
.br
         Tue Jul 17 06:10:28: Submitted from host <hostA>, CWD </home/pe_jobs>;
.br
         Tue Jul 17 06:10:31: Dispatched to <hostA>, Effective RES_REQ <select[type 
.br
                              == local] order[r15s:pg] rusage[mem=1.00] >, PE Network 
.br
                              ID <1111111>  <2222222> used <1> window(s)
.br
                              per network per task;
.br
         Tue Jul 17 06:11:31: Completed <done>.
.SH Output: Advance reservations (-U)

.sp 2
Displays the following fields:
.sp 2
\fBRSVID\fR
.br
         Advance reservation ID assigned by brsvadd command.
.sp 2
\fBTYPE\fR
.br
         Type of reservation: \fRuser\fR or \fRsystem\fR.
.sp 2
\fBCREATOR\fR
.br
         User name of the advance reservation creator, who
         submitted the brsvadd command.
.sp 2
\fBUSER\fR
.br
         User name of the advance reservation user, who submitted
         the job with the bsub -U command.
.sp 2
\fBNCPUS\fR
.br
         Number of CPUs reserved.
.sp 2
\fBRSV_HOSTS\fR
.br
         List of hosts for which processors are reserved, and the
         number of processors reserved.
.sp 2
\fBTIME_WINDOW\fR
.br
         Time window for the reservation.
.sp 2
         *  A one-time reservation displays fields that are
            separated by slashes (\fRmonth/day/hour/minute\fR).
.sp 2
            11/12/14/0-11/12/18/0
.sp 2
         *  A recurring reservation displays fields that are
            separated by colons (\fRday:hour:minute\fR).
.sp 2
            5:18:0 5:20:0
.SH Output: Affinity resource requirements information (-l -aff)

.sp 2
Use the -l -aff option to display accounting job information
about CPU and memory affinity resource allocations for job tasks.
A table with the heading \fRAFFINITY\fR is displayed containing
the detailed affinity information for each task, one line for
each allocated processor unit. CPU binding and memory binding
information are shown in separate columns in the display.
.sp 2
\fBHOST\fR
.br
         The host the task is running on.
.sp 2
\fBTYPE\fR
.br
         Requested processor unit type for CPU binding. One of
         \fRnuma\fR, \fRsocket\fR, \fRcore\fR, or \fRthread\fR.
.sp 2
\fBLEVEL\fR
.br
         Requested processor unit binding level for CPU binding.
         One of \fRnuma\fR, \fRsocket\fR, \fRcore\fR, or
         \fRthread\fR. If no CPU binding level is requested, a
         dash (\fR-\fR) is displayed.
.sp 2
\fBEXCL\fR
.br
         Requested processor unit binding level for exclusive CPU
         binding. One of \fRnuma\fR, \fRsocket\fR, \fRcore\fR, or
         \fRthread\fR. If no exclusive binding level is
         requested, a dash (\fR-\fR) is displayed.
.sp 2
\fBIDS\fR
.br
         List of physical or logical IDs of the CPU allocation
         for the task.
.sp 2
         The list consists of a set of paths, represented as a
         sequence of integers separated by slash characters
         (\fR/\fR), through the topology tree of the host. Each
         path identifies a unique processing unit that is
         allocated to the task. For example, a string of the form
         \fR3/0/5/12\fR represents an allocation to thread 12 in
         core 5 of socket 0 in NUMA node 3. A string of the form
         \fR2/1/4\fRrepresents an allocation to core 4 of socket
         1 in NUMA node 2. The integers correspond to the node ID
         numbers displayed in the topology tree from bhosts -aff.
.sp 2
\fBPOL\fR
.br
         Requested memory binding policy. Either\fRlocal\fR or
         \fRpref\fR. If no memory binding is requested, \fR-\fR
         is displayed.
.sp 2
\fBNUMA\fR
.br
         ID of the NUMA node that the task memory is bound to. If
         no memory binding is requested, a dash (\fR-\fR) is
         displayed.
.sp 2
\fBSIZE\fR
.br
         Amount of memory that is allocated for the task on the
         NUMA node.
.sp 2
For example, the following job starts 6 tasks with the following
affinity resource requirements:
.sp 2
bsub -n 6 -R"span[hosts=1] rusage[mem=100]affinity[core(1,same=socket,
.br
exclusive=(socket,injob)):cpubind=socket:membind=localonly:distribute=pack]" myjob
.br
Job <6> is submitted to default queue <normal>.
.sp 2
bacct -l -aff 6
.br

.br
Accounting information about jobs that are:
.br
  - submitted by all users.
.br
  - accounted on all projects.
.br
  - completed normally or exited
.br
  - executed on all hosts.
.br
  - submitted to all queues.
.br
  - accounted on all service classes.
.br
------------------------------------------------------------------------------
.br

.br
Job <6>, User <user1>, Project <default>, Status <DONE>, Queue <normal>, Comma
.br
                     nd <myjob>
.br
Thu Feb 14 14:13:46: Submitted from host <hostA>, CWD <$HOME>;
.br
Thu Feb 14 14:15:07: Dispatched 6 Task(s) on Host(s) <hostA> <hostA> <hostA>
.br
                     <hostA> <hostA> <hostA>; Allocated <6> Slot(s) on Host(s)
.br
                     <hostA> <hostA> <hostA> <hostA> <hostA> <hostA>;
.br
                     Effective RES_REQ <select[type == local] order[r15s:pg]
.br
                     rusage[mem=100.00] span[hosts=1] affinity
.br
                     [core(1,same=socket,exclusive=(socket,injob))*1:cpubind=
.br
                     socket:membind=localonly:distribute=pack] >
.br
                     ;
.br
Thu Feb 14 14:16:47: Completed <done>.
.br

.br
AFFINITY:
.br
                    CPU BINDING                          MEMORY BINDING
.br
                    ------------------------             --------------------
.br
HOST                TYPE   LEVEL  EXCL   IDS             POL   NUMA SIZE
.br
hostA               core   socket socket /0/0/0          local 0    16.7MB
.br
hostA               core   socket socket /0/1/0          local 0    16.7MB
.br
hostA               core   socket socket /0/2/0          local 0    16.7MB
.br
hostA               core   socket socket /0/3/0          local 0    16.7MB
.br
hostA               core   socket socket /0/4/0          local 0    16.7MB
.br
hostA               core   socket socket /0/5/0          local 0    16.7MB
.br

.br
Accounting information about this job:
.br
     CPU_T     WAIT     TURNAROUND   STATUS     HOG_FACTOR    MEM    SWAP
.br
      0.01       81            181     done         0.0001     2M    137M
.br
------------------------------------------------------------------------------
.br

.br
SUMMARY:      ( time unit: second )
.br
 Total number of done jobs:       1      Total number of exited jobs:     0
.br
 Total CPU time consumed:       0.0      Average CPU time consumed:     0.0
.br
 Maximum CPU time of a job:     0.0      Minimum CPU time of a job:     0.0
.br
 Total wait time in queues:    81.0
.br
 Average wait time in queue:   81.0
.br
 Maximum wait time in queue:   81.0      Minimum wait time in queue:   81.0
.br
 Average turnaround time:       181 (seconds/job)
.br
 Maximum turnaround time:       181      Minimum turnaround time:       181
.br
 Average hog factor of a job:  0.00 ( cpu time / turnaround time )
.br
 Maximum hog factor of a job:  0.00      Minimum hog factor of a job:  0.00
.br
 Average expansion factor of a job:  1.00 (turnaround time/run time)
.br
 Maximum expansion factor of a job:  1.00   Minimum expansion factor of a job:  1.00
.br
 ...
.SH Termination reasons displayed by bacct

.sp 2
When LSF detects that a job is terminated, bacct -l displays one
of the following termination reasons. The corresponding exit code
integer value that is logged to the \fRJOB_FINISH\fR record in
the lsb.acct file is given in parentheses.
.sp 2
*  \fRTERM_ADMIN\fR: Job was killed by root or LSF administrator
   (15)
.sp 2
*  \fRTERM_BUCKET_KILL\fR: Job was killed with the bkill -b
   command (23)
.sp 2
*  \fRTERM_CHKPNT\fR: Job was killed after checkpointing (13)
.sp 2
*  \fRTERM_CWD_NOTEXIST\fR: current working directory is not
   accessible or does not exist on the execution host (25)
.sp 2
*  \fRTERM_CPULIMIT\fR: Job was killed after it reached LSF CPU
   usage limit (12)
.sp 2
*  \fRTERM_DEADLINE\fR: Job was killed after deadline expires (6)
.sp 2
*  \fRTERM_EXTERNAL_SIGNAL\fR: Job was killed by a signal
   external to LSF (17)
.sp 2
*  \fRTERM_FORCE_ADMIN\fR: Job was killed by root or LSF
   administrator without time for cleanup (9)
.sp 2
*  \fRTERM_FORCE_OWNER\fR: Job was killed by owner without time
   for cleanup (8)
.sp 2
*  \fRTERM_LOAD\fR: Job was killed after load exceeds threshold
   (3)
.sp 2
*  \fRTERM_MEMLIMIT\fR: Job was killed after it reached LSF
   memory usage limit (16)
.sp 2
*  \fRTERM_ORPHAN_SYSTEM\fR: The orphan job was automatically
   terminated by LSF (27)
.sp 2
*  \fRTERM_OWNER\fR: Job was killed by owner (14)
.sp 2
*  \fRTERM_PREEMPT\fR: Job was killed after preemption (1)
.sp 2
*  \fRTERM_PROCESSLIMIT\fR: Job was killed after it reached LSF
   process limit (7)
.sp 2
*  \fRTERM_REMOVE_HUNG_JOB\fR: Job was removed from LSF system
   after it reached a job runtime limit (26)
.sp 2
*  \fRTERM_REQUEUE_ADMIN\fR: Job was killed and requeued by root
   or LSF administrator (11)
.sp 2
*  \fRTERM_REQUEUE_OWNER\fR: Job was killed and requeued by owner
   (10)
.sp 2
*  \fRTERM_RUNLIMIT\fR: Job was killed after it reached LSF
   runtime limit (5)
.sp 2
*  \fRTERM_SWAP\fR: Job was killed after it reached LSF swap
   usage limit (20)
.sp 2
*  \fRTERM_THREADLIMIT\fR: Job was killed after it reached LSF
   thread limit (21)
.sp 2
*  \fRTERM_UNKNOWN\fR: LSF cannot determine a termination reason.
   0 is logged but \fRTERM_UNKNOWN\fR is not displayed (0)
.sp 2
*  \fRTERM_WINDOW\fR: Job was killed after queue run window
   closed (2)
.sp 2
*  \fRTERM_ZOMBIE\fR: Job exited while LSF is not available (19)
.sp 2
\fBTip: \fRThe integer values logged to the \fRJOB_FINISH\fR
record in the lsb.acct file and termination reason keywords are
mapped in the lsbatch.h header file.
.SH Example: Default format

.sp 2
bacct 
.br
Accounting information about jobs that are: 
.br
  - submitted by users user1. 
.br
  - accounted on all projects.
.br
  - completed normally or exited.
.br
  - executed on all hosts.
.br
  - submitted to all queues.
.br
  - accounted on all service classes.
.br
--------------------------------------------------------- -----
.br

.sp 2
SUMMARY:      ( time unit: second ) 
.br
Total number of done jobs:     268      Total number of exited jobs:    31 
.br
Total CPU time consumed:     566.4      Average CPU time consumed:     1.9 
.br
Maximum CPU time of a job:   229.9      Minimum CPU time of a job:     0.0 
.br
Total wait time in queues:   393.0 
.br
Average wait time in queue:    1.3 
.br
Maximum wait time in queue:   97.0      Minimum wait time in queue:    0.0 
.br
Average turnaround time:        32 (seconds/job) 
.br
Maximum turnaround time:       301      Minimum turnaround time:         0 
.br
Average hog factor of a job:  0.16 ( cpu time / turnaround time ) 
.br
Maximum hog factor of a job:  0.91      Minimum hog factor of a job:  0.00 
.br
 Average expansion factor of a job:  1.13 (turnaround time/run time)
.br
 Maximum expansion factor of a job:  2.04   Minimum expansion factor of a job:  1.00
.br
Total Run time consumed:      9466      Average Run time consumed:      31 
.br
 Maximum Run time of a job:     300      Minimum Run time of a job:       0 
.br
Total throughput:           122.17 (jobs/hour)  during    2.45 hours 
.br
Beginning time:       Oct 20 13:40      Ending time:          Oct 20 16:07 
.br

.SH Example: Jobs with triggered job exceptions

.sp 2
bacct -x -l
.br

.br
Accounting information about jobs that are: 
.br
  - submitted by users user1, 
.br
  - accounted on all projects.
.br
  - completed normally or exited
.br
  - executed on all hosts.
.br
  - submitted to all queues.
.br
  - accounted on all service classes.
.br
---------------------------------------------------------
.br

.sp 2
Job <1743>, User <user1>, Project <default>, Status <DONE>, Queue <normal>,  Command<sleep 30>
.br
Mon Aug 11 18:16:17 2009: Submitted from host <hostB>, CWD <$HOME/jobs>, Output File </dev/null>;
.br
Mon Aug 11 18:17:22 2009: Dispatched to <hostC>; Effective RES_REQ <select[(hname = delgpu3 ) && 
.br
											 (type == any)] order[r15s:pg]>;
.br
Mon Aug 11 18:18:54 2009: Completed <done>.
.br

.br

.sp 2
 EXCEPTION STATUS:  underrun 
.br

.br
Accounting information about this job:
.br
     CPU_T     WAIT     TURNAROUND   STATUS     HOG_FACTOR    MEM    SWAP
.br
      0.19       65            157     done         0.0012     4M      5M
.br
--------------------------------------------------- --------
.br
Job <1948>, User <user1>, Project <default>, Status <DONE>, Queue <normal>,Command <sleep 550>, 
.br
Job Description <This job is a test job.>
.br
Tue Aug 12 14:15:03 2009: Submitted from host <hostB>, CWD <$HOME/jobs>, Output File </dev/null>;
.br
Tue Aug 12 14:15:15 2009: Dispatched to <hostC>; Effective RES_REQ <select[(hname = delgpu3 ) && 
.br
											 (type == any)] order[r15s:pg]>;
.br
Tue Aug 12 14:25:08 2009: Completed <done>.
.br

.br

.sp 2
 EXCEPTION STATUS:  overrun  idle 
.br

.br
Accounting information about this job:
.br
     CPU_T     WAIT     TURNAROUND   STATUS     HOG_FACTOR    MEM    SWAP
.br
      0.20       12            605     done         0.0003     4M      5M
.br
-------------------------------------------------------------
.br
Job <1949>, User <user1>, Project <default>, Status <DONE>, Queue <normal>,Command <sleep 400>
.br
Tue Aug 12 14:26:11 2009: Submitted from host <hostB>, CWD <$HOME/jobs>, Output File </dev/null>;
.br
Tue Aug 12 14:26:18 2009: Dispatched to <hostC>; Effective RES_REQ <select[(hname = delgpu3 )
.br
											 && (type == any)] order[r15s:pg]>;
.br
Tue Aug 12 14:33:16 2009: Completed <done>.
.br

.br

.sp 2
 EXCEPTION STATUS:  idle 
.br

.br
Accounting information about this job:
.br
     CPU_T     WAIT     TURNAROUND   STATUS     HOG_FACTOR    MEM    SWAP
.br
      0.17        7            425     done         0.0004     4M      5M
.br

.br

.sp 2
Job <719[14]>, Job Name <test[14]>, User <user1>, Project <default>, Status <EXIT>, Queue <normal>, 
.br
Command </home/user1/job1>, Job Description <This job is another test job.>
.br
Mon Aug 18 20:27:44 2009: Submitted from host <hostB>, CWD <$HOME/jobs>, Output File </dev/null>;
.br
Mon Aug 18 20:31:16 2009: [14] dispatched to <hostA>; Effective RES_REQ <select[(hname = delgpu3 )
.br
											  && (type == any)] order[r15s:pg]>;
.br
Mon Aug 18 20:31:18 2009: Completed <exit>.
.br

.br

.sp 2
 EXCEPTION STATUS:  underrun 
.br

.br
Accounting information about this job:
.br
     CPU_T     WAIT     TURNAROUND   STATUS     HOG_FACTOR    MEM    SWAP
.br
      0.19      212            214     exit         0.0009     2M      4M
.br
--------------------------------------------------- -----------
.br

.br

.sp 2
SUMMARY:      ( time unit: second ) 
.br
 Total number of done jobs:      45      Total number of exited jobs:    56
.br
 Total CPU time consumed:    1009.1      Average CPU time consumed:    10.0
.br
 Maximum CPU time of a job:   991.4      Minimum CPU time of a job:     0.1
.br
 Total wait time in queues: 116864.0
.br
 Average wait time in queue: 1157.1
.br
 Maximum wait time in queue: 7069.0      Minimum wait time in queue:    7.0
.br
 Average turnaround time:      1317 (seconds/job)
.br
 Maximum turnaround time:      7070      Minimum turnaround time:        10
.br
 Average hog factor of a job:  0.01 ( cpu time / turnaround time )
.br
 Maximum hog factor of a job:  0.56      Minimum hog factor of a job:  0.00
.br
 Average expansion factor of a job: 4.6 (turnaround time/run time)
.br
 Maximum expansion factor of a job: 10.2 Minimum expansion factor of a job: 1.00
.br
 Total Run time consumed:     28987      Average Run time consumed:     287 
.br
 Maximum Run time of a job:    6743      Minimum Run time of a job:       2 
.br
 Total throughput:             0.59 (jobs/hour)  during  170.21 hours
.br
 Beginning time:       Aug 11 18:18      Ending time:          Aug 18 20:31
.br

.SH Example: Advance reservation accounting information

.sp 2
bacct -U user1#2
.br
Accounting for:
.br
  - advance reservation IDs: user1#2
.br
  - advance reservations created by user1
.br
-------------------------------------------------------- -----------
.br
RSVID       TYPE      CREATOR    USER    NCPUS       RSV_HOSTS     TIME_WINDOW
.br
user1#2     user        user1   user1      1           hostA:1    9/16/17/36-9/16/17/38
.br
SUMMARY:
.br
Total number of jobs:               4
.br
Total CPU time consumed:      0.5 second
.br
Maximum memory of a job:     4.2 MB
.br
Maximum swap of a job:         5.2 MB
.br
Total duration time:                 0 hour    2 minute    0 second
.br

.SH Example: LSF job termination reason logging

.sp 2
When a job finishes, LSF reports the last job termination action
that it took against the job and logs it to the lsb.acct file.
.sp 2
If a running job exits because of node failure, LSF sets the
correct exit information in the lsb.acct, lsb.events, and the job
output file.
.sp 2
Use the bacct -l command to view job exit information that is
logged to the lsb.acct file:
.sp 2
bacct -l 7265
.br

.br
Accounting information about jobs that are: 
.br
  - submitted by all users.
.br
  - accounted on all projects.
.br
  - completed normally or exited
.br
  - executed on all hosts.
.br
  - submitted to all queues.
.br
  - accounted on all service classes.
.br
--------------------------------------------------------- ---------
.br

.br

.sp 2
Job <7265>, User <lsfadmin>, Project <default>, Status <EXIT>, Queue <normal>, Command 
.br
<srun sleep 100000>, Job Description <This job is also a test job.>
.br
Thu Sep 16 15:22:09 2009: Submitted from host <hostA>, CWD <$HOME>;
.br
Thu Sep 16 15:22:20 2009: Dispatched to 4 Hosts/Processors <4*hostA>;
.br
Thu Sep 16 15:23:21 2009: Completed <exit>; TERM_RUNLIMIT: job killed after reaching LSF run time limit.
.br

.br
Accounting information about this job:
.br
     Share group charged </lsfadmin>
.br
     CPU_T     WAIT     TURNAROUND   STATUS     HOG_FACTOR    MEM    SWAP
.br
      0.04       11             72     exit         0.0006     0K      0K
.br
---------------------------------------------------------- ----------
.br

.br

.sp 2
SUMMARY:      ( time unit: second ) 
.br
 Total number of done jobs:       0      Total number of exited jobs:     1
.br
 Total CPU time consumed:       0.0      Average CPU time consumed:     0.0
.br
 Maximum CPU time of a job:     0.0      Minimum CPU time of a job:     0.0
.br
 Total wait time in queues:    11.0
.br
 Average wait time in queue:   11.0
.br
 Maximum wait time in queue:   11.0      Minimum wait time in queue:   11.0
.br
 Average turnaround time:        72     (seconds/job)
.br
 Maximum turnaround time:        72      Minimum turnaround time:        72
.br
 Average hog factor of a job:  0.00     (cpu time / turnaround time )
.br
 Maximum hog factor of a job:  0.00      Minimum hog factor of a job:  0.00
.br

.br
 ...
.SH Example: Resizable job information

.sp 2
Use the bacct -l command to view resizable job information that
is logged to the lsb.acct file:
.sp 2
*  The autoresizable attribute of a job and the resize
   notification command if the bsub -ar and bsub -rnc
   \fIresize_notification_command\fR commands are specified.
.sp 2
*  Job allocation changes whenever a \fRJOB_RESIZE\fR event is
   logged to the lsb.acct file.
.sp 2
When an allocation grows, the bacct command shows
.sp 2
Additional allocation on <num_hosts> Hosts/Processors <host_list>
.br

.sp 2
When an allocation shrinks, the bacct command shows
.sp 2
Release allocation on <num_hosts> Hosts/Processors <host_list> by user or
.br
administrator <user_name>
.br
Resize notification accepted;
.br

.sp 2
For the following job is submission:
.sp 2
bsub -n 1, 5 -ar myjob
.br

.sp 2
The initial allocation is on \fRhostA\fR and \fRhostB\fR. The
first resize request is allocated on \fRhostC\fR and \fRhostD\fR.
A second resize request is allocated on \fRhostE\fR. The bacct -l
command has the following output:
.sp 2
bacct -l 205
.br

.br
Accounting information about jobs that are:
.br
  - submitted by all users.
.br
  - accounted on all projects.
.br
  - completed normally or exited
.br
  - executed on all hosts.
.br
  - submitted to all queues.
.br
  - accounted on all service classes.
.br
--------------------------------------------- ----
.br

.br

.sp 2
Job <1150>, User <user2>, Project <default>, Status <DONE>, Queue <normal>, Command 
.br
<sleep 10>, Job Description <This job is a test job.>
.br
Mon Jun  2 11:42:00 2009: Submitted from host <hostA>, CWD <$HOME>;
.br
Mon Jun  2 11:43:00 2009: Dispatched 6 Task(s) on Host(s) <hostA> <hostB>, 
.br
                          Allocated 6 Slot(s) on Host(s) <hostA> <hostB>,
.br
                          Effective RES_REQ <select[(hname = delgpu3 ) && 
.br
                          (type == any)] order[r15s:pg]>;
.br

.sp 2
Mon Jun  2 11:43:52 2009: Added 2 Task(s) on Host(s) 2 Hosts/Processors 
.br
                          <hostC> <hostD>, 2 additional Slot(s) allocated 
.br
                          on Host(s) <hostC> <hostD>
.br
Mon Jun  2 11:44:55 2009: Additional allocation on <hostC> <hostD>;
.br
Mon Jun  2 11:51:40 2009: Completed <done>.
.br
 ...
.br

.SH Files

.sp 2
Reads the lsb.acct and lsb.acct.\fIn\fR files.
.SH See also

.sp 2
bhist, bsub, bjobs, lsb.acct, brsvadd, brsvs, bsla,
lsb.serviceclasses